/*! For license information please see fe3fe0d7.280c68a9.js.LICENSE.txt */
"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[9223],{1336:(e,c,r)=>{r.r(c),r.d(c,{assets:()=>t,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=r(4848),a=r(8453);const i={},s="luma",l={id:"api-reference/core/luma",title:"luma",description:"The luma namespace provides luma.gl applications",source:"@site/../docs/api-reference/core/luma.md",sourceDirName:"api-reference/core",slug:"/api-reference/core/luma",permalink:"/docs/api-reference/core/luma",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/luma.gl/tree/main/docs/../docs/api-reference/core/luma.md",tags:[],version:"current",frontMatter:{}},t={},d=[{value:"Device Registration",id:"device-registration",level:2},{value:"Usage",id:"usage",level:2},{value:"Registering Device Backends",id:"registering-device-backends",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>luma.registerDevices()</code>",id:"lumaregisterdevices",level:3},{value:"<code>luma.createDevice()</code>",id:"lumacreatedevice",level:3},{value:"<code>luma.attachDevice()</code>",id:"lumaattachdevice",level:3},{value:"Remarks",id:"remarks",level:2}];function o(e){const c={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(c.h1,{id:"luma",children:"luma"}),"\n",(0,n.jsxs)(c.p,{children:["The ",(0,n.jsx)(c.a,{href:"/docs/api-reference/core/luma",children:(0,n.jsx)(c.code,{children:"luma"})})," namespace provides luma.gl applications\nwith the ability to register GPU Device backends and create ",(0,n.jsx)(c.code,{children:"Device"})," class instances\nusing the registered backends."]}),"\n",(0,n.jsxs)(c.p,{children:["The returned ",(0,n.jsx)(c.a,{href:"/docs/api-reference/core/device",children:(0,n.jsx)(c.code,{children:"Device"})})," instances provides luma.gl applications\nwith further access to the GPU."]}),"\n",(0,n.jsx)(c.h2,{id:"device-registration",children:"Device Registration"}),"\n",(0,n.jsx)(c.pre,{children:(0,n.jsx)(c.code,{className:"language-typescript",children:"import {luma} from '@luma.gl/core';\nimport {WebGLDevice} from '@luma.gl/webgl';\nimport {WebGPUDevice} from '@luma.gl/webgl';\nluma.registerDevices([WebGLDevice, WebGPUDevice]);\n"})}),"\n",(0,n.jsx)(c.p,{children:"It is possible to register more than one device to create an application\nthat can work in both WebGL and WebGPU environments."}),"\n",(0,n.jsxs)(c.p,{children:["The ",(0,n.jsx)(c.code,{children:"@luma.gl/core"})," module defines abstract API interfaces such as ",(0,n.jsx)(c.code,{children:"Device"}),", ",(0,n.jsx)(c.code,{children:"Buffer"})," etc and is not usable on its own."]}),"\n",(0,n.jsxs)(c.p,{children:["One or more GPU backend modules must be also be imported from a corresponding GPU API backend module (",(0,n.jsx)(c.code,{children:"@luma.gl/webgl"})," and/or ",(0,n.jsx)(c.code,{children:"@luma.gl/webgpu"}),") and then registered with luma.gl."]}),"\n",(0,n.jsx)(c.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(c.p,{children:"Create a WebGL2 context, auto creating a canvas"}),"\n",(0,n.jsx)(c.pre,{children:(0,n.jsx)(c.code,{className:"language-typescript",children:"import {luma} from '@luma.gl/core';\nimport {WebGLDevice} from '@luma.gl/webgl';\n\nluma.registerDevices([WebGLDevice]);\nconst webglDevice = luma.createDevice({type: 'webgl', canvas: ...});\n"})}),"\n",(0,n.jsx)(c.p,{children:"Create a WebGL 2 context (throws if WebGL2 not supported)"}),"\n",(0,n.jsx)(c.pre,{children:(0,n.jsx)(c.code,{className:"language-typescript",children:"import {luma} from '@luma.gl/core';\nimport {WebGLDevice} from '@luma.gl/webgl';\n\nluma.registerDevices([WebGLDevice]);\nconst webgpuDevice = luma.createDevice({type: 'webgl', canvas: ...});\n"})}),"\n",(0,n.jsx)(c.h2,{id:"registering-device-backends",children:"Registering Device Backends"}),"\n",(0,n.jsx)(c.p,{children:"Install device modules"}),"\n",(0,n.jsx)(c.pre,{children:(0,n.jsx)(c.code,{className:"language-sh",children:"yarn add @luma.gl/core\nyarn add @luma.gl/webgl\nyarn add @luma.gl/webgpu\n"})}),"\n",(0,n.jsx)(c.p,{children:"To create a WebGPU device:"}),"\n",(0,n.jsx)(c.pre,{children:(0,n.jsx)(c.code,{className:"language-typescript",children:"import {luma} from '@luma.gl/core';\nimport {WebGPUDevice} from '@luma.gl/webgpu';\n\nluma.registerDevices([WebGPUDevice]);\nconst device = await luma.createDevice({type: 'webgpu', canvas: ...});\n"})}),"\n",(0,n.jsx)(c.p,{children:"Pre-register devices"}),"\n",(0,n.jsx)(c.pre,{children:(0,n.jsx)(c.code,{className:"language-typescript",children:"import {luma} from '@luma.gl/core';\nimport {WebGLDevice} from '@luma.gl/webgl';\nimport {WebGPUDevice} from '@luma.gl/webgpu';\n\nluma.registerDevices([WebGLDevice, WebGPUDevice]);\nconst webgpuDevice = luma.createDevice({type: 'best-available', canvas: ...});\n"})}),"\n",(0,n.jsx)(c.p,{children:"Provide devices to createDevice"}),"\n",(0,n.jsx)(c.pre,{children:(0,n.jsx)(c.code,{className:"language-typescript",children:"const webgpuDevice = luma.createDevice({\n  type: 'best-available', \n  canvas: ..., \n  devices: [WebGLDevice, WebGPUDevice]\n});\n"})}),"\n",(0,n.jsx)(c.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(c.h3,{id:"lumaregisterdevices",children:(0,n.jsx)(c.code,{children:"luma.registerDevices()"})}),"\n",(0,n.jsx)(c.pre,{children:(0,n.jsx)(c.code,{className:"language-typescript",children:"luma.registerDevices(devices: Device[]): void;\n"})}),"\n",(0,n.jsxs)(c.p,{children:["Registers one or more devices so that they can be used to create ",(0,n.jsx)(c.code,{children:"Device"})," instances against\nthat GPU backend. They will be available to ",(0,n.jsx)(c.code,{children:"luma.createDevice()"})," and ",(0,n.jsx)(c.code,{children:"luma.attachDevice()"})," calls.\nEnables separation of the code that registers backends from the code that creates devices."]}),"\n",(0,n.jsx)(c.h3,{id:"lumacreatedevice",children:(0,n.jsx)(c.code,{children:"luma.createDevice()"})}),"\n",(0,n.jsx)(c.pre,{children:(0,n.jsx)(c.code,{className:"language-typescript",children:"luma.createDevice({type, ...DeviceProps});\n"})}),"\n",(0,n.jsxs)(c.p,{children:["To enable of this, the application create a ",(0,n.jsx)(c.code,{children:"Device"})," using the ",(0,n.jsx)(c.code,{children:"'best-available'"})," adapter."]}),"\n",(0,n.jsx)(c.p,{children:"luma.gl favors WebGPU over WebGL devices, whenever WebGPU is available."}),"\n",(0,n.jsx)(c.h3,{id:"lumaattachdevice",children:(0,n.jsx)(c.code,{children:"luma.attachDevice()"})}),"\n",(0,n.jsx)(c.pre,{children:(0,n.jsx)(c.code,{className:"language-ts",children:"luma.attachDevice(handle: WebGLRenderingContext | GPUDevice, devices: unknown[])\n"})}),"\n",(0,n.jsx)(c.h2,{id:"remarks",children:"Remarks"}),"\n",(0,n.jsxs)(c.ul,{children:["\n",(0,n.jsxs)(c.li,{children:["At least one backend must be imported and registered with ",(0,n.jsx)(c.code,{children:"luma.registerDevices()"})," for ",(0,n.jsx)(c.code,{children:"luma.createDevice()"})," or ",(0,n.jsx)(c.code,{children:"luma.attachDevice()"})," calls to succeed (unless ",(0,n.jsx)(c.code,{children:"Device"})," implementations are supplied to those calls)."]}),"\n"]})]})}function u(e={}){const{wrapper:c}={...(0,a.R)(),...e.components};return c?(0,n.jsx)(c,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},1020:(e,c,r)=>{var n=r(6540),a=Symbol.for("react.element"),i=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,l=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,t={key:!0,ref:!0,__self:!0,__source:!0};function d(e,c,r){var n,i={},d=null,o=null;for(n in void 0!==r&&(d=""+r),void 0!==c.key&&(d=""+c.key),void 0!==c.ref&&(o=c.ref),c)s.call(c,n)&&!t.hasOwnProperty(n)&&(i[n]=c[n]);if(e&&e.defaultProps)for(n in c=e.defaultProps)void 0===i[n]&&(i[n]=c[n]);return{$$typeof:a,type:e,key:d,ref:o,props:i,_owner:l.current}}c.Fragment=i,c.jsx=d,c.jsxs=d},4848:(e,c,r)=>{e.exports=r(1020)},8453:(e,c,r)=>{r.d(c,{R:()=>s,x:()=>l});var n=r(6540);const a={},i=n.createContext(a);function s(e){const c=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(c):{...c,...e}}),[c,e])}function l(e){let c;return c=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(i.Provider,{value:c},e.children)}}}]);