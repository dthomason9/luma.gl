/*! For license information please see 2ac9ad16.85391529.js.LICENSE.txt */
"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[9614],{990:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>_,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var i=n(4848),r=n(8453),o=n(6254),s=n(3101);const a={},l="Cubemap",c={id:"api/cubemap",title:"Cubemap",description:"",source:"@site/content/examples/api/cubemap.mdx",sourceDirName:"api",slug:"/api/cubemap",permalink:"/examples/api/cubemap",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},u={},d=[];function h(e){const t={h1:"h1",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"cubemap",children:"Cubemap"}),"\n",(0,i.jsx)(o.xN,{}),"\n",(0,i.jsx)(s.gl,{})]})}function _(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},7959:(e,t,n)=>{n.d(t,{M:()=>l,P:()=>a});var i=n(3522);const r={f32:["f32",1],"vec2<f32>":["f32",2],"vec3<f32>":["f32",3],"vec4<f32>":["f32",4],f16:["f16",1],"vec2<f16>":["f16",2],"vec3<f16>":["f16",3],"vec4<f16>":["f16",4],i32:["i32",1],"vec2<i32>":["i32",2],"vec3<i32>":["i32",3],"vec4<i32>":["i32",4],u32:["u32",1],"vec2<u32>":["u32",2],"vec3<u32>":["u32",3],"vec4<u32>":["u32",4]},o={f32:4,f16:2,i32:4,u32:4};var s=n(7621);function a(e,t){const n={};for(const i of e.attributes){const r=c(e,t,i.name);r&&(n[i.name]=r)}return n}function l(e,t,n){void 0===n&&(n=16);const i=a(e,t),r=new Array(n).fill(null);for(const o of Object.values(i))r[o.location]=o;return r}function c(e,t,n){const a=function(e,t){const n=e.attributes.find((e=>e.name===t));n||i.R.warn('shader layout attribute "'+t+'" not present in shader');return n||null}(e,n),l=function(e,t){u(e);let n=function(e,t){for(const n of e)if(n.format&&n.name===t)return{attributeName:n.name,bufferName:t,stepMode:n.stepMode,vertexFormat:n.format,byteOffset:0,byteStride:n.byteStride||0};return null}(e,t);if(n)return n;if(n=function(e,t){for(const i of e){var n;let e=i.byteStride;if("number"!=typeof i.byteStride)for(const t of i.attributes||[]){e+=(0,s.w)(t.format).byteLength}const r=null==(n=i.attributes)?void 0:n.find((e=>e.attribute===t));if(r)return{attributeName:r.attribute,bufferName:i.name,stepMode:i.stepMode,vertexFormat:r.format,byteOffset:r.byteOffset,byteStride:e}}return null}(e,t),n)return n;return i.R.warn('layout for attribute "'+t+'" not present in buffer layout'),null}(t,n);if(!a)return null;const c=function(e){const[t,n]=r[e],i="i32"===t||"u32"===t,s="u32"!==t,a=o[t]*n,l=function(e,t){let n;switch(e){case"f32":n="float32";break;case"i32":n="sint32";break;case"u32":n="uint32";break;case"f16":return t<=2?"float16x2":"float16x4"}return 1===t?n:n+"x"+t}(t,n);return{dataType:t,components:n,defaultVertexFormat:l,byteLength:a,integer:i,signed:s}}(a.type),d=(null==l?void 0:l.vertexFormat)||c.defaultVertexFormat,h=(0,s.w)(d);return{attributeName:(null==l?void 0:l.attributeName)||a.name,bufferName:(null==l?void 0:l.bufferName)||a.name,location:a.location,shaderType:a.type,shaderDataType:c.dataType,shaderComponents:c.components,vertexFormat:d,bufferDataType:h.type,bufferComponents:h.components,normalized:h.normalized,integer:c.integer,stepMode:(null==l?void 0:l.stepMode)||a.stepMode||"vertex",byteOffset:(null==l?void 0:l.byteOffset)||0,byteStride:(null==l?void 0:l.byteStride)||0}}function u(e){for(const t of e)(t.attributes&&t.format||!t.attributes&&!t.format)&&i.R.warn("BufferLayout "+name+" must have either 'attributes' or 'format' field")}},5056:(e,t,n)=>{n.d(t,{h:()=>o});var i=n(7862);let r;r=Symbol.toStringTag;class o extends i.F{get[r](){return"Buffer"}constructor(e,t){const n={...t};(t.usage||0)&o.INDEX&&!t.indexType&&(t.data instanceof Uint32Array?n.indexType="uint32":t.data instanceof Uint16Array&&(n.indexType="uint16")),super(e,n,o.defaultProps),this.debugData=new ArrayBuffer(0),this.usage=t.usage||0,this.indexType=n.indexType,this.updateTimestamp=e.incrementTimestamp()}readSyncWebGL(e,t){throw new Error("not implemented")}_setDebugData(e,t,n){const i=ArrayBuffer.isView(e)?e.buffer:e,r=Math.min(e?e.byteLength:n,o.DEBUG_DATA_MAX_LENGTH);null===i?this.debugData=new ArrayBuffer(r):0===t&&n===i.byteLength?this.debugData=i.slice(0,r):this.debugData=i.slice(t,t+r)}}o.defaultProps={...i.F.defaultProps,usage:0,byteLength:0,byteOffset:0,data:null,indexType:"uint16",mappedAtCreation:!1},o.MAP_READ=1,o.MAP_WRITE=2,o.COPY_SRC=4,o.COPY_DST=8,o.INDEX=16,o.VERTEX=32,o.UNIFORM=64,o.STORAGE=128,o.INDIRECT=256,o.QUERY_RESOLVE=512,o.DEBUG_DATA_MAX_LENGTH=32},9316:(e,t,n)=>{n.d(t,{C:()=>o});var i=n(7862);let r;r=Symbol.toStringTag;class o extends i.F{get[r](){return"ComputePipeline"}constructor(e,t){super(e,t,o.defaultProps),this.hash="",this.shaderLayout=t.shaderLayout}}o.defaultProps={...i.F.defaultProps,shader:void 0,entryPoint:void 0,constants:{},shaderLayout:void 0}},3145:(e,t,n)=>{n.d(t,{r:()=>o});var i=n(7862);let r;r=Symbol.toStringTag;class o extends i.F{get[r](){return"RenderPipeline"}constructor(e,t){super(e,t,o.defaultProps),this.linkStatus="pending",this.hash="",this.shaderLayout=this.props.shaderLayout,this.bufferLayout=this.props.bufferLayout||[]}setUniformsWebGL(e){throw new Error("Use uniform blocks")}}o.defaultProps={...i.F.defaultProps,vs:null,vertexEntryPoint:"vertexMain",vsConstants:{},fs:null,fragmentEntryPoint:"fragmentMain",fsConstants:{},shaderLayout:null,bufferLayout:[],topology:"triangle-list",parameters:{},bindings:{},uniforms:{}}},7862:(e,t,n)=>{n.d(t,{F:()=>r});var i=n(1166);class r{constructor(e,t,n){if(this.userData={},this.destroyed=!1,this.allocatedBytes=0,this._attachedResources=new Set,!e)throw new Error("no device");this._device=e,this.props=function(e,t){const n={...t};for(const i in e)void 0!==e[i]&&(n[i]=e[i]);return n}(t,n);const r="undefined"!==this.props.id?this.props.id:(0,i.L)(this[Symbol.toStringTag]);this.props.id=r,this.id=r,this.userData=this.props.userData||{},this.addStats()}destroy(){this.destroyResource()}delete(){return this.destroy(),this}toString(){return(this[Symbol.toStringTag]||this.constructor.name)+"("+this.id+")"}getProps(){return this.props}attachResource(e){this._attachedResources.add(e)}detachResource(e){this._attachedResources.delete(e)}destroyAttachedResource(e){this._attachedResources.delete(e)&&e.destroy()}destroyAttachedResources(){for(const e of Object.values(this._attachedResources))e.destroy();this._attachedResources=new Set}destroyResource(){this.destroyAttachedResources(),this.removeStats(),this.destroyed=!0}removeStats(){const e=this._device.statsManager.getStats("Resource Counts"),t=this[Symbol.toStringTag];e.get(t+"s Active").decrementCount()}trackAllocatedMemory(e,t){void 0===t&&(t=this[Symbol.toStringTag]);const n=this._device.statsManager.getStats("Resource Counts");n.get("GPU Memory").addCount(e),n.get(t+" Memory").addCount(e),this.allocatedBytes=e}trackDeallocatedMemory(e){void 0===e&&(e=this[Symbol.toStringTag]);const t=this._device.statsManager.getStats("Resource Counts");t.get("GPU Memory").subtractCount(this.allocatedBytes),t.get(e+" Memory").subtractCount(this.allocatedBytes),this.allocatedBytes=0}addStats(){const e=this._device.statsManager.getStats("Resource Counts"),t=this[Symbol.toStringTag];e.get("Resources Created").incrementCount(),e.get(t+"s Created").incrementCount(),e.get(t+"s Active").incrementCount()}}r.defaultProps={id:"undefined",handle:void 0,userData:void 0}},5768:(e,t,n)=>{n.d(t,{L:()=>o});var i=n(7862);let r;r=Symbol.toStringTag;class o extends i.F{get[r](){return"Sampler"}constructor(e,t){super(e,t,o.defaultProps)}}o.defaultProps={...i.F.defaultProps,type:"color-sampler",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge",addressModeW:"clamp-to-edge",magFilter:"nearest",minFilter:"nearest",mipmapFilter:"nearest",lodMinClamp:0,lodMaxClamp:32,compare:"less-equal",maxAnisotropy:1}},7468:(e,t,n)=>{n.d(t,{M:()=>l});var i=n(7862),r=n(1166);function o(e,t,n,i){if(null!=i&&i.inlineSource){const i=function(e,t,n){let i="";for(let r=t-2;r<=t;r++){const o=e[r-1];void 0!==o&&(i+=s(o,t,n))}return i}(t,n);return"\n"+i+(e.linePos>0?" ".repeat(e.linePos+5)+"^^^\n":"")+e.type.toUpperCase()+": "+e.message+"\n\n"}return null!=i&&i.html?"<div class='luma-compiler-log-error' style=\"color:red;\"><b> "+e.type.toUpperCase()+": "+e.message+"</b></div>":e.type.toUpperCase()+": "+e.message}function s(e,t,n){const i=null!=n&&n.html?e.replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;").replaceAll('"',"&quot;").replaceAll("'","&#039;"):e;return function(e,t){let n="";for(let i=e.length;i<t;++i)n+=" ";return n+e}(String(t),4)+": "+i+(null!=n&&n.html?"<br/>":"\n")}let a;a=Symbol.toStringTag;class l extends i.F{get[a](){return"Shader"}constructor(e,t){super(e,{id:c(t),...t},l.defaultProps),this.compilationStatus="pending",this.stage=this.props.stage,this.source=this.props.source}getCompilationInfoSync(){return null}getTranslatedSource(){return null}async debugShader(e){switch(void 0===e&&(e=this.props.debug),e){case"never":return;case"errors":if("success"===this.compilationStatus)return}const t=await this.getCompilationInfo();"warnings"===this.props.debug&&0===(null==t?void 0:t.length)||this._displayShaderLog(t)}_displayShaderLog(e){var t,n;if("undefined"==typeof document||null==(t=document)||!t.createElement)return;const i=u(this.source),r=this.stage+" "+i;let a=function(e,t,n){let i="";const r=t.split(/\r?\n/),a=e.slice().sort(((e,t)=>e.lineNum-t.lineNum));switch((null==n?void 0:n.showSourceCode)||"no"){case"all":let t=0;for(let e=1;e<=r.length;e++)for(i+=s(r[e-1],e,n);a.length>t&&a[t].lineNum===e;){const e=a[t++];i+=o(e,r,e.lineNum,{...n,inlineSource:!1})}return i;case"issues":case"no":for(const s of e)i+=o(s,r,s.lineNum,{inlineSource:"no"!==(null==n?void 0:n.showSourceCode)});return i}}(e,this.source,{showSourceCode:"all",html:!0});const l=this.getTranslatedSource();l&&(a+='<br /><br /><h1>Translated Source</h1><br /><br /><code style="user-select:text;"><pre>'+l+"</pre></code>");const c=document.createElement("Button");c.innerHTML="\n<h1>Shader Compilation Error in "+r+'</h1><br /><br />\n<code style="user-select:text;"><pre>\n'+a+"\n</pre></code>",c.style.top="10px",c.style.left="10px",c.style.position="absolute",c.style.zIndex="9999",c.style.width="100%",c.style.textAlign="left",document.body.appendChild(c);null==(n=document.getElementsByClassName("luma-compiler-log-error")[0])||n.scrollIntoView(),c.onclick=()=>{const e="data:text/plain,"+encodeURIComponent(this.source);navigator.clipboard.writeText(e)}}}function c(e){return u(e.source)||e.id||(0,r.L)("unnamed "+e.stage+"-shader")}function u(e,t){void 0===t&&(t="unnamed");const n=/#define[\s*]SHADER_NAME[\s*]([A-Za-z0-9_-]+)[\s*]/.exec(e);return n?n[1]:t}l.defaultProps={...i.F.defaultProps,language:"auto",stage:void 0,source:"",sourceMap:null,entryPoint:"main",debug:"errors"}},4353:(e,t,n)=>{n.d(t,{X:()=>o});var i=n(7862);let r;r=Symbol.toStringTag;class o extends i.F{get[r](){return"TextureView"}constructor(e,t){super(e,t,o.defaultProps)}}o.defaultProps={...i.F.defaultProps,format:void 0,dimension:void 0,aspect:"all",baseMipLevel:0,mipLevelCount:void 0,baseArrayLayer:0,arrayLayerCount:void 0}},7083:(e,t,n)=>{n.d(t,{g:()=>o});var i=n(7862);let r;r=Symbol.toStringTag;class o extends i.F{get[r](){return"Texture"}static isExternalImage(e){return"undefined"!=typeof ImageData&&e instanceof ImageData||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement}static getExternalImageSize(e){return"undefined"!=typeof ImageData&&e instanceof ImageData||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement?{width:e.width,height:e.height}:"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement?{width:e.naturalWidth,height:e.naturalHeight}:"undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement?{width:e.videoWidth,height:e.videoHeight}:null}isTextureLevelData(e){const t=null==e?void 0:e.data;return ArrayBuffer.isView(t)}getTextureDataSize(e){if(!e)return null;if(ArrayBuffer.isView(e))return null;if(Array.isArray(e))return this.getTextureDataSize(e[0]);if(o.isExternalImage(e))return o.getExternalImageSize(e);if(e&&"object"==typeof e&&e.constructor===Object){const t=e;return{width:t.width,height:t.height}}throw new Error("texture size deduction failed")}getMipLevelCount(e,t){return Math.floor(Math.log2(Math.max(e,t)))+1}getCubeFaceDepth(e){switch(e){case"+X":return 0;case"-X":return 1;case"+Y":return 2;case"-Y":return 3;case"+Z":return 4;case"-Z":return 5;default:throw new Error(e)}}constructor(e,t){if(super(e,t,o.defaultProps),this.dimension=this.props.dimension,this.format=this.props.format,this.width=this.props.width,this.height=this.props.height,this.depth=this.props.depth,void 0===this.props.width||void 0===this.props.height){const e=this.getTextureDataSize(this.props.data);this.width=(null==e?void 0:e.width)||1,this.height=(null==e?void 0:e.height)||1}this.props.mipmaps&&void 0===this.props.mipLevels&&(this.props.mipLevels="pyramid"),this.mipLevels="pyramid"===this.props.mipLevels?this.getMipLevelCount(this.width,this.height):this.props.mipLevels||1,this.updateTimestamp=e.incrementTimestamp()}}o.COPY_SRC=1,o.COPY_DST=2,o.TEXTURE=4,o.STORAGE=8,o.RENDER_ATTACHMENT=16,o.CubeFaces=["+X","-X","+Y","-Y","+Z","-Z"],o.defaultProps={...i.F.defaultProps,data:null,dimension:"2d",format:"rgba8unorm",width:void 0,height:void 0,depth:1,mipmaps:!1,compressed:!1,usage:0,mipLevels:void 0,samples:void 0,sampler:{},view:void 0}},2112:(e,t,n)=>{function i(e){const t=function(e){const t=o[e];return t}(r[e]),n=e.includes("norm"),i=!n&&!e.startsWith("float"),s=e.startsWith("s");return{dataType:r[e],byteLength:t,integer:i,signed:s,normalized:n}}n.d(t,{l:()=>i});const r={uint8:"uint8",sint8:"sint8",unorm8:"uint8",snorm8:"sint8",uint16:"uint16",sint16:"sint16",unorm16:"uint16",snorm16:"sint16",float16:"float16",float32:"float32",uint32:"uint32",sint32:"sint32"},o={uint8:1,sint8:1,uint16:2,sint16:2,float16:2,float32:4,uint32:4,sint32:4}},7621:(e,t,n)=>{n.d(t,{w:()=>r});var i=n(2112);function r(e){let t;e.endsWith("-webgl")&&(e.replace("-webgl",""),t=!0);const[n,r]=e.split("x"),o=n,s=r?parseInt(r):1,a=(0,i.l)(o),l={type:o,components:s,byteLength:a.byteLength*s,integer:a.integer,signed:a.signed,normalized:a.normalized};return t&&(l.webglOnly=!0),l}},1649:(e,t,n)=>{let i;function r(e){return(!i||i.byteLength<e)&&(i=new ArrayBuffer(e)),i}function o(e,t){return new e(r(e.BYTES_PER_ELEMENT*t),0,t)}n.d(t,{X:()=>o,o:()=>r})},3522:(e,t,n)=>{n.d(t,{R:()=>i});const i=new(n(5593).t)({id:"luma.gl"})},1166:(e,t,n)=>{n.d(t,{L:()=>r});const i={};function r(e){void 0===e&&(e="id"),i[e]=i[e]||1;return e+"-"+i[e]++}},4327:(e,t,n)=>{n.d(t,{Dt:()=>o,Qj:()=>r,yt:()=>s});let i="";function r(e){i=e}async function o(e,t){const n=new Image;return n.crossOrigin=(null==t?void 0:t.crossOrigin)||"anonymous",n.src=e.startsWith("http")?e:i+e,await n.decode(),await createImageBitmap(n)}async function s(e,t){return await new Promise(((n,r)=>{try{const o=new Image;o.onload=()=>n(o),o.onerror=()=>r(new Error("Could not load image "+e+".")),o.crossOrigin=(null==t?void 0:t.crossOrigin)||"anonymous",o.src=e.startsWith("http")?e:i+e}catch(o){r(o)}}))}},3101:(e,t,n)=>{n.d(t,{BA:()=>i.BA,Gk:()=>i.Gk,HH:()=>i.HH,Jh:()=>i.Jh,LL:()=>i.LL,MV:()=>i.MV,PZ:()=>i.PZ,Xb:()=>i.Xb,YE:()=>i.YE,Z5:()=>i.Z5,ZM:()=>i.ZM,_j:()=>i._j,gl:()=>i.gl,k9:()=>i.k9,rq:()=>i.rq,y3:()=>i.y3,yt:()=>i.yt,zW:()=>i.zW,zk:()=>i.zk});var i=n(2295)},2295:(e,t,n)=>{n.d(t,{PZ:()=>Cr,gl:()=>br,MV:()=>Pr,k9:()=>Br,zW:()=>Mr,Jh:()=>Or,zk:()=>Gr,y3:()=>Hr,Gk:()=>Fr,LL:()=>Nr,BA:()=>Dr,_j:()=>Lr,YE:()=>yr,ZM:()=>xr,Z5:()=>Ir,Xb:()=>Vr,rq:()=>wr,yt:()=>Ur,HH:()=>Xr});var i=n(6540),r=n(6254);const o=e=>""+e;var s=n(5056),a=n(3522);function l(e){return Array.isArray(e)?0===e.length||"number"==typeof e[0]:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}(e)}class c{constructor(e){if(this.uniforms={},this.modifiedUniforms={},this.modified=!0,this.bindingLayout={},this.needsRedraw="initialized",this.name=(null==e?void 0:e.name)||"unnamed",null!=e&&e.name&&null!=e&&e.shaderLayout){var t;const n=null==e||null==(t=e.shaderLayout.bindings)?void 0:t.find((t=>"uniform"===t.type&&t.name===(null==e?void 0:e.name)));if(!n)throw new Error(null==e?void 0:e.name);const i=n;for(const e of i.uniforms||[])this.bindingLayout[e.name]=e}}setUniforms(e){for(const[t,n]of Object.entries(e))this._setUniform(t,n),this.needsRedraw||this.setNeedsRedraw(this.name+"."+t+"="+n)}setNeedsRedraw(e){this.needsRedraw=this.needsRedraw||e}getAllUniforms(){return this.modifiedUniforms={},this.needsRedraw=!1,this.uniforms||{}}_setUniform(e,t){var n;(function(e,t,n){if(void 0===n&&(n=16),e!==t)return!1;const i=e,r=t;if(!l(i))return!1;if(l(r)&&i.length===r.length)for(let o=0;o<i.length;++o)if(r[o]!==i[o])return!1;return!0})(this.uniforms[e],t)||(this.uniforms[e]=l(n=t)?n.slice():n,this.modifiedUniforms[e]=!0,this.modified=!0)}}const u={f32:{type:"f32",components:1},i32:{type:"i32",components:1},u32:{type:"u32",components:1},"vec2<f32>":{type:"f32",components:2},"vec3<f32>":{type:"f32",components:3},"vec4<f32>":{type:"f32",components:4},"vec2<i32>":{type:"i32",components:2},"vec3<i32>":{type:"i32",components:3},"vec4<i32>":{type:"i32",components:4},"vec2<u32>":{type:"u32",components:2},"vec3<u32>":{type:"u32",components:3},"vec4<u32>":{type:"u32",components:4},"mat2x2<f32>":{type:"f32",components:4},"mat2x3<f32>":{type:"f32",components:6},"mat2x4<f32>":{type:"f32",components:8},"mat3x2<f32>":{type:"f32",components:6},"mat3x3<f32>":{type:"f32",components:9},"mat3x4<f32>":{type:"f32",components:12},"mat4x2<f32>":{type:"f32",components:8},"mat4x3<f32>":{type:"f32",components:12},"mat4x4<f32>":{type:"f32",components:16}};function d(e,t){switch(t){case 1:return e;case 2:return e+e%2;default:return e+(4-e%4)%4}}var h=n(1649);class _{constructor(e){this.layout={};let t=0;for(const[i,r]of Object.entries(e)){const e=u[r],{type:n,components:o}=e;t=d(t,o);const s=t;t+=o,this.layout[i]={type:n,size:o,offset:s}}t+=(4-t%4)%4;const n=4*t;this.byteLength=Math.max(n,1024)}getData(e){const t=Math.max(this.byteLength,1024),n=(0,h.o)(t),i={i32:new Int32Array(n),u32:new Uint32Array(n),f32:new Float32Array(n),f16:new Uint16Array(n)};for(const[r,o]of Object.entries(e)){const e=this.layout[r];if(!e){a.R.warn("Supplied uniform value "+r+" not present in uniform block layout")();continue}const{type:t,size:n,offset:s}=e,c=i[t];if(1===n){if("number"!=typeof o&&"boolean"!=typeof o){a.R.warn("Supplied value for single component uniform "+r+" is not a number: "+o)();continue}c[s]=Number(o)}else{if(!l(o)){a.R.warn("Supplied value for multi component / array uniform "+r+" is not a numeric array: "+o)();continue}c.set(o,s)}}return new Uint8Array(n)}has(e){return Boolean(this.layout[e])}get(e){return this.layout[e]}}class f{constructor(e){this.uniformBlocks=new Map,this.uniformBufferLayouts=new Map,this.uniformBuffers=new Map;for(const[t,n]of Object.entries(e)){const e=t,i=new _(n.uniformTypes||{});this.uniformBufferLayouts.set(e,i);const r=new c({name:t});r.setUniforms(n.defaultUniforms||{}),this.uniformBlocks.set(e,r)}}destroy(){for(const e of this.uniformBuffers.values())e.destroy()}setUniforms(e){for(const[n,i]of Object.entries(e)){var t;null==(t=this.uniformBlocks.get(n))||t.setUniforms(i)}this.updateUniformBuffers()}getUniformBufferByteLength(e){var t;return(null==(t=this.uniformBufferLayouts.get(e))?void 0:t.byteLength)||0}getUniformBufferData(e){var t,n;const i=(null==(t=this.uniformBlocks.get(e))?void 0:t.getAllUniforms())||{};return null==(n=this.uniformBufferLayouts.get(e))?void 0:n.getData(i)}createUniformBuffer(e,t,n){n&&this.setUniforms(n);const i=this.getUniformBufferByteLength(t),r=e.createBuffer({usage:s.h.UNIFORM|s.h.COPY_DST,byteLength:i}),o=this.getUniformBufferData(t);return r.write(o),r}getManagedUniformBuffer(e,t){if(!this.uniformBuffers.get(t)){const n=this.getUniformBufferByteLength(t),i=e.createBuffer({usage:s.h.UNIFORM|s.h.COPY_DST,byteLength:n});this.uniformBuffers.set(t,i)}return this.uniformBuffers.get(t)}updateUniformBuffers(){let e=!1;for(const t of this.uniformBlocks.keys()){const n=this.updateUniformBuffer(t);e||(e=n)}return e&&a.R.log(3,"UniformStore.updateUniformBuffers(): "+e)(),e}updateUniformBuffer(e){const t=this.uniformBlocks.get(e);let n=!1;if(this.uniformBuffers.get(e)&&null!=t&&t.needsRedraw){var i;n||(n=t.needsRedraw);const r=this.getUniformBufferData(e),o=this.uniformBuffers.get(e);null==o||o.write(r);const s=null==(i=this.uniformBlocks.get(e))?void 0:i.getAllUniforms();a.R.log(4,"Writing to uniform buffer "+String(e),r,s)()}return n}}class p{constructor(e){}async onInitialize(e){return null}}let E=1,g=1;class m{constructor(){this.time=0,this.channels=new Map,this.animations=new Map,this.playing=!1,this.lastEngineTime=-1}addChannel(e){const{delay:t=0,duration:n=Number.POSITIVE_INFINITY,rate:i=1,repeat:r=1}=e,o=E++,s={time:0,delay:t,duration:n,rate:i,repeat:r};return this._setChannelTime(s,this.time),this.channels.set(o,s),o}removeChannel(e){this.channels.delete(e);for(const[t,n]of this.animations)n.channel===e&&this.detachAnimation(t)}isFinished(e){const t=this.channels.get(e);return void 0!==t&&this.time>=t.delay+t.duration*t.repeat}getTime(e){if(void 0===e)return this.time;const t=this.channels.get(e);return void 0===t?-1:t.time}setTime(e){this.time=Math.max(0,e);const t=this.channels.values();for(const i of t)this._setChannelTime(i,this.time);const n=this.animations.values();for(const i of n){const{animation:e,channel:t}=i;e.setTime(this.getTime(t))}}play(){this.playing=!0}pause(){this.playing=!1,this.lastEngineTime=-1}reset(){this.setTime(0)}attachAnimation(e,t){const n=g++;return this.animations.set(n,{animation:e,channel:t}),e.setTime(this.getTime(t)),n}detachAnimation(e){this.animations.delete(e)}update(e){this.playing&&(-1===this.lastEngineTime&&(this.lastEngineTime=e),this.setTime(this.time+(e-this.lastEngineTime)),this.lastEngineTime=e)}_setChannelTime(e,t){const n=t-e.delay;n>=e.duration*e.repeat?e.time=e.duration*e.rate:(e.time=Math.max(0,n)%e.duration,e.time*=e.rate)}}class R{constructor(e){this.startIndex=-1,this.endIndex=-1,this.factor=0,this.times=[],this.values=[],this._lastTime=-1,this.setKeyFrames(e),this.setTime(0)}setKeyFrames(e){const t=e.length;this.times.length=t,this.values.length=t;for(let n=0;n<t;++n)this.times[n]=e[n][0],this.values[n]=e[n][1];this._calculateKeys(this._lastTime)}setTime(e){(e=Math.max(0,e))!==this._lastTime&&(this._calculateKeys(e),this._lastTime=e)}getStartTime(){return this.times[this.startIndex]}getEndTime(){return this.times[this.endIndex]}getStartData(){return this.values[this.startIndex]}getEndData(){return this.values[this.endIndex]}_calculateKeys(e){let t=0;const n=this.times.length;for(t=0;t<n-2&&!(this.times[t+1]>e);++t);this.startIndex=t,this.endIndex=t+1;const i=this.times[this.startIndex],r=this.times[this.endIndex];this.factor=Math.min(Math.max(0,(e-i)/(r-i)),1)}}var A=n(4353),T=n(7083),v=n(5768),S=n(3145),C=n(7959);function b(e,t,n){if(!t||t>4)throw new Error("size "+t);const i=t;let r=function(e){const t=ArrayBuffer.isView(e)?e.constructor:e;switch(t){case Float32Array:return"float32";case Uint16Array:return"uint16";case Uint32Array:return"uint32";case Uint8Array:case Uint8ClampedArray:return"uint8";case Int8Array:return"sint8";case Int16Array:return"sint16";case Int32Array:return"sint32";default:throw new Error(t.constructor.name)}}(e);if("uint8"===r||"sint8"===r){if(1===i||3===i)throw new Error("size: "+t);return n&&(r=r.replace("int","norm")),r+"x"+i}if("uint16"===r||"sint16"===r){if(1===i||3===i)throw new Error("size: "+t);return n&&(r=r.replace("int","norm")),r+"x"+i}return 1===i?r:r+"x"+i}var I=n(2973);function N(e){const t={attributes:[],bindings:[]};let n;try{n=function(e){try{return new I.$X(e)}catch(t){if(t instanceof Error)throw t;let e="WGSL parse error";throw"object"==typeof t&&null!=t&&t.message&&(e+=": "+t.message+" "),"object"==typeof t&&null!=t&&t.token&&(e+=t.token.line||""),new Error(e,{cause:t})}}(e)}catch(s){return a.R.error(s.message)(),t}for(const a of n.uniforms){const e=[];for(const t of(null==(i=a.type)?void 0:i.members)||[]){var i;e.push({name:t.name,type:L(t.type)})}t.bindings.push({type:"uniform",name:a.name,location:a.binding,group:a.group,members:e})}const r=n.entry.vertex[0],o=(null==r?void 0:r.inputs.length)||0;for(let a=0;a<o;a++){const e=r.inputs[a];if("location"===e.locationType){const n=L(e.type);t.attributes.push({name:e.name,location:Number(e.location),type:n})}}return t}function L(e){return e.format?e.name+"<"+e.format.name+">":e.name}const P={number:{type:"number",validate:(e,t)=>Number.isFinite(e)&&"object"==typeof t&&(void 0===t.max||e<=t.max)&&(void 0===t.min||e>=t.min)},array:{type:"array",validate:(e,t)=>Array.isArray(e)||ArrayBuffer.isView(e)}};function M(e){let t=O(e);if("object"!==t)return{value:e,...P[t],type:t};if("object"==typeof e)return e?void 0!==e.type?{...e,...P[e.type],type:e.type}:void 0===e.value?{type:"object",value:e}:(t=O(e.value),{...e,...P[t],type:t}):{type:"object",value:null};throw new Error("props")}function O(e){return Array.isArray(e)||ArrayBuffer.isView(e)?"array":typeof e}const F=e=>""+e;var D,B;function y(e,t){return t||(t=e.slice(0)),e.raw=t,e}const x={vertex:F(D||(D=y(["#ifdef MODULE_LOGDEPTH\n  logdepth_adjustPosition(gl_Position);\n#endif\n"],["\\\n#ifdef MODULE_LOGDEPTH\n  logdepth_adjustPosition(gl_Position);\n#endif\n"]))),fragment:F(B||(B=y(["#ifdef MODULE_MATERIAL\n  gl_FragColor = material_filterColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_LIGHTING\n  gl_FragColor = lighting_filterColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_FOG\n  gl_FragColor = fog_filterColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_PICKING\n  gl_FragColor = picking_filterHighlightColor(gl_FragColor);\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_LOGDEPTH\n  logdepth_setFragDepth();\n#endif\n"],["\\\n#ifdef MODULE_MATERIAL\n  gl_FragColor = material_filterColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_LIGHTING\n  gl_FragColor = lighting_filterColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_FOG\n  gl_FragColor = fog_filterColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_PICKING\n  gl_FragColor = picking_filterHighlightColor(gl_FragColor);\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_LOGDEPTH\n  logdepth_setFragDepth();\n#endif\n"])))},U=/void\s+main\s*\([^)]*\)\s*\{\n?/,w=/}\n?[^{}]*$/,G=[],H="__LUMA_INJECT_DECLARATIONS__";function V(e){const t={vertex:{},fragment:{}};for(const n in e){let i=e[n];"string"==typeof i&&(i={order:0,injection:i}),t[X(n)][n]=i}return t}function X(e){const t=e.slice(0,2);switch(t){case"vs":return"vertex";case"fs":return"fragment";default:throw new Error(t)}}function k(e,t,n,i){void 0===i&&(i=!1);const r="vertex"===t;for(const o in n){const t=n[o];t.sort(((e,t)=>e.order-t.order)),G.length=t.length;for(let e=0,n=t.length;e<n;++e)G[e]=t[e].injection;const i=G.join("\n")+"\n";switch(o){case"vs:#decl":r&&(e=e.replace(H,i));break;case"vs:#main-start":r&&(e=e.replace(U,(e=>e+i)));break;case"vs:#main-end":r&&(e=e.replace(w,(e=>i+e)));break;case"fs:#decl":r||(e=e.replace(H,i));break;case"fs:#main-start":r||(e=e.replace(U,(e=>e+i)));break;case"fs:#main-end":r||(e=e.replace(w,(e=>i+e)));break;default:e=e.replace(o,(e=>e+i))}}return e=e.replace(H,""),i&&(e=e.replace(/\}\s*$/,(e=>e+x[t]))),e}function W(e){e.map((e=>K(e)))}function K(e){if(e.instance)return;W(e.dependencies||[]);const{uniformPropTypes:t={},deprecations:n=[],inject:i={}}=e,r={normalizedInjections:V(i),parsedDeprecations:Y(n)};t&&(r.propValidators=function(e){const t={};for(const[n,i]of Object.entries(e))t[n]=M(i);return t}(t)),e.instance=r}function z(e,t,n){var i;null==(i=e.deprecations)||i.forEach((e=>{var i;null!=(i=e.regex)&&i.test(t)&&(e.deprecated?n.deprecated(e.old,e.new)():n.removed(e.old,e.new)())}))}function Y(e){return e.forEach((e=>{if("function"===e.type)e.regex=new RegExp("\\b"+e.old+"\\(");else e.regex=new RegExp(e.type+" "+e.old+";")})),e}function j(e){W(e);const t={},n={};Q({modules:e,level:0,moduleMap:t,moduleDepth:n});const i=Object.keys(n).sort(((e,t)=>n[t]-n[e])).map((e=>t[e]));return W(i),i}function Q(e){const{modules:t,level:n,moduleMap:i,moduleDepth:r}=e;if(n>=5)throw new Error("Possible loop in shader dependency graph");for(const o of t)i[o.name]=o,(void 0===r[o.name]||r[o.name]<n)&&(r[o.name]=n);for(const o of t)o.dependencies&&Q({modules:o.dependencies,level:n+1,moduleMap:i,moduleDepth:r})}var Z,q,J,$,ee;function te(e,t){return t||(t=e.slice(0)),e.raw=t,e}const ne=[[/^(#version[ \t]+(100|300[ \t]+es))?[ \t]*\n/,"#version 300 es\n"],[/\btexture(2D|2DProj|Cube)Lod(EXT)?\(/g,"textureLod("],[/\btexture(2D|2DProj|Cube)(EXT)?\(/g,"texture("]],ie=[...ne,[se("attribute"),"in $1"],[se("varying"),"out $1"]],re=[...ne,[se("varying"),"in $1"]];function oe(e,t){for(const[n,i]of t)e=e.replace(n,i);return e}function se(e){return new RegExp("\\b"+e+"[ \\t]+(\\w+[ \\t]+\\w+(\\[\\w+\\])?;)","g")}function ae(e,t){let n="";for(const i in e){const r=e[i];if(n+="void "+r.signature+" {\n",r.header&&(n+="  "+r.header),t[i]){const e=t[i];e.sort(((e,t)=>e.order-t.order));for(const t of e)n+="  "+t.injection+"\n"}r.footer&&(n+="  "+r.footer),n+="}\n"}return n}function le(e){const t={vertex:{},fragment:{}};for(const n of e){let e,i;"string"!=typeof n?(e=n,i=e.hook):(e={},i=n),i=i.trim();const[r,o]=i.split(":"),s=i.replace(/\(.+/,""),a=Object.assign(e,{signature:o});switch(r){case"vs":t.vertex[s]=a;break;case"fs":t.fragment[s]=a;break;default:throw new Error(r)}}return t}function ce(e,t){if(!e)throw new Error(t||"shadertools: assertion failed.")}function ue(e,t){void 0===t&&(t="unnamed");const n=/#define[^\S\r\n]*SHADER_NAME[^\S\r\n]*([A-Za-z0-9_-]+)\s*/.exec(e);return n?n[1]:t}function de(e){let t=100;const n=e.match(/[^\s]+/g);if(n&&n.length>=2&&"#version"===n[0]){const e=parseInt(n[1],10);Number.isFinite(e)&&(t=e)}if(100!==t&&300!==t)throw new Error("Invalid GLSL version "+t);return t}var he;const _e="\n\n"+H+"\n",fe=F(he||(pe=["precision highp float;\n"],(Ee=["\\\nprecision highp float;\n"])||(Ee=pe.slice(0)),pe.raw=Ee,he=pe));var pe,Ee;function ge(e,t){const{source:n,stage:i,modules:r,hookFunctions:o=[],inject:s={},log:a}=t;ce("string"==typeof n,"shader source must be a string");const l=n;let c="";const u=le(o),d={},h={},_={};for(const p in s){const e="string"==typeof s[p]?{injection:s[p],order:0}:s[p],t=/^(v|f)s:(#)?([\w-]+)$/.exec(p);if(t){const n=t[2],i=t[3];n?"decl"===i?h[p]=[e]:_[p]=[e]:d[p]=[e]}else _[p]=[e]}const f="webgpu"!==e.type?r:[];for(const p of f){a&&z(p,l,a);c+=Ae(p,i);const e=p.injections[i];for(const t in e){const n=/^(v|f)s:#([\w-]+)$/.exec(t);if(n){const i="decl"===n[2]?h:_;i[t]=i[t]||[],i[t].push(e[t])}else d[t]=d[t]||[],d[t].push(e[t])}}return c+=_e,c=k(c,i,h),c+=ae(u[i],d),c+=l,c=k(c,i,_),c}function me(e,t){const{id:n,source:i,stage:r,language:o="glsl",modules:s,defines:a={},hookFunctions:l=[],inject:c={},prologue:u=!0,log:d}=t;ce("string"==typeof i,"shader source must be a string");const h="glsl"===o?function(e,t){return{name:ue(e,t),language:"glsl",version:de(e)}}(i).version:-1,_=e.shaderLanguageVersion,f=100===h?"#version 100":"#version 300 es",p=i.split("\n").slice(1).join("\n"),E={};s.forEach((e=>{Object.assign(E,e.defines)})),Object.assign(E,a);let g="";switch(o){case"wgsl":break;case"glsl":g=u?f+"\n\n// ----- PROLOGUE -------------------------\n"+function(e){const{id:t,source:n,stage:i}=e,r=t&&-1===n.indexOf("SHADER_NAME");return r?"\n#define SHADER_NAME "+t+"_"+i+"\n\n":""}({id:n,source:i,stage:r})+"\n#define SHADER_TYPE_"+r.toUpperCase()+"\n"+function(e){switch(null==e?void 0:e.gpu.toLowerCase()){case"apple":return F(Z||(Z=te(["#define APPLE_GPU\n// Apple optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n"],["\\\n#define APPLE_GPU\n// Apple optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n"])));case"nvidia":return F(q||(q=te(["#define NVIDIA_GPU\n// Nvidia optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n"],["\\\n#define NVIDIA_GPU\n// Nvidia optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n"])));case"intel":return F(J||(J=te(["#define INTEL_GPU\n// Intel optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n// Intel's built-in 'tan' function doesn't have acceptable precision\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n"],["\\\n#define INTEL_GPU\n// Intel optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n// Intel's built-in 'tan' function doesn't have acceptable precision\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n"])));case"amd":return F($||($=te(["#define AMD_GPU\n"],["\\\n#define AMD_GPU\n"])));default:return F(ee||(ee=te(["#define DEFAULT_GPU\n// Prevent driver from optimizing away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n// Headless Chrome's software shader 'tan' function doesn't have acceptable precision\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// If the GPU doesn't have full 32 bits precision, will causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n"],["\\\n#define DEFAULT_GPU\n// Prevent driver from optimizing away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n// Headless Chrome's software shader 'tan' function doesn't have acceptable precision\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// If the GPU doesn't have full 32 bits precision, will causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n"])))}}(e)+"\n"+("fragment"===r?fe:"")+"\n\n// ----- APPLICATION DEFINES -------------------------\n\n"+function(e){void 0===e&&(e={});let t="";for(const n in e){const i=e[n];(i||Number.isFinite(i))&&(t+="#define "+n.toUpperCase()+" "+e[n]+"\n")}return t}(E)+"\n\n":f+"\n"}const m=le(l),R={},A={},T={};for(const S in c){const e="string"==typeof c[S]?{injection:c[S],order:0}:c[S],t=/^(v|f)s:(#)?([\w-]+)$/.exec(S);if(t){const n=t[2],i=t[3];n?"decl"===i?A[S]=[e]:T[S]=[e]:R[S]=[e]}else T[S]=[e]}for(const S of s){var v;d&&z(S,p,d);g+=Ae(S,r);const e=(null==(v=S.instance)?void 0:v.normalizedInjections[r])||{};for(const t in e){const n=/^(v|f)s:#([\w-]+)$/.exec(t);if(n){const i="decl"===n[2]?A:T;i[t]=i[t]||[],i[t].push(e[t])}else R[t]=R[t]||[],R[t].push(e[t])}}return g+="// ----- MAIN SHADER SOURCE -------------------------",g+=_e,g=k(g,r,A),g+=ae(m[r],R),g+=p,g=k(g,r,T),"glsl"===o&&h!==_&&(g=function(e,t){var n;if(300!==Number((null==(n=e.match(/^#version[ \t]+(\d+)/m))?void 0:n[1])||100))throw new Error("luma.gl v9 only supports GLSL 3.00 shader sources");switch(t){case"vertex":return oe(e,ie);case"fragment":return oe(e,re);default:throw new Error(t)}}(g,r)),g.trim()}function Re(e){return function(t){const n={};for(const i of e){const e=null==i.getUniforms?void 0:i.getUniforms(t,n);Object.assign(n,e)}return n}}function Ae(e,t){let n;switch(t){case"vertex":n=e.vs||"";break;case"fragment":n=e.fs||"";break;case"wgsl":n=e.source||"";break;default:ce(!1)}if(!e.name)throw new Error("Shader module must have a name");const i=e.name.toUpperCase().replace(/[^0-9a-z]/gi,"_");return"// ----- MODULE "+e.name+" ---------------\n\n#define MODULE_"+i+"\n"+n+"\n\n"}const Te=/^\s*\#\s*ifdef\s*([a-zA-Z_]+)\s*$/,ve=/^\s*\#\s*endif\s*$/;class Se{constructor(){this._hookFunctions=[],this._defaultModules=[]}static getDefaultShaderAssembler(){return Se.defaultShaderAssembler=Se.defaultShaderAssembler||new Se,Se.defaultShaderAssembler}addDefaultModule(e){this._defaultModules.find((t=>t.name===("string"==typeof e?e:e.name)))||this._defaultModules.push(e)}removeDefaultModule(e){const t="string"==typeof e?e:e.name;this._defaultModules=this._defaultModules.filter((e=>e.name!==t))}addShaderHook(e,t){t&&(e=Object.assign(t,{hook:e})),this._hookFunctions.push(e)}assembleWGSLShader(e){const t=this._getModuleList(e.modules),n=this._hookFunctions,{source:i,getUniforms:r}=function(e){const t=j(e.modules||[]);return{source:ge(e.platformInfo,{...e,source:e.source,stage:"vertex",modules:t}),getUniforms:Re(t)}}({...e,source:e.source,modules:t,hookFunctions:n}),o="wgsl"===e.platformInfo.shaderLanguage?function(e,t){const n=e.split("\n"),i=[];let r=!0,o=null;for(const a of n){const e=a.match(Te),n=a.match(ve);var s;e?(o=e[1],r=Boolean(null==t||null==(s=t.defines)?void 0:s[o])):n?r=!0:r&&i.push(a)}return i.join("\n")}(i):i;return{source:o,getUniforms:r,modules:t}}assembleGLSLShaderPair(e){const t=this._getModuleList(e.modules),n=this._hookFunctions,i=function(e){const{vs:t,fs:n}=e,i=j(e.modules||[]);return{vs:me(e.platformInfo,{...e,source:t,stage:"vertex",modules:i}),fs:me(e.platformInfo,{...e,source:n,stage:"fragment",modules:i}),getUniforms:Re(i)}}({...e,vs:e.vs,fs:e.fs,modules:t,hookFunctions:n});return{...i,modules:t}}_getModuleList(e){void 0===e&&(e=[]);const t=new Array(this._defaultModules.length+e.length),n={};let i=0;for(let r=0,o=this._defaultModules.length;r<o;++r){const e=this._defaultModules[r],o=e.name;t[i++]=e,n[o]=!0}for(let r=0,o=e.length;r<o;++r){const o=e[r],s=o.name;n[s]||(t[i++]=o,n[s]=!0)}return t.length=i,W(t),t}}const Ce={};function be(e){void 0===e&&(e="id"),Ce[e]=Ce[e]||1;return e+"-"+Ce[e]++}class Ie{constructor(e){if(this.userData={},this.bufferLayout=[],this.id=e.id||be("geometry"),this.topology=e.topology,this.indices=e.indices||null,this.attributes=e.attributes,this.vertexCount=e.vertexCount,this.bufferLayout=e.bufferLayout||[],this.indices&&!(this.indices.usage&s.h.INDEX))throw new Error("Index buffer must have INDEX usage")}destroy(){var e;null==(e=this.indices)||e.destroy();for(const t of Object.values(this.attributes))t.destroy()}getVertexCount(){return this.vertexCount}getAttributes(){return this.attributes}getIndexes(){return this.indices||null}_calculateVertexCount(e){return e.byteLength/12}}function Ne(e,t){if(t instanceof Ie)return t;const n=function(e,t){if(!t.indices)return;const n=t.indices.value;return e.createBuffer({usage:s.h.INDEX,data:n})}(e,t),{attributes:i,bufferLayout:r}=function(e,t){const n=[],i={};for(const[o,s]of Object.entries(t.attributes)){let t=o;switch(o){case"POSITION":t="positions";break;case"NORMAL":t="normals";break;case"TEXCOORD_0":t="texCoords";break;case"COLOR_0":t="colors"}if(s){i[t]=e.createBuffer({data:s.value,id:o+"-buffer"});const{value:r,size:a,normalized:l}=s;n.push({name:t,format:b(r,a,l)})}}const r=t._calculateVertexCount(t.attributes,t.indices);return{attributes:i,bufferLayout:n,vertexCount:r}}(e,t);return new Ie({topology:t.topology||"triangle-list",bufferLayout:r,vertexCount:t.vertexCount,indices:n,attributes:i})}var Le=n(9316);class Pe{static getDefaultPipelineFactory(e){return e._lumaData.defaultPipelineFactory=e._lumaData.defaultPipelineFactory||new Pe(e),e._lumaData.defaultPipelineFactory}constructor(e){this._hashCounter=0,this._hashes={},this._renderPipelineCache={},this._computePipelineCache={},this.device=e,this.destroyPolicy=e.props._factoryDestroyPolicy}createRenderPipeline(e){const t={...S.r.defaultProps,...e},n=this._hashRenderPipeline(t);if(!this._renderPipelineCache[n]){const e=this.device.createRenderPipeline({...t,id:t.id?t.id+"-cached":void 0});e.hash=n,this._renderPipelineCache[n]={pipeline:e,useCount:0}}return this._renderPipelineCache[n].useCount++,this._renderPipelineCache[n].pipeline}createComputePipeline(e){const t={...Le.C.defaultProps,...e},n=this._hashComputePipeline(t);if(!this._computePipelineCache[n]){const e=this.device.createComputePipeline({...t,id:t.id?t.id+"-cached":void 0});e.hash=n,this._computePipelineCache[n]={pipeline:e,useCount:0}}return this._computePipelineCache[n].useCount++,this._computePipelineCache[n].pipeline}release(e){const t=e.hash,n=e instanceof Le.C?this._computePipelineCache:this._renderPipelineCache;n[t].useCount--,0===n[t].useCount&&"unused"===this.destroyPolicy&&(n[t].pipeline.destroy(),delete n[t])}_hashComputePipeline(e){return""+this._getHash(e.shader.source)}_hashRenderPipeline(e){const t=e.vs?this._getHash(e.vs.source):0,n=e.fs?this._getHash(e.fs.source):0,i=this._getHash(JSON.stringify(e.bufferLayout));if("webgl"===this.device.type)return t+"/"+n+"V-BL"+i;{const r=this._getHash(JSON.stringify(e.parameters));return t+"/"+n+"V-T"+e.topology+"P"+r+"BL"+i}}_getHash(e){return void 0===this._hashes[e]&&(this._hashes[e]=this._hashCounter++),this._hashes[e]}}Pe.defaultProps={...S.r.defaultProps};var Me=n(7468);class Oe{static getDefaultShaderFactory(e){var t;return(t=e._lumaData).defaultShaderFactory||(t.defaultShaderFactory=new Oe(e)),e._lumaData.defaultShaderFactory}constructor(e){this._cache={},this.device=e,this.destroyPolicy=e.props._factoryDestroyPolicy}createShader(e){const t=this._hashShader(e);let n=this._cache[t];if(!n){const i=this.device.createShader({...e,id:e.id?e.id+"-cached":void 0});this._cache[t]=n={shader:i,useCount:0}}return n.useCount++,n.shader}release(e){const t=this._hashShader(e),n=this._cache[t];n&&(n.useCount--,0===n.useCount&&"unused"===this.destroyPolicy&&(delete this._cache[t],n.shader.destroy()))}_hashShader(e){return e.stage+":"+e.source}}Oe.defaultProps={...Me.M.defaultProps};let Fe=null,De=null;function Be(e,t,n){if(e===t)return!0;if(!n||!e||!t)return!1;if(Array.isArray(e)){if(!Array.isArray(t)||e.length!==t.length)return!1;for(let i=0;i<e.length;i++)if(!Be(e[i],t[i],n-1))return!1;return!0}if(Array.isArray(t))return!1;if("object"==typeof e&&"object"==typeof t){const i=Object.keys(e),r=Object.keys(t);if(i.length!==r.length)return!1;for(const o of i){if(!t.hasOwnProperty(o))return!1;if(!Be(e[o],t[o],n-1))return!1}return!0}return!1}var ye=n(6282);function xe(e){const t={bindings:{},uniforms:{}};return Object.keys(e).forEach((n=>{const i=e[n];var r;r=i,null!==(0,ye.H)(r)||"number"==typeof r||"boolean"==typeof r?t.uniforms[n]=i:t.bindings[n]=i})),t}class Ue{constructor(e){const t=j(Object.values(e));a.R.log(1,"Creating ShaderInputs with modules",t.map((e=>e.name)))(),this.modules=e,this.moduleUniforms={},this.moduleBindings={};for(const[n,i]of Object.entries(e)){const e=n;this.moduleUniforms[e]=i.defaultUniforms||{},this.moduleBindings[e]={}}}destroy(){}setProps(e){for(const t of Object.keys(e)){const n=t,i=e[n]||{},r=this.modules[n];if(!r){a.R.warn("Module "+t+" not found")();continue}const o=this.moduleUniforms[n],s=(null==r.getUniforms?void 0:r.getUniforms(i,this.moduleUniforms[n]))||i;this.moduleUniforms[n]={...o,...s}}}getModules(){return Object.values(this.modules)}getUniformValues(){return this.moduleUniforms}getBindings(){const e={};for(const t of Object.values(this.moduleBindings))Object.assign(e,t);return e}getDebugTable(){const e={};for(const[n,i]of Object.entries(this.moduleUniforms))for(const[r,o]of Object.entries(i)){var t;e[n+"."+r]={type:null==(t=this.modules[n].uniformTypes)?void 0:t[r],value:String(o)}}return e}}var we=n(4327);class Ge{constructor(e,t){var n;this.isReady=!1,this.destroyed=!1,this.resolveReady=()=>{},this.rejectReady=()=>{},this.device=e,"string"==typeof(null==(n=t)?void 0:n.data)&&"2d"===t.dimension&&(t={...t,data:(0,we.Dt)(t.data)}),this.ready=new Promise(((e,t)=>{this.resolveReady=()=>{this.isReady=!0,e()},this.rejectReady=t})),this.initAsync(t)}async initAsync(e){const t=e.data,n=await He(t).then(undefined,undefined);if(this.destroyed)return;const i={...e,data:n};this.texture=this.device.createTexture(i),this.sampler=this.texture.sampler,this.view=this.texture.view,this.isReady=!0}destroy(){this.texture&&(this.texture.destroy(),this.texture=null),this.destroyed=!0}}async function He(e){if(e=await e,Array.isArray(e))return e.map(He);if(e&&"object"==typeof e&&e.constructor===Object){const t=Object.entries(e).map((e=>{let[t,n]=e;return[t,He(n)]}));return Object.fromEntries(t)}return e}class Ve{constructor(e,t){var n,i,r;this.userData={},this.isInstanced=void 0,this.instanceCount=0,this.indexBuffer=null,this.bufferAttributes={},this.constantAttributes={},this.bindings={},this.uniforms={},this.transformFeedback=null,this._attributeInfos={},this._gpuGeometry=null,this._pipelineNeedsUpdate="newly created",this._needsRedraw="initializing",this._destroyed=!1,this._lastDrawTimestamp=-1,this._lastLogTime=0,this._logOpen=!1,this._drawCount=0,this.props={...Ve.defaultProps,...t},t=this.props,this.id=t.id||be("model"),this.device=e,Object.assign(this.userData,t.userData);const o=Object.fromEntries((null==(n=this.props.modules)?void 0:n.map((e=>[e.name,e])))||[]);this.setShaderInputs(t.shaderInputs||new Ue(o));const s=function(e){return{type:e.type,shaderLanguage:e.info.shadingLanguage,shaderLanguageVersion:e.info.shadingLanguageVersion,gpu:e.info.gpu,features:e.features}}(e),a=((null==(i=this.props.modules)?void 0:i.length)>0?this.props.modules:null==(r=this.shaderInputs)?void 0:r.getModules())||[];if("webgpu"===this.device.type&&this.props.source){var l;(l=this.props).shaderLayout||(l.shaderLayout=N(this.props.source));const{source:e,getUniforms:t}=this.props.shaderAssembler.assembleWGSLShader({platformInfo:s,...this.props,modules:a});this.source=e,this._getModuleUniforms=t}else{const{vs:e,fs:t,getUniforms:n}=this.props.shaderAssembler.assembleGLSLShaderPair({platformInfo:s,...this.props,modules:a});this.vs=e,this.fs=t,this._getModuleUniforms=n}this.vertexCount=this.props.vertexCount,this.instanceCount=this.props.instanceCount,this.topology=this.props.topology,this.bufferLayout=this.props.bufferLayout,this.parameters=this.props.parameters,t.geometry&&this.setGeometry(t.geometry),this.pipelineFactory=t.pipelineFactory||Pe.getDefaultPipelineFactory(this.device),this.shaderFactory=t.shaderFactory||Oe.getDefaultShaderFactory(this.device),this.pipeline=this._updatePipeline(),this.vertexArray=e.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry),"isInstanced"in t&&(this.isInstanced=t.isInstanced),t.instanceCount&&this.setInstanceCount(t.instanceCount),t.vertexCount&&this.setVertexCount(t.vertexCount),t.indexBuffer&&this.setIndexBuffer(t.indexBuffer),t.attributes&&this.setAttributes(t.attributes),t.constantAttributes&&this.setConstantAttributes(t.constantAttributes),t.bindings&&this.setBindings(t.bindings),t.uniforms&&this.setUniforms(t.uniforms),t.moduleSettings&&this.updateModuleSettings(t.moduleSettings),t.transformFeedback&&(this.transformFeedback=t.transformFeedback),Object.seal(this)}destroy(){var e;this._destroyed||(this.pipelineFactory.release(this.pipeline),this.shaderFactory.release(this.pipeline.vs),this.pipeline.fs&&this.shaderFactory.release(this.pipeline.fs),this._uniformStore.destroy(),null==(e=this._gpuGeometry)||e.destroy(),this._destroyed=!0)}needsRedraw(){this._getBindingsUpdateTimestamp()>this._lastDrawTimestamp&&this.setNeedsRedraw("contents of bound textures or buffers updated");const e=this._needsRedraw;return this._needsRedraw=!1,e}setNeedsRedraw(e){this._needsRedraw||(this._needsRedraw=e)}predraw(){this.updateShaderInputs(),this.pipeline=this._updatePipeline()}draw(e){let t;this.predraw();try{this._logDrawCallStart(),this.pipeline=this._updatePipeline();const n=this._getBindings();this.pipeline.setBindings(n,{disableWarnings:this.props.disableWarnings}),We(this.uniforms)||this.pipeline.setUniformsWebGL(this.uniforms);const{indexBuffer:i}=this.vertexArray,r=i?i.byteLength/("uint32"===i.indexType?4:2):void 0;t=this.pipeline.draw({renderPass:e,vertexArray:this.vertexArray,isInstanced:this.isInstanced,vertexCount:this.vertexCount,instanceCount:this.instanceCount,indexCount:r,transformFeedback:this.transformFeedback||void 0,parameters:this.parameters,topology:this.topology})}finally{this._logDrawCallEnd()}return this._logFramebuffer(e),t?(this._lastDrawTimestamp=this.device.timestamp,this._needsRedraw=!1):this._needsRedraw="waiting for resource initialization",t}setGeometry(e){var t;null==(t=this._gpuGeometry)||t.destroy();const n=e&&Ne(this.device,e);n&&(this.setTopology(n.topology||"triangle-list"),this.bufferLayout=Xe(n.bufferLayout,this.bufferLayout),this.vertexArray&&this._setGeometryAttributes(n)),this._gpuGeometry=n}setTopology(e){e!==this.topology&&(this.topology=e,this._setPipelineNeedsUpdate("topology"))}setBufferLayout(e){this.bufferLayout=this._gpuGeometry?Xe(e,this._gpuGeometry.bufferLayout):e,this._setPipelineNeedsUpdate("bufferLayout"),this.pipeline=this._updatePipeline(),this.vertexArray=this.device.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry)}setParameters(e){Be(e,this.parameters,2)||(this.parameters=e,this._setPipelineNeedsUpdate("parameters"))}setInstanceCount(e){this.instanceCount=e,void 0===this.isInstanced&&e>0&&(this.isInstanced=!0),this.setNeedsRedraw("instanceCount")}setVertexCount(e){this.vertexCount=e,this.setNeedsRedraw("vertexCount")}setShaderInputs(e){this.shaderInputs=e,this._uniformStore=new f(this.shaderInputs.modules);for(const t of Object.keys(this.shaderInputs.modules)){const e=this._uniformStore.getManagedUniformBuffer(this.device,t);this.bindings[t+"Uniforms"]=e}this.setNeedsRedraw("shaderInputs")}updateShaderInputs(){this._uniformStore.setUniforms(this.shaderInputs.getUniformValues()),this.setNeedsRedraw("shaderInputs")}setBindings(e){Object.assign(this.bindings,e),this.setNeedsRedraw("bindings")}setTransformFeedback(e){this.transformFeedback=e,this.setNeedsRedraw("transformFeedback")}setIndexBuffer(e){this.vertexArray.setIndexBuffer(e),this.setNeedsRedraw("indexBuffer")}setAttributes(e,t){e.indices&&a.R.warn("Model:"+this.id+" setAttributes() - indexBuffer should be set using setIndexBuffer()")();for(const[i,r]of Object.entries(e)){var n;const e=this.bufferLayout.find((e=>ke(e).includes(i)));if(!e){a.R.warn("Model("+this.id+'): Missing layout for buffer "'+i+'".')();continue}const o=ke(e);let s=!1;for(const t of o){const e=this._attributeInfos[t];e&&(this.vertexArray.setBuffer(e.location,r),s=!0)}s||(null!=(n=null==t?void 0:t.disableWarnings)?n:this.props.disableWarnings)||a.R.warn("Model("+this.id+'): Ignoring buffer "'+r.id+'" for unknown attribute "'+i+'"')()}this.setNeedsRedraw("attributes")}setConstantAttributes(e,t){for(const[i,r]of Object.entries(e)){var n;const e=this._attributeInfos[i];e?this.vertexArray.setConstantWebGL(e.location,r):(null!=(n=null==t?void 0:t.disableWarnings)?n:this.props.disableWarnings)||a.R.warn('Model "'+this.id+': Ignoring constant supplied for unknown attribute "'+i+'"')()}this.setNeedsRedraw("constants")}setUniforms(e){We(e)||(this.pipeline.setUniformsWebGL(e),Object.assign(this.uniforms,e)),this.setNeedsRedraw("uniforms")}updateModuleSettings(e){const{bindings:t,uniforms:n}=xe(this._getModuleUniforms(e));Object.assign(this.bindings,t),Object.assign(this.uniforms,n),this.setNeedsRedraw("moduleSettings")}_getBindings(){return Object.entries(this.bindings).reduce(((e,t)=>{let[n,i]=t;return i instanceof Ge?i.isReady&&(e[n]=i.texture):e[n]=i,e}),{})}_getBindingsUpdateTimestamp(){let e=0;for(const t of Object.values(this.bindings))t instanceof A.X?e=Math.max(e,t.texture.updateTimestamp):t instanceof s.h||t instanceof T.g?e=Math.max(e,t.updateTimestamp):t instanceof Ge?e=t.texture?Math.max(e,t.texture.updateTimestamp):1/0:t instanceof v.L||(e=Math.max(e,t.buffer.updateTimestamp));return e}_setGeometryAttributes(e){const t={...e.attributes};for(const[n]of Object.entries(t))this.pipeline.shaderLayout.attributes.find((e=>e.name===n))||"positions"===n||delete t[n];this.vertexCount=e.vertexCount,this.setIndexBuffer(e.indices||null),this.setAttributes(e.attributes,{disableWarnings:!0}),this.setAttributes(t,{disableWarnings:this.props.disableWarnings}),this.setNeedsRedraw("geometry attributes")}_setPipelineNeedsUpdate(e){this._pipelineNeedsUpdate||(this._pipelineNeedsUpdate=e),this.setNeedsRedraw(e)}_updatePipeline(){if(this._pipelineNeedsUpdate){let e=null,t=null;this.pipeline&&(a.R.log(1,"Model "+this.id+': Recreating pipeline because "'+this._pipelineNeedsUpdate+'".')(),e=this.pipeline.vs,t=this.pipeline.fs),this._pipelineNeedsUpdate=!1;const n=this.shaderFactory.createShader({id:this.id+"-vertex",stage:"vertex",source:this.source||this.vs,debug:this.props.debugShaders});let i=null;this.source?i=n:this.fs&&(i=this.shaderFactory.createShader({id:this.id+"-fragment",stage:"fragment",source:this.source||this.fs,debug:this.props.debugShaders})),this.pipeline=this.pipelineFactory.createRenderPipeline({...this.props,bufferLayout:this.bufferLayout,topology:this.topology,parameters:this.parameters,bindings:this._getBindings(),vs:n,fs:i}),this._attributeInfos=(0,C.P)(this.pipeline.shaderLayout,this.bufferLayout),e&&this.shaderFactory.release(e),t&&this.shaderFactory.release(t)}return this.pipeline}_logDrawCallStart(){const e=a.R.level>3?0:1e4;a.R.level<2||Date.now()-this._lastLogTime<e||(this._lastLogTime=Date.now(),this._logOpen=!0,a.R.group(2,">>> DRAWING MODEL "+this.id,{collapsed:a.R.level<=2})())}_logDrawCallEnd(){if(this._logOpen){const e=function(e,t){var n;const i={},r="Values";if(0===e.attributes.length&&(null==(n=e.varyings)||!n.length))return{"No attributes or varyings":{[r]:"N/A"}};for(const o of e.attributes)o&&(i["in "+o.location+" "+o.name+": "+o.type]={[r]:o.stepMode||"vertex"});for(const o of e.varyings||[])i["out "+o.location+" "+o.name]={[r]:JSON.stringify(o.accessor)};return i}(this.pipeline.shaderLayout,this.id);a.R.table(2,e)();const t=this.shaderInputs.getDebugTable();for(const[i,r]of Object.entries(this.uniforms))t[i]={value:r};a.R.table(2,t)();const n=this._getAttributeDebugTable();a.R.table(2,this._attributeInfos)(),a.R.table(2,n)(),a.R.groupEnd(2)(),this._logOpen=!1}}_logFramebuffer(e){const t=a.R.get("framebuffer");if(this._drawCount++,!t||this._drawCount++>3&&this._drawCount%60)return;const n=e.props.framebuffer;n&&function(e,t){var n;let{id:i,minimap:r,opaque:o,top:s="0",left:a="0",rgbaScale:l=1}=t;Fe||(Fe=document.createElement("canvas"),Fe.id=i,Fe.title=i,Fe.style.zIndex="100",Fe.style.position="absolute",Fe.style.top=s,Fe.style.left=a,Fe.style.border="blue 1px solid",Fe.style.transform="scaleY(-1)",document.body.appendChild(Fe),De=Fe.getContext("2d")),Fe.width===e.width&&Fe.height===e.height||(Fe.width=e.width/2,Fe.height=e.height/2,Fe.style.width="400px",Fe.style.height="400px");const c=e.device.readPixelsToArrayWebGL(e),u=null==(n=De)?void 0:n.createImageData(e.width,e.height);if(u){var d;const e=0;for(let t=0;t<c.length;t+=4)u.data[e+t+0]=c[t+0]*l,u.data[e+t+1]=c[t+1]*l,u.data[e+t+2]=c[t+2]*l,u.data[e+t+3]=o?255:c[t+3]*l;null==(d=De)||d.putImageData(u,0,0)}}(n,{id:n.id,minimap:!0})}_getAttributeDebugTable(){const e={};for(const[t,n]of Object.entries(this._attributeInfos)){const i=this.vertexArray.attributes[n.location];e[n.location]={name:t,type:n.shaderType,values:i?this._getBufferOrConstantValues(i,n.bufferDataType):"null"}}if(this.vertexArray.indexBuffer){const{indexBuffer:t}=this.vertexArray,n="uint32"===t.indexType?new Uint32Array(t.debugData):new Uint16Array(t.debugData);e.indices={name:"indices",type:t.indexType,values:n.toString()}}return e}_getBufferOrConstantValues(e,t){const n=function(e){switch(e){case"float32":return Float32Array;case"uint32":return Uint32Array;case"sint32":return Int32Array;case"uint16":case"unorm16":return Uint16Array;case"sint16":case"snorm16":return Int16Array;case"uint8":case"unorm8":return Uint8Array;case"sint8":case"snorm8":return Int8Array;default:throw new Error(e)}}(t);return(e instanceof s.h?new n(e.debugData):e).toString()}}function Xe(e,t){const n=[...e];for(const i of t){const e=n.findIndex((e=>e.name===i.name));e<0?n.push(i):n[e]=i}return n}function ke(e){var t;return e.attributes?null==(t=e.attributes)?void 0:t.map((e=>e.attribute)):[e.name]}function We(e){let t=!0;for(const n in e){t=!1;break}return t}Ve.defaultProps={...S.r.defaultProps,source:void 0,vs:null,fs:null,id:"unnamed",handle:void 0,userData:{},defines:{},modules:[],moduleSettings:void 0,geometry:null,indexBuffer:null,attributes:{},constantAttributes:{},varyings:[],isInstanced:void 0,instanceCount:0,vertexCount:0,shaderInputs:void 0,pipelineFactory:void 0,shaderFactory:void 0,transformFeedback:void 0,shaderAssembler:Se.getDefaultShaderAssembler(),debugShaders:void 0,disableWarnings:void 0};class Ke{constructor(e){this.userData={};const{attributes:t={},indices:n=null,vertexCount:i=null}=e;this.id=e.id||be("geometry"),this.topology=e.topology,n&&(this.indices=ArrayBuffer.isView(n)?{value:n,size:1}:n),this.attributes={};for(const[r,o]of Object.entries(t)){const e=ArrayBuffer.isView(o)?{value:o}:o;if(!ArrayBuffer.isView(e.value))throw new Error(this._print(r)+": must be typed array or object with value as typed array");if("POSITION"!==r&&"positions"!==r||e.size||(e.size=3),"indices"===r){if(this.indices)throw new Error("Multiple indices detected");this.indices=e}else this.attributes[r]=e}this.indices&&void 0!==this.indices.isIndexed&&(this.indices=Object.assign({},this.indices),delete this.indices.isIndexed),this.vertexCount=i||this._calculateVertexCount(this.attributes,this.indices)}getVertexCount(){return this.vertexCount}getAttributes(){return this.indices?{indices:this.indices,...this.attributes}:this.attributes}_print(e){return"Geometry "+this.id+" attribute "+e}_setAttributes(e,t){return this}_calculateVertexCount(e,t){if(t)return t.value.length;let n=1/0;for(const i of Object.values(e)){const{value:e,size:t,constant:r}=i;!r&&e&&void 0!==t&&t>=1&&(n=Math.min(n,e.length/t))}return n}}class ze extends Ke{constructor(e){void 0===e&&(e={});const{id:t=be("cube-geometry"),indices:n=!0}=e;super(n?{...e,id:t,topology:"triangle-list",indices:{size:1,value:Ye},attributes:{...et,...e.attributes}}:{...e,id:t,topology:"triangle-list",indices:void 0,attributes:{...tt,...e.attributes}})}}const Ye=new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),je=new Float32Array([-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1]),Qe=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]),Ze=new Float32Array([0,0,1,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,1,1,0,1]),qe=new Float32Array([1,-1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,-1,-1,1,1,1,1,1,1,1,-1,-1,1,-1,-1,1,1,1,1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,1,1,1,-1,1,1,-1,-1,1,-1,-1,1,1,-1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1]),Je=new Float32Array([1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,1,0,0]),$e=new Float32Array([1,0,1,1,0,0,1,1,0,0,0,1,1,0,0,1,1,0,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,0,1,1,0,1,1,1,0,1,0,1,0,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,0,1,1,1,0,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,0,1,1,1,0,1,1,0,0,1,0,1,0,1]),et={POSITION:{size:3,value:je},NORMAL:{size:3,value:Qe},TEXCOORD_0:{size:2,value:Ze}},tt={POSITION:{size:3,value:qe},TEXCOORD_0:{size:2,value:Je},COLOR_0:{size:3,value:$e}};var nt,it;function rt(e,t){return t||(t=e.slice(0)),e.raw=t,e}const ot={props:{},uniforms:{},name:"dirlight",dependencies:[],vs:F(nt||(nt=rt(["out vec3 dirlight_vNormal;\n\nvoid dirlight_setNormal(vec3 normal) {\n  dirlight_vNormal = normalize(normal);\n}\n"],["\\\nout vec3 dirlight_vNormal;\n\nvoid dirlight_setNormal(vec3 normal) {\n  dirlight_vNormal = normalize(normal);\n}\n"]))),fs:F(it||(it=rt(["uniform dirlightUniforms {\n  vec3 lightDirection;\n} dirlight;\n\nin vec3 dirlight_vNormal;\n\n// Returns color attenuated by angle from light source\nvec4 dirlight_filterColor(vec4 color) {\n  float d = abs(dot(dirlight_vNormal, normalize(dirlight.lightDirection)));\n  return vec4(color.rgb * d, color.a);\n}\n"],["\\\nuniform dirlightUniforms {\n  vec3 lightDirection;\n} dirlight;\n\nin vec3 dirlight_vNormal;\n\n// Returns color attenuated by angle from light source\nvec4 dirlight_filterColor(vec4 color) {\n  float d = abs(dot(dirlight_vNormal, normalize(dirlight.lightDirection)));\n  return vec4(color.rgb * d, color.a);\n}\n"]))),uniformTypes:{lightDirection:"vec3<f32>"},defaultUniforms:{lightDirection:new Float32Array([1,1,2])},getUniforms:function(e){void 0===e&&(e=ot.defaultUniforms);const t={};e.lightDirection&&(t.dirlight_uLightDirection=e.lightDirection);return t}};var st,at,lt=n(5663),ct=n(4901);function ut(){let e=1,t=1;return()=>{return e=Math.sin(17.23*t),t=Math.cos(27.92*e),(n=1432.71*Math.abs(e*t))-Math.floor(n);var n}}function dt(e,t){return t||(t=e.slice(0)),e.raw=t,e}const ht=ut(),_t={uniformTypes:{uColor:"vec3<f32>",uModel:"mat4x4<f32>",uView:"mat4x4<f32>",uProjection:"mat4x4<f32>"}},ft=o(st||(st=dt(["#version 300 es\n\nin vec3 positions;\nin vec3 normals;\n\nuniform appUniforms {\n  vec3 uColor;\n  mat4 uModel;\n  mat4 uView;\n  mat4 uProjection;\n} app;\n\nout vec3 color;\n\nvoid main(void) {\n  vec3 normal = vec3(app.uModel * vec4(normals, 0.0));\n\n  // Set up data for modules\n  color = app.uColor;\n  dirlight_setNormal(normal);\n  gl_Position = app.uProjection * app.uView * app.uModel * vec4(positions, 1.0);\n}\n"],["\\\n#version 300 es\n\nin vec3 positions;\nin vec3 normals;\n\nuniform appUniforms {\n  vec3 uColor;\n  mat4 uModel;\n  mat4 uView;\n  mat4 uProjection;\n} app;\n\nout vec3 color;\n\nvoid main(void) {\n  vec3 normal = vec3(app.uModel * vec4(normals, 0.0));\n\n  // Set up data for modules\n  color = app.uColor;\n  dirlight_setNormal(normal);\n  gl_Position = app.uProjection * app.uView * app.uModel * vec4(positions, 1.0);\n}\n"]))),pt=o(at||(at=dt(["#version 300 es\n\nprecision highp float;\n\nin vec3 color;\nout vec4 fragColor;\n\nvoid main(void) {\n  fragColor = vec4(color, 1.);\n  fragColor = dirlight_filterColor(fragColor);\n}\n"],["\\\n#version 300 es\n\nprecision highp float;\n\nin vec3 color;\nout vec4 fragColor;\n\nvoid main(void) {\n  fragColor = vec4(color, 1.);\n  fragColor = dirlight_filterColor(fragColor);\n}\n"])));class Et extends p{constructor(e){let{device:t,aspect:n,animationLoop:i}=e;super(),this.translations=[[2,-2,0],[2,2,0],[-2,2,0],[-2,-2,0]],this.rotations=[[ht(),ht(),ht()],[ht(),ht(),ht()],[ht(),ht(),ht()],[ht(),ht(),ht()]],this.colors=[[1,0,0],[0,1,0],[0,0,1],[1,1,0]],this.keyFrameData=[[0,0],[1e3,2*Math.PI],[2e3,Math.PI],[3e3,2*Math.PI],[4e3,0]],this.globalUniformStore=new f({dirlight:ot});const r=document.getElementById("play"),o=document.getElementById("pause");this.timeSlider=document.getElementById("time"),r&&o&&(r.addEventListener("click",(()=>this.timeline.play())),o.addEventListener("click",(()=>this.timeline.pause())),this.timeSlider.addEventListener("input",(e=>this.timeline.setTime(parseFloat(e.target.value))))),this.timeline=new m,i.attachTimeline(this.timeline),this.timeline.play();const s=[this.timeline.addChannel({delay:2e3,rate:.5,duration:8e3,repeat:2}),this.timeline.addChannel({delay:1e4,rate:.2,duration:2e4,repeat:1}),this.timeline.addChannel({delay:7e3,rate:1,duration:4e3,repeat:8}),this.timeline.addChannel({delay:0,rate:.8,duration:5e3,repeat:Number.POSITIVE_INFINITY})];this.cubes=new Array(4);const a=[new R(this.keyFrameData),new R(this.keyFrameData),new R(this.keyFrameData),new R(this.keyFrameData)];for(let l=0;l<4;++l){this.timeline.attachAnimation(a[l],s[l]);const e=new f({app:_t});e.setUniforms({app:{uProjection:(new lt.k).perspective({fovy:(0,ct.F2)(60),aspect:n,near:1,far:20}),uView:(new lt.k).lookAt({center:[0,0,0],eye:[0,0,-8]}),uColor:this.colors[l]}}),this.cubes[l]={uniformStore:e,translation:this.translations[l],rotation:this.rotations[l],keyFrames:a[l],model:new Ve(t,{id:"cube-"+l,vs:ft,fs:pt,modules:[ot],geometry:new ze,parameters:{depthWriteEnabled:!0,depthCompare:"less-equal"},bindings:{app:e.getManagedUniformBuffer(t,"app"),dirlight:this.globalUniformStore.getManagedUniformBuffer(t,"dirlight")}})}}}onFinalize(){for(const e of this.cubes)e.model.destroy()}onRender(e){let{device:t}=e;this.timeSlider&&(this.timeSlider.value=this.timeline.getTime());const n=new lt.k;for(const r of this.cubes){const e=r.keyFrames.getStartData(),t=r.keyFrames.getEndData(),i=e+r.keyFrames.factor*(t-e),o=r.rotation[0]+i,s=r.rotation[1]+i,a=r.rotation[2];n.identity().translate(r.translation).rotateXYZ([o,s,a]),r.model.setUniforms({}),r.uniformStore.setUniforms({app:{uModel:n}}),r.uniformStore.updateUniformBuffers()}const i=t.beginRenderPass({clearColor:[0,0,0,1]});for(const r of this.cubes)r.model.draw(i);i.end()}}var gt,mt,Rt,At;function Tt(e,t){return t||(t=e.slice(0)),e.raw=t,e}Et.info='Key frame animation based on multiple hierarchical timelines.\n<button id="play">Play</button>\n<button id="pause">Pause</button><BR>\nTime: <input type="range" id="time" min="0" max="30000" step="1"><BR>\n';class vt extends Ve{constructor(e,t){const n=o(gt||(gt=Tt(["#version 300 es\nin vec3 positions;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\n\nout vec3 vPosition;\n\nvoid main(void) {\n  gl_Position = uProjection * uView * uModel * vec4(positions, 1.0);\n  vPosition = positions;\n}\n"],["\\\n#version 300 es\nin vec3 positions;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\n\nout vec3 vPosition;\n\nvoid main(void) {\n  gl_Position = uProjection * uView * uModel * vec4(positions, 1.0);\n  vPosition = positions;\n}\n"]))),i=o(mt||(mt=Tt(["#version 300 es\nprecision highp float;\n\nuniform samplerCube uTextureCube;\nin vec3 vPosition;\nout vec4 fragColor;\n\nvoid main(void) {\n  // The outer cube just samples the texture cube directly\n  fragColor = texture(uTextureCube, normalize(vPosition));\n}\n"],["\\\n#version 300 es\nprecision highp float;\n\nuniform samplerCube uTextureCube;\nin vec3 vPosition;\nout vec4 fragColor;\n\nvoid main(void) {\n  // The outer cube just samples the texture cube directly\n  fragColor = texture(uTextureCube, normalize(vPosition));\n}\n"])));super(e,{...t,geometry:new ze,fs:i,vs:n})}}class St extends Ve{constructor(e,t){const n=o(Rt||(Rt=Tt(["#version 300 es\nin vec3 positions;\nin vec3 normals;\nin vec2 texCoords;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\n\nout vec3 vPosition;\nout vec3 vNormal;\nout vec2 vUV;\n\nvoid main(void) {\n  gl_Position = uProjection * uView * uModel * vec4(positions, 1.0);\n  vPosition = vec3(uModel * vec4(positions,1));\n  vNormal = vec3(uModel * vec4(normals, 0));\n  vUV = texCoords;\n}\n"],["\\\n#version 300 es\nin vec3 positions;\nin vec3 normals;\nin vec2 texCoords;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\n\nout vec3 vPosition;\nout vec3 vNormal;\nout vec2 vUV;\n\nvoid main(void) {\n  gl_Position = uProjection * uView * uModel * vec4(positions, 1.0);\n  vPosition = vec3(uModel * vec4(positions,1));\n  vNormal = vec3(uModel * vec4(normals, 0));\n  vUV = texCoords;\n}\n"]))),i=o(At||(At=Tt(["#version 300 es\nprecision highp float;\n\nuniform sampler2D uTexture;\nuniform samplerCube uTextureCube;\nuniform vec3 uEyePosition;\n\nin vec3 vPosition;\nin vec3 vNormal;\nin vec2 vUV;\nout vec4 fragColor;\n\nvoid main(void) {\n  vec4 color = texture(uTexture, vec2(vUV.x, 1.0 - vUV.y));\n  vec3 reflectedDir = reflect(normalize(vPosition - uEyePosition), vNormal);\n  vec4 reflectedColor = texture(uTextureCube, reflectedDir);\n\n  fragColor = color; //  * reflectedColor;\n}\n"],["\\\n#version 300 es\nprecision highp float;\n\nuniform sampler2D uTexture;\nuniform samplerCube uTextureCube;\nuniform vec3 uEyePosition;\n\nin vec3 vPosition;\nin vec3 vNormal;\nin vec2 vUV;\nout vec4 fragColor;\n\nvoid main(void) {\n  vec4 color = texture(uTexture, vec2(vUV.x, 1.0 - vUV.y));\n  vec3 reflectedDir = reflect(normalize(vPosition - uEyePosition), vNormal);\n  vec4 reflectedColor = texture(uTextureCube, reflectedDir);\n\n  fragColor = color; //  * reflectedColor;\n}\n"])));super(e,{...t,geometry:new ze,vs:n,fs:i})}}class Ct extends p{constructor(e){let{device:t}=e;super();const n=t.createTexture({dimension:"cube",mipmaps:!0,data:{"+X":(0,we.yt)("sky-posx.png"),"-X":(0,we.yt)("sky-negx.png"),"+Y":(0,we.yt)("sky-posy.png"),"-Y":(0,we.yt)("sky-negy.png"),"+Z":(0,we.yt)("sky-posz.png"),"-Z":(0,we.yt)("sky-negz.png")}}),i=new Ge(t,{data:(0,we.yt)("vis-logo.png"),mipmaps:!0,sampler:{magFilter:"linear",minFilter:"linear",mipmapFilter:"nearest"}});this.cube=new vt(t,{bindings:{uTextureCube:n},uniforms:{uModel:(new lt.k).scale([20,20,20])},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal"}}),this.prism=new St(t,{bindings:{uTexture:i,uTextureCube:n},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal"}})}onFinalize(){this.prism.destroy(),this.cube.destroy()}onRender(e){let{device:t,aspect:n,tick:i}=e;const r=[5,-3,5],o=(new lt.k).lookAt({eye:r}),s=(new lt.k).perspective({fovy:(0,ct.F2)(75),aspect:n}),a=t.beginRenderPass({clearColor:[0,0,0,1]});this.cube.setUniforms({uView:o,uProjection:s}),this.cube.draw(a),this.prism.setUniforms({uEyePosition:r,uView:o,uProjection:s,uModel:(new lt.k).rotateX(.01*i).rotateY(.013*i)}),this.prism.draw(a),a.end()}}function bt(e,t,n){return e+n*(t-e)}function It(e,t){for(var n=[],i=e;i<=t;i++)n.push(i);return n}function Nt(e,t){for(var n,i=e.length,r=0;i;)n=Math.floor(t()*i),r=e[i-=1],e[i]=e[n],e[n]=r;return e}Ct.info="\n<p>\nUses a luma.gl <code>TextureCube</code> to simulate a reflective\nsurface\n</p>\n";var Lt,Pt,Mt=function(e){return e*e*e*(e*(6*e-15)+10)},Ot=function(e,t,n,i){var r=15&e,o=r<8?t:n,s=r<4?n:12==r||14==r?t:i;return(1&r?-o:o)+(2&r?-s:s)};function Ft(e,t){return t||(t=e.slice(0)),e.raw=t,e}const Dt=ut(),Bt=o(Lt||(Lt=Ft(["#version 300 es\nin vec3 position;\n\nuniform mat4 uMVP;\n\nout vec3 vUV;\nvoid main() {\n  vUV = position.xyz + 0.5;\n  gl_Position = uMVP * vec4(position, 1.0);\n  gl_PointSize = 2.0;\n}"],["\\\n#version 300 es\nin vec3 position;\n\nuniform mat4 uMVP;\n\nout vec3 vUV;\nvoid main() {\n  vUV = position.xyz + 0.5;\n  gl_Position = uMVP * vec4(position, 1.0);\n  gl_PointSize = 2.0;\n}"]))),yt=o(Pt||(Pt=Ft(["#version 300 es\nprecision highp float;\nprecision lowp sampler3D;\n\nuniform sampler3D uTexture;\nuniform float uTime;\n\nin vec3 vUV;\nout vec4 fragColor;\n\nvoid main() {\n  vec4 sampleColor = texture(uTexture, vUV + vec3(0.0, 0.0, uTime));\n  float alpha = sampleColor.r * 0.01;\n  fragColor = vec4(fract(vUV) * alpha, alpha * 0.3);\n  // fragColor = vec4(fract(uTime), 0., 0., 1.);\n}"],["\\\n#version 300 es\nprecision highp float;\nprecision lowp sampler3D;\n\nuniform sampler3D uTexture;\nuniform float uTime;\n\nin vec3 vUV;\nout vec4 fragColor;\n\nvoid main() {\n  vec4 sampleColor = texture(uTexture, vUV + vec3(0.0, 0.0, uTime));\n  float alpha = sampleColor.r * 0.01;\n  fragColor = vec4(fract(vUV) * alpha, alpha * 0.3);\n  // fragColor = vec4(fract(uTime), 0., 0., 1.);\n}"])));class xt extends p{constructor(e){let{device:t}=e;super(),this.mvpMat=new lt.k,this.viewMat=(new lt.k).lookAt({eye:[1,1,1]});const n=function(e){if("object"!=typeof e)throw new TypeError("params is not an object");if("function"!=typeof e.interpolation)throw new TypeError("params.interpolation is not a function");if(!Array.isArray(e.permutation))throw new TypeError("params.permutation is not an array");if(256!=e.permutation.length)throw new Error("params.permutation must have 256 items");for(var t=e.interpolation,n=e.permutation.slice(0),i=0;i<256;i++)n[256+i]=n[i];return function(e,i,r){var o=Math.floor(e),s=Math.floor(i),a=Math.floor(r),l=255&o,c=255&s,u=255&a;i-=s,r-=a;var d=Mt(e-=o),h=Mt(i),_=Mt(r),f=n[l]+c,p=n[f]+u,E=n[f+1]+u,g=n[l+1]+c,m=n[g]+u,R=n[g+1]+u;return t(t(t(Ot(n[p],e,i,r),Ot(n[m],e-1,i,r),d),t(Ot(n[E],e,i-1,r),Ot(n[R],e-1,i-1,r),d),h),t(t(Ot(n[p+1],e,i,r-1),Ot(n[m+1],e-1,i,r-1),d),t(Ot(n[E+1],e,i-1,r-1),Ot(n[R+1],e-1,i-1,r-1),d),h),_)}}({interpolation:bt,permutation:Nt(It(0,255),Dt)}),i=1/32,r=new Float32Array(98304);let o=0,s=-.5;for(let _=0;_<32;++_){let e=-.5;for(let t=0;t<32;++t){let t=-.5;for(let n=0;n<32;++n)r[o++]=s,r[o++]=e,r[o++]=t,t+=i;e+=i}s+=i}const a=t.createBuffer(r),l=16,c=1.12,u=new Uint8Array(4096);let d=0;for(let _=0;_<l;++_)for(let e=0;e<l;++e)for(let t=0;t<l;++t){const i=n(_/c,e/c,t/c);u[d++]=255*(.5+.5*i)}const h=t.createTexture({dimension:"3d",data:u,width:l,height:l,depth:l,format:"r8unorm",sampler:{magFilter:"nearest",minFilter:"nearest",mipmapFilter:"nearest"}});this.cloud=new Ve(t,{vs:Bt,fs:yt,topology:"point-list",vertexCount:r.length/3,bufferLayout:[{name:"position",format:"float32x3"}],attributes:{position:a},bindings:{uTexture:h},uniforms:{uView:this.viewMat},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal",blendColorOperation:"add",blendColorSrcFactor:"one",blendColorDstFactor:"one-minus-src-alpha"}})}onFinalize(){this.cloud.destroy()}onRender(e){let{device:t,tick:n,aspect:i}=e;this.mvpMat.perspective({fovy:(0,ct.F2)(75),aspect:i,near:.1,far:10}).multiplyRight(this.viewMat);const r=t.beginRenderPass({clearColor:[0,0,0,1]});this.cloud.setUniforms({uTime:n/100,uMVP:this.mvpMat}),this.cloud.draw(r),r.end()}}var Ut,wt;function Gt(e,t){return t||(t=e.slice(0)),e.raw=t,e}xt.info="\n<p>\nVolumetric 3D noise visualized using a <b>3D texture</b>.\n<p>\nUses the luma.gl <code>Texture3D</code> class.\n",xt.props={useDevicePixels:!0};const Ht=new Float32Array([0,1,1,1]),Vt=F(Ut||(Ut=Gt(["uniform pickingUniforms {\n  float isActive;\n  float isAttribute;\n  float isHighlightActive;\n  float useFloatColors;\n  vec3 highlightedObjectColor;\n  vec4 highlightColor;\n} picking;\n\nout vec4 picking_vRGBcolor_Avalid;\n\n// Normalize unsigned byte color to 0-1 range\nvec3 picking_normalizeColor(vec3 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\n// Normalize unsigned byte color to 0-1 range\nvec4 picking_normalizeColor(vec4 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\nbool picking_isColorZero(vec3 color) {\n  return dot(color, vec3(1.0)) < 0.00001;\n}\n\nbool picking_isColorValid(vec3 color) {\n  return dot(color, vec3(1.0)) > 0.00001;\n}\n\n// Check if this vertex is highlighted \nbool isVertexHighlighted(vec3 vertexColor) {\n  vec3 highlightedObjectColor = picking_normalizeColor(picking.highlightedObjectColor);\n  return\n    bool(picking.isHighlightActive) && picking_isColorZero(abs(vertexColor - highlightedObjectColor));\n}\n\n// Set the current picking color\nvoid picking_setPickingColor(vec3 pickingColor) {\n  pickingColor = picking_normalizeColor(pickingColor);\n\n  if (bool(picking.isActive)) {\n    // Use alpha as the validity flag. If pickingColor is [0, 0, 0] fragment is non-pickable\n    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));\n\n    if (!bool(picking.isAttribute)) {\n      // Stores the picking color so that the fragment shader can render it during picking\n      picking_vRGBcolor_Avalid.rgb = pickingColor;\n    }\n  } else {\n    // Do the comparison with selected item color in vertex shader as it should mean fewer compares\n    picking_vRGBcolor_Avalid.a = float(isVertexHighlighted(pickingColor));\n  }\n}\n\nvoid picking_setPickingAttribute(float value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.r = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec2 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rg = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec3 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rgb = value;\n  }\n}\n"],["\\\nuniform pickingUniforms {\n  float isActive;\n  float isAttribute;\n  float isHighlightActive;\n  float useFloatColors;\n  vec3 highlightedObjectColor;\n  vec4 highlightColor;\n} picking;\n\nout vec4 picking_vRGBcolor_Avalid;\n\n// Normalize unsigned byte color to 0-1 range\nvec3 picking_normalizeColor(vec3 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\n// Normalize unsigned byte color to 0-1 range\nvec4 picking_normalizeColor(vec4 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\nbool picking_isColorZero(vec3 color) {\n  return dot(color, vec3(1.0)) < 0.00001;\n}\n\nbool picking_isColorValid(vec3 color) {\n  return dot(color, vec3(1.0)) > 0.00001;\n}\n\n// Check if this vertex is highlighted \nbool isVertexHighlighted(vec3 vertexColor) {\n  vec3 highlightedObjectColor = picking_normalizeColor(picking.highlightedObjectColor);\n  return\n    bool(picking.isHighlightActive) && picking_isColorZero(abs(vertexColor - highlightedObjectColor));\n}\n\n// Set the current picking color\nvoid picking_setPickingColor(vec3 pickingColor) {\n  pickingColor = picking_normalizeColor(pickingColor);\n\n  if (bool(picking.isActive)) {\n    // Use alpha as the validity flag. If pickingColor is [0, 0, 0] fragment is non-pickable\n    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));\n\n    if (!bool(picking.isAttribute)) {\n      // Stores the picking color so that the fragment shader can render it during picking\n      picking_vRGBcolor_Avalid.rgb = pickingColor;\n    }\n  } else {\n    // Do the comparison with selected item color in vertex shader as it should mean fewer compares\n    picking_vRGBcolor_Avalid.a = float(isVertexHighlighted(pickingColor));\n  }\n}\n\nvoid picking_setPickingAttribute(float value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.r = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec2 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rg = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec3 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rgb = value;\n  }\n}\n"]))),Xt=F(wt||(wt=Gt(["uniform pickingUniforms {\n  float isActive;\n  float isAttribute;\n  float isHighlightActive;\n  float useFloatColors;\n  vec3 highlightedObjectColor;\n  vec4 highlightColor;\n} picking;\n\nin vec4 picking_vRGBcolor_Avalid;\n\n/*\n * Returns highlight color if this item is selected.\n */\nvec4 picking_filterHighlightColor(vec4 color) {\n  // If we are still picking, we don't highlight\n  if (picking.isActive > 0.5) {\n    return color;\n  }\n\n  bool selected = bool(picking_vRGBcolor_Avalid.a);\n\n  if (selected) {\n    // Blend in highlight color based on its alpha value\n    float highLightAlpha = picking.highlightColor.a;\n    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\n    float highLightRatio = highLightAlpha / blendedAlpha;\n\n    vec3 blendedRGB = mix(color.rgb, picking.highlightColor.rgb, highLightRatio);\n    return vec4(blendedRGB, blendedAlpha);\n  } else {\n    return color;\n  }\n}\n\n/*\n * Returns picking color if picking enabled else unmodified argument.\n */\nvec4 picking_filterPickingColor(vec4 color) {\n  if (bool(picking.isActive)) {\n    if (picking_vRGBcolor_Avalid.a == 0.0) {\n      discard;\n    }\n    return picking_vRGBcolor_Avalid;\n  }\n  return color;\n}\n\n/*\n * Returns picking color if picking is enabled if not\n * highlight color if this item is selected, otherwise unmodified argument.\n */\nvec4 picking_filterColor(vec4 color) {\n  vec4 highlightColor = picking_filterHighlightColor(color);\n  return picking_filterPickingColor(highlightColor);\n}\n"],["\\\nuniform pickingUniforms {\n  float isActive;\n  float isAttribute;\n  float isHighlightActive;\n  float useFloatColors;\n  vec3 highlightedObjectColor;\n  vec4 highlightColor;\n} picking;\n\nin vec4 picking_vRGBcolor_Avalid;\n\n/*\n * Returns highlight color if this item is selected.\n */\nvec4 picking_filterHighlightColor(vec4 color) {\n  // If we are still picking, we don't highlight\n  if (picking.isActive > 0.5) {\n    return color;\n  }\n\n  bool selected = bool(picking_vRGBcolor_Avalid.a);\n\n  if (selected) {\n    // Blend in highlight color based on its alpha value\n    float highLightAlpha = picking.highlightColor.a;\n    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\n    float highLightRatio = highLightAlpha / blendedAlpha;\n\n    vec3 blendedRGB = mix(color.rgb, picking.highlightColor.rgb, highLightRatio);\n    return vec4(blendedRGB, blendedAlpha);\n  } else {\n    return color;\n  }\n}\n\n/*\n * Returns picking color if picking enabled else unmodified argument.\n */\nvec4 picking_filterPickingColor(vec4 color) {\n  if (bool(picking.isActive)) {\n    if (picking_vRGBcolor_Avalid.a == 0.0) {\n      discard;\n    }\n    return picking_vRGBcolor_Avalid;\n  }\n  return color;\n}\n\n/*\n * Returns picking color if picking is enabled if not\n * highlight color if this item is selected, otherwise unmodified argument.\n */\nvec4 picking_filterColor(vec4 color) {\n  vec4 highlightColor = picking_filterHighlightColor(color);\n  return picking_filterPickingColor(highlightColor);\n}\n"]))),kt={props:{},uniforms:{},name:"picking",uniformTypes:{isActive:"f32",isAttribute:"f32",isHighlightActive:"f32",useFloatColors:"f32",highlightedObjectColor:"vec3<f32>",highlightColor:"vec4<f32>"},defaultUniforms:{isActive:!1,isAttribute:!1,isHighlightActive:!1,useFloatColors:!0,highlightedObjectColor:new Float32Array([0,0,0]),highlightColor:Ht},vs:Vt,fs:Xt,getUniforms:function(e,t){void 0===e&&(e={});const n={};if(void 0===e.highlightedObjectColor);else if(null===e.highlightedObjectColor)n.isHighlightActive=!1;else{n.isHighlightActive=!0;const t=e.highlightedObjectColor.slice(0,3);n.highlightedObjectColor=t}if(e.highlightColor){const t=Array.from(e.highlightColor,(e=>e/255));Number.isFinite(t[3])||(t[3]=1),n.highlightColor=t}void 0!==e.isActive&&(n.isActive=Boolean(e.isActive),n.isAttribute=Boolean(e.isAttribute));void 0!==e.useFloatColors&&(n.useFloatColors=Boolean(e.useFloatColors));return n}};var Wt,Kt;function zt(e,t){return t||(t=e.slice(0)),e.raw=t,e}const Yt=ut(),jt=o(Wt||(Wt=zt(["#version 300 es\n\nin vec3 positions;\nin vec3 normals;\n\nin vec2 instanceOffsets;\nin vec3 instanceColors;\nin vec2 instancePickingColors;\n\nuniform appUniforms {\n  mat4 modelMatrix;\n  mat4 viewMatrix;\n  mat4 projectionMatrix;\n  float time;\n} app;\n\nout vec3 color;\n\nvoid main(void) {\n  color = instanceColors;\n\n  vec3 normal = vec3(app.modelMatrix * vec4(normals, 1.0));\n  dirlight_setNormal(normal);\n\n  vec4 pickColor = vec4(0., instancePickingColors, 1.0);\n  picking_setPickingColor(pickColor.rgb);\n\n  // Vertex position (z coordinate undulates with time), and model rotates around center\n  float delta = length(instanceOffsets);\n  vec4 offset = vec4(instanceOffsets, sin((app.time + delta) * 0.1) * 16.0, 0);\n  gl_Position = app.projectionMatrix * app.viewMatrix * (app.modelMatrix * vec4(positions * 1., 1.0) + offset);\n}\n"],["\\\n#version 300 es\n\nin vec3 positions;\nin vec3 normals;\n\nin vec2 instanceOffsets;\nin vec3 instanceColors;\nin vec2 instancePickingColors;\n\nuniform appUniforms {\n  mat4 modelMatrix;\n  mat4 viewMatrix;\n  mat4 projectionMatrix;\n  float time;\n} app;\n\nout vec3 color;\n\nvoid main(void) {\n  color = instanceColors;\n\n  vec3 normal = vec3(app.modelMatrix * vec4(normals, 1.0));\n  dirlight_setNormal(normal);\n\n  vec4 pickColor = vec4(0., instancePickingColors, 1.0);\n  picking_setPickingColor(pickColor.rgb);\n\n  // Vertex position (z coordinate undulates with time), and model rotates around center\n  float delta = length(instanceOffsets);\n  vec4 offset = vec4(instanceOffsets, sin((app.time + delta) * 0.1) * 16.0, 0);\n  gl_Position = app.projectionMatrix * app.viewMatrix * (app.modelMatrix * vec4(positions * 1., 1.0) + offset);\n}\n"]))),Qt=o(Kt||(Kt=zt(["#version 300 es\nprecision highp float;\n\nin vec3 color;\nout vec4 fragColor;\n\nvoid main(void) {\n  fragColor = vec4(color, 1.);\n  fragColor = dirlight_filterColor(fragColor);\n  fragColor = picking_filterColor(fragColor);\n}\n"],["\\\n#version 300 es\nprecision highp float;\n\nin vec3 color;\nout vec4 fragColor;\n\nvoid main(void) {\n  fragColor = vec4(color, 1.);\n  fragColor = dirlight_filterColor(fragColor);\n  fragColor = picking_filterColor(fragColor);\n}\n"]))),Zt=256;class qt extends Ve{constructor(e,t){const n=[];for(let c=0;c<Zt;c++){const e=3*c-382.5;for(let t=0;t<Zt;t++){const i=3*t-382.5;n.push(e,i)}}const i=new Float32Array(n),r=new Uint8Array(262144).map(((e,t)=>255*(.75*Yt()+.25)));for(let c=0;c<r.length;c+=4)r[c+3]=255;const o=new Uint8Array(262144);for(let c=0;c<Zt;c++)for(let e=0;e<Zt;e++)o[2*(c*Zt+e)+0]=c,o[2*(c*Zt+e)+1]=e,o[2*(c*Zt+e)+2]=0,o[2*(c*Zt+e)+3]=0;const s=e.createBuffer(i),a=e.createBuffer(r),l=e.createBuffer(o);super(e,{...t,source:"\n// MODULE: dirlight\n\nstruct DirlightUniforms {\n  lightDirection: vec3<f32>,\n}\n\n@group(0) @binding(1) var<uniform> dirlight : DirlightUniforms;\n\nfn dirlight_filterColor(color: vec4<f32>, normal: vec3<f32>) -> vec4<f32> {\n  let d: f32 = abs(dot(normal, normalize(dirlight.lightDirection)));\n  return vec4<f32>(color.rgb * d, color.a);\n}\n\n\n// APPLICATION\n\nstruct AppUniforms {\n  modelMatrix: mat4x4<f32>,\n  viewMatrix: mat4x4<f32>,\n  projectionMatrix: mat4x4<f32>,\n  time: f32,\n};\n\n@group(0) @binding(0) var<uniform> app : AppUniforms;\n\nstruct VertexInputs {\n  // CUBE GEOMETRY\n  @location(0) positions : vec4<f32>,\n  @location(1) normals : vec3<f32>,\n  // INSTANCED ATTRIBUTES\n  @location(2) instanceOffsets : vec2<f32>,\n  @location(3) instanceColors : vec4<f32>,\n  @location(4) instancePickingColors : vec2<f32>,\n}\n\nstruct FragmentInputs {\n  @builtin(position) Position : vec4<f32>,\n  @location(0) normal : vec3<f32>,\n  @location(1) color : vec4<f32>,\n}\n\n@vertex\nfn vertexMain(inputs: VertexInputs) -> FragmentInputs {\n  var outputs: FragmentInputs;\n\n  // Vertex position (z coordinate undulates with time), and model rotates around center\n  let delta = length(inputs.instanceOffsets);\n  let offset = vec4<f32>(inputs.instanceOffsets, sin((app.time + delta) * 0.1) * 16.0, 0);\n  outputs.Position = app.projectionMatrix * app.viewMatrix * (app.modelMatrix * inputs.positions + offset);\n  \n  outputs.normal = (app.modelMatrix * vec4<f32>(inputs.normals, 0.0)).xyz;\n  outputs.color = inputs.instanceColors;\n\n  // vec4 pickColor = vec4(0., instancePickingColors, 1.0);\n  // picking_setPickingColor(pickColor.rgb);\n  \n  return outputs;\n}\n\n@fragment\nfn fragmentMain(inputs: FragmentInputs) -> @location(0) vec4<f32> {\n  var color = inputs.color; \n  color = dirlight_filterColor(color, inputs.normal); \n  return color;\n}\n",vs:jt,fs:Qt,modules:"webgpu"!==e.info.type?[ot,kt]:[ot],instanceCount:65536,geometry:new ze({indices:!0}),bufferLayout:[{name:"instanceOffsets",format:"float32x2"},{name:"instanceColors",format:"unorm8x4"},{name:"instancePickingColors",format:"unorm8x4"}],attributes:{instanceOffsets:s,instanceColors:a,instancePickingColors:l},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal"}})}}const Jt={uniformTypes:{modelMatrix:"mat4x4<f32>",viewMatrix:"mat4x4<f32>",projectionMatrix:"mat4x4<f32>",time:"f32"}};class $t extends p{constructor(e){let{device:t,animationLoop:n}=e;super(),this.shaderInputs=new Ue({app:Jt,dirlight:ot,picking:kt}),this.timeline=new m,n.attachTimeline(this.timeline),this.timeline.play(),this.timelineChannels={timeChannel:this.timeline.addChannel({rate:.01}),eyeXChannel:this.timeline.addChannel({rate:3e-4}),eyeYChannel:this.timeline.addChannel({rate:4e-4}),eyeZChannel:this.timeline.addChannel({rate:2e-4})},"webgpu"!==t.info.type&&(this.pickingFramebuffer=t.createFramebuffer({colorAttachments:["rgba8unorm"],depthStencilAttachment:"depth24plus"})),this.cube=new qt(t,{shaderInputs:this.shaderInputs})}onRender(e){const{device:t,aspect:n,tick:i}=e,{_mousePosition:r}=e,{timeChannel:o,eyeXChannel:s,eyeYChannel:a,eyeZChannel:l}=this.timelineChannels;this.shaderInputs.setProps({app:{time:this.timeline.getTime(o),projectionMatrix:(new lt.k).perspective({fovy:(0,ct.F2)(60),aspect:n,near:1,far:2048}),viewMatrix:(new lt.k).lookAt({center:[0,0,0],eye:[Math.cos(this.timeline.getTime(s))*Zt/2,Math.sin(this.timeline.getTime(a))*Zt/2,(Math.sin(this.timeline.getTime(l))+1)*Zt/4+32]}),modelMatrix:(new lt.k).rotateX(.01*i).rotateY(.013*i)}}),"webgpu"!==t.info.type&&this.pickInstance(t,r,this.cube,this.pickingFramebuffer);const c=t.beginRenderPass({clearColor:[0,0,0,1],clearDepth:1,clearStencil:0});this.cube.draw(c),c.end()}onFinalize(e){this.cube.destroy()}pickInstance(e,t,n,i){if(!t)return void this.shaderInputs.setProps({picking:{highlightedObjectColor:null}});const r=e.canvasContext.cssToDevicePixels(t),o=r.x+Math.floor(r.width/2),s=r.y+Math.floor(r.height/2);i.resize(e.canvasContext.getPixelSize()),this.shaderInputs.setProps({picking:{isActive:!0}});const a=e.beginRenderPass({framebuffer:i,clearColor:[0,0,0,0],clearDepth:1});n.draw(a),a.end();const l=i.device.readPixelsToArrayWebGL(i,{sourceX:o,sourceY:s,sourceWidth:1,sourceHeight:1});let c=new Float32Array(l).map((e=>e/255));c[0]+c[1]+c[2]>0||(c=null),this.shaderInputs.setProps({picking:{isActive:!1,highlightedObjectColor:c}})}}$t.info="\n<p>\nCube drawn with <b>instanced rendering</b>.\n<p>\nA luma.gl <code>Cube</code>, rendering 65,536 instances in a\nsingle GPU draw call using instanced vertex attributes.\n",$t.props={createFramebuffer:!0,debug:!0};class en extends Ke{constructor(e){void 0===e&&(e={});const{id:t=be("sphere-geometry")}=e,{indices:n,attributes:i}=function(e){const{nlat:t=10,nlong:n=10}=e,i=0,r=Math.PI-i,o=0,s=2*Math.PI-o,a=(t+1)*(n+1),l=(t,n,i,r,o)=>e.radius||1,c=new Float32Array(3*a),u=new Float32Array(3*a),d=new Float32Array(2*a),h=new(a>65535?Uint32Array:Uint16Array)(t*n*6);for(let f=0;f<=t;f++)for(let e=0;e<=n;e++){const i=e/n,o=f/t,a=e+f*(n+1),h=2*a,_=3*a,p=s*i,E=r*o,g=Math.sin(p),m=Math.cos(p),R=Math.sin(E),A=m*R,T=Math.cos(E),v=g*R,S=l(A,T,v,i,o);c[_+0]=S*A,c[_+1]=S*T,c[_+2]=S*v,u[_+0]=A,u[_+1]=T,u[_+2]=v,d[h+0]=i,d[h+1]=1-o}const _=n+1;for(let f=0;f<n;f++)for(let e=0;e<t;e++){const n=6*(f*t+e);h[n+0]=e*_+f,h[n+1]=e*_+f+1,h[n+2]=(e+1)*_+f,h[n+3]=(e+1)*_+f,h[n+4]=e*_+f+1,h[n+5]=(e+1)*_+f+1}return{indices:{size:1,value:h},attributes:{POSITION:{size:3,value:c},NORMAL:{size:3,value:u},TEXCOORD_0:{size:2,value:d}}}}(e);super({...e,id:t,topology:"triangle-list",indices:n,attributes:{...i,...e.attributes}})}}var tn,nn,rn,on,sn,an=n(7597);function ln(e,t){return t||(t=e.slice(0)),e.raw=t,e}const cn={uniformTypes:{color:"vec3<f32>",lighting:"f32",modelViewMatrix:"mat4x4<f32>",projectionMatrix:"mat4x3<f32>"}},un="#version 300 es\n\nstruct VertexInputs {\n  positions: vec3<f32>;\n  normals: vec3<f32>;\n}\n\nstruct FragmentInputs {\n  @builtin(position) position: vec4<f32>;\n  normal: vec3<f32>;\n}\n\nuniform sphereUniforms {\n  // fragment shader\n  color: vec3<f32>;\n  lighting: bool;\n  // vertex shader\n  modelViewMatrix: mat4<f32>;\n  projectionMatrix: mat4<f32>;\n} sphere;\n\n\n@vertex\nfn vertexMain(inputs: VertexInputs) -> FragmentInputs {\n  const outputs: VertexOutputs;\n  gl_Position = sphere.projectionMatrix * sphere.modelViewMatrix * vec4(inputs.positions, 1.0);\n  outputs.normal = vec3((sphere.modelViewMatrix * vec4(inputs.normals, 0.0)));\n  return outputs;\n}\n\n@fragment\nfn fragmentMain(inputs: FragmentInputs) -> [[location(0)]] vec4<f32> {\n  let attenuation = 1.0;\n  if (sphere.lighting) {\n    light = normalize(vec3(1,1,2));\n    attenuation = dot(normal, light);\n  }\n  return vec4(sphere.color * attenuation, 1);\n}\n",dn=o(tn||(tn=ln(["#version 300 es\n\nin vec3 positions;\nin vec3 normals;\n\nuniform sphereUniforms {\n  // fragment shader\n  vec3 color;\n  bool lighting;\n  // vertex shader\n  mat4 modelViewMatrix;\n  mat4 projectionMatrix;\n} sphere;\n\nout vec3 normal;\n\nvoid main(void) {\n  gl_Position = sphere.projectionMatrix * sphere.modelViewMatrix * vec4(positions, 1.0);\n  normal = vec3((sphere.modelViewMatrix * vec4(normals, 0.0)));\n}\n"],["\\\n#version 300 es\n\nin vec3 positions;\nin vec3 normals;\n\nuniform sphereUniforms {\n  // fragment shader\n  vec3 color;\n  bool lighting;\n  // vertex shader\n  mat4 modelViewMatrix;\n  mat4 projectionMatrix;\n} sphere;\n\nout vec3 normal;\n\nvoid main(void) {\n  gl_Position = sphere.projectionMatrix * sphere.modelViewMatrix * vec4(positions, 1.0);\n  normal = vec3((sphere.modelViewMatrix * vec4(normals, 0.0)));\n}\n"]))),hn=o(nn||(nn=ln(["#version 300 es\n\nprecision highp float;\n\nuniform sphereUniforms {\n  // fragment\n  vec3 color;\n  bool lighting;\n  // vertex\n  mat4 modelViewMatrix;\n  mat4 projectionMatrix;\n} sphere;\n\nin vec3 normal;\nout vec4 fragColor;\n\nvoid main(void) {\n  float attenuation = 1.0;\n  if (sphere.lighting) {\n    vec3 light = normalize(vec3(1,1,2));\n    attenuation = dot(normal, light);\n  }\n  fragColor = vec4(sphere.color * attenuation, 1);\n}\n"],["\\\n#version 300 es\n\nprecision highp float;\n\nuniform sphereUniforms {\n  // fragment\n  vec3 color;\n  bool lighting;\n  // vertex\n  mat4 modelViewMatrix;\n  mat4 projectionMatrix;\n} sphere;\n\nin vec3 normal;\nout vec4 fragColor;\n\nvoid main(void) {\n  float attenuation = 1.0;\n  if (sphere.lighting) {\n    vec3 light = normalize(vec3(1,1,2));\n    attenuation = dot(normal, light);\n  }\n  fragColor = vec4(sphere.color * attenuation, 1);\n}\n"]))),_n={uniformTypes:{resolution:"vec2<f32>"}},fn="fn getQuadVertex(vertexIndex : u32) -> vec2f {\n  // SCREEN QUAD\n  let positions = array(\n    // 1st triangle\n    vec2f( 0.0,  0.0),  // center\n    vec2f( 1.0,  0.0),  // right, center\n    vec2f( 0.0,  1.0),  // center, top\n    // 2st triangle\n    vec2f( 0.0,  1.0),  // center, top\n    vec2f( 1.0,  0.0),  // right, center\n    vec2f( 1.0,  1.0),  // right, top\n  );\n  return positions[vertexIndex];\n}\n",pn="\n"+fn+"\n\nstruct FragmentInputs {\n  @builtin(position) position: vec4f,\n  @location(0) texcoord: vec2f,\n};\n\n@vertex fn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> FragmentInputs {\n  var outputs: FragmentInputs;\n  let xy = getQuadVertex(vertexIndex);\n  outputs.position = vec4f(xy, 0.0, 1.0);\n  outputs.texcoord = xy;\n  return outputs;\n}\n\n@group(0) @binding(0) var texture : texture_2d<f32>;\n@group(0) @binding(1) var sampler : sampler;\n\n@fragment fn fragmentMain(inputs: FragmentInputs) -> @location(0) vec4f {\n  return textureSample(texture, sampler, inputs.texcoord);\n}\n",En=o(rn||(rn=ln(["#version 300 es\n\nin vec2 aPosition;\n\nvoid main(void) {\n  gl_Position = vec4(aPosition, 0, 1);\n}\n"],["\\\n#version 300 es\n\nin vec2 aPosition;\n\nvoid main(void) {\n  gl_Position = vec4(aPosition, 0, 1);\n}\n"]))),gn=o(on||(on=ln(["#version 300 es\n\nprecision highp float;\n\nuniform sampler2D uTexture;\n\nuniform screenQuadUniforms {\n  vec2 resolution;\n} screenQuad;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  vec2 p = gl_FragCoord.xy/screenQuad.resolution.xy;\n  fragColor = texture(uTexture, p);\n}\n"],["\\\n#version 300 es\n\nprecision highp float;\n\nuniform sampler2D uTexture;\n\nuniform screenQuadUniforms {\n  vec2 resolution;\n} screenQuad;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  vec2 p = gl_FragCoord.xy/screenQuad.resolution.xy;\n  fragColor = texture(uTexture, p);\n}\n"]))),mn={uniformTypes:{resolution:"vec2<f32>"}},Rn="\n"+fn+"\n\nstruct FragmentInputs {\n  @builtin(position) position: vec4f,\n  @location(0) texcoord: vec2f,\n};\n\n@vertex fn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> FragmentInputs {\n  var outputs: FragmentInputs;\n  let xy = getQuadVertex(vertexIndex);\n  outputs.position = vec4f(xy, 0.0, 1.0);\n  outputs.texcoord = xy;\n  return outputs;\n}\n\n@group(0) @binding(0) var sceneTexture : texture_2d<f32>;\n@group(0) @binding(1) var persistenceTexture : texture_2d<f32>;\n@group(0) @binding(2) var sampler : sampler;\n\n@fragment \nfn fragmentMain(inputs: FragmentInputs) -> @location(0) vec4f {\n  let sceneColor = textureSample(sceneTexture, sampler, inputs.texcoord);\n  let persistenceColor = textureSample(persistenceTexture, sampler, inputs.texcoord);\n  return mix(sceneColor * 4.0, persistenceColor, 0.9);\n}\n",An=o(sn||(sn=ln(["#version 300 es\n\nprecision highp float;\n\nuniform sampler2D uScene;\nuniform sampler2D uPersistence;\n\nuniform persistenceQuadUniforms {\n  vec2 resolution;\n} persistence;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  vec2 p = gl_FragCoord.xy / persistence.resolution.xy;\n  vec4 cS = texture(uScene, p);\n  vec4 cP = texture(uPersistence, p);\n  fragColor = mix(cS*4.0, cP, 0.9);\n}\n"],["\\\n#version 300 es\n\nprecision highp float;\n\nuniform sampler2D uScene;\nuniform sampler2D uPersistence;\n\nuniform persistenceQuadUniforms {\n  vec2 resolution;\n} persistence;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  vec2 p = gl_FragCoord.xy / persistence.resolution.xy;\n  vec4 cS = texture(uScene, p);\n  vec4 cP = texture(uPersistence, p);\n  fragColor = mix(cS*4.0, cP, 0.9);\n}\n"]))),Tn=ut(),vn=[],Sn=[],Cn=[];class bn extends p{constructor(e){let{device:t,width:n,height:i}=e;super(),this.uniformStore=new f({sphere:cn,screenQuad:_n,persistenceQuad:mn}),this.electron=new Ve(t,{id:"electron",source:un,vs:dn,fs:hn,geometry:new en({nlat:20,nlong:30}),bindings:{sphere:this.uniformStore.getManagedUniformBuffer(t,"sphere")},parameters:{depthWriteEnabled:!0,depthCompare:"less",cullMode:"back"}}),this.nucleon=new Ve(t,{id:"nucleon",source:un,vs:dn,fs:hn,geometry:new en({nlat:20,nlong:30}),parameters:{depthWriteEnabled:!0,depthCompare:"less-equal",cullMode:"back"},bindings:{sphere:this.uniformStore.getManagedUniformBuffer(t,"sphere")}}),this.mainFramebuffer=t.createFramebuffer({width:n,height:i,colorAttachments:["rgba8unorm"],depthStencilAttachment:"depth24plus"}),this.pingpongFramebuffers=[t.createFramebuffer({width:n,height:i,colorAttachments:["rgba8unorm"],depthStencilAttachment:"depth24plus"}),t.createFramebuffer({width:n,height:i,colorAttachments:["rgba8unorm"],depthStencilAttachment:"depth24plus"})];const r=new Ke({topology:"triangle-list",attributes:{aPosition:{value:new Float32Array([-1,-1,1,-1,1,1,-1,-1,1,1,-1,1]),size:2}},vertexCount:6});this.screenQuad=new Ve(t,{id:"quad",source:pn,vs:En,fs:gn,geometry:r,bindings:{screenQuad:this.uniformStore.getManagedUniformBuffer(t,"screenQuad")},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal",cullMode:"back"}}),this.persistenceQuad=new Ve(t,{id:"persistence-quad",source:Rn,vs:En,fs:An,geometry:r,bindings:{persistenceQuad:this.uniformStore.getManagedUniformBuffer(t,"persistenceQuad")},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal",cullMode:"back"}});for(let o=0;o<64;o++){const e=new an.P(Tn()-.5,Tn()-.5,Tn()-.5),t=Tn()+1;e.normalize().scale(t);const n=1.25;e.scale(n),vn.push(e);const i=new an.P(Tn()-.5,Tn()-.5,Tn()-.5),r=e.clone().cross(i).normalize(),o=4/t*.0125,s=(new lt.k).rotateAxis(o,r);Sn.push(s)}for(let o=0;o<64;o++){let e=new an.P(Tn()-.5,Tn()-.5,Tn()-.5);e=e.normalize().scale(.5),Cn.push(e)}}onFinalize(e){this.electron.destroy(),this.nucleon.destroy(),this.mainFramebuffer.destroy(),this.pingpongFramebuffers[0].destroy(),this.pingpongFramebuffers[1].destroy(),this.screenQuad.destroy(),this.persistenceQuad.destroy()}onRender(e){let{device:t,tick:n,width:i,height:r,aspect:o}=e;this.mainFramebuffer.resize({width:i,height:r}),this.pingpongFramebuffers[0].resize({width:i,height:r}),this.pingpongFramebuffers[1].resize({width:i,height:r});const s=(new lt.k).perspective({fovy:(0,ct.F2)(75),aspect:o}),a=(new lt.k).lookAt({eye:[0,0,4]}),l=t.beginRenderPass({framebuffer:this.mainFramebuffer,clearColor:[0,0,0,1],clearDepth:1});this.uniformStore.setUniforms({sphere:{color:[0,.5,1],lighting:!1}});for(let f=0;f<64;f++){vn[f]=Sn[f].transformVector(vn[f]);const e=(new lt.k).translate(vn[f]).scale([.06125,.06125,.06125]);this.uniformStore.setUniforms({sphere:{modelViewMatrix:a.clone().multiplyRight(e),projectionMatrix:s}}),this.uniformStore.updateUniformBuffers(),this.electron.draw(l)}this.uniformStore.setUniforms({sphere:{color:[1,.25,.25],lighting:!0}});for(let f=0;f<64;f++){const e=(new lt.k).rotateXYZ([.013*n,0,0]).rotateXYZ([0,.021*n,0]).translate(Cn[f]),t=[e[12],e[13],e[14]];e.identity().translate(t).scale([.25,.25,.25]),this.uniformStore.setUniforms({sphere:{modelViewMatrix:a.clone().multiplyRight(e),projectionMatrix:s}}),this.uniformStore.updateUniformBuffers(),this.nucleon.draw(l)}l.end();const c=n%2,u=this.pingpongFramebuffers[c],d=this.pingpongFramebuffers[1-c],h=t.beginRenderPass({framebuffer:u,clearColor:[0,0,0,1]});this.persistenceQuad.setBindings({uScene:this.mainFramebuffer.colorAttachments[0],uPersistence:d.colorAttachments[0]}),this.uniformStore.setUniforms({persistenceQuad:{resolution:[i,r]}}),this.uniformStore.updateUniformBuffers(),this.persistenceQuad.draw(h),h.end();const _=t.beginRenderPass({clearColor:[1,0,0,1]});this.screenQuad.setBindings({uTexture:u.colorAttachments[0]}),this.uniformStore.setUniforms({screenQuad:{resolution:[i,r]}}),this.uniformStore.updateUniformBuffers(),this.screenQuad.draw(_),_.end()}}var In,Nn;function Ln(e,t){return t||(t=e.slice(0)),e.raw=t,e}bn.info="\n<p>\n  Electron trails renderings persist across multiple frames.\n<p>\n  Uses multiple luma.gl <code>Framebuffer</code>s to hold previously rendered data between frames.\n</p>\n";const Pn=o(In||(In=Ln(["#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = 0.5 * (vec4(positions, 1.) + vec4(1., 1., 1., 1.));\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = 0.5 * (vec4(positions, 1.) + vec4(1., 1., 1., 1.));\n}\n"]))),Mn=o(Nn||(Nn=Ln(["#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\n\nuniform sampler2D uTexture;\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = fragPosition;\n  fragColor = texture(uTexture, vec2(fragUV.x, 1.0 - fragUV.y));\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\n\nuniform sampler2D uTexture;\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = fragPosition;\n  fragColor = texture(uTexture, vec2(fragUV.x, 1.0 - fragUV.y));\n}\n"]))),On={uniformTypes:{mvpMatrix:"mat4x4<f32>"}},Fn=[0,0,5];class Dn extends p{constructor(e){let{device:t}=e;super(),this.mvpMatrix=new lt.k,this.viewMatrix=(new lt.k).lookAt({eye:Fn}),this.uniformStore=new f({app:On});const n=new Ge(t,{usage:T.g.TEXTURE&T.g.COPY_DST,data:(0,we.yt)("vis-logo.png"),mipmaps:!0,sampler:t.createSampler({minFilter:"linear",magFilter:"linear",mipmapFilter:"linear"})});this.model=new Ve(t,{id:"rotating-cube",source:"struct Uniforms {\n  modelViewProjectionMatrix : mat4x4<f32>,\n};\n\n@binding(0) @group(0) var<uniform> app : Uniforms;\n\nstruct VertexInputs {\n  // CUBE GEOMETRY\n  @location(0) positions : vec4<f32>,\n  @location(1) texCoords : vec2<f32>\n};\n\nstruct FragmentInputs {\n  @builtin(position) Position : vec4<f32>,\n  @location(0) fragUV : vec2<f32>,\n  @location(1) fragPosition: vec4<f32>,\n}\n\n@vertex\nfn vertexMain(inputs: VertexInputs) -> FragmentInputs {\n  var outputs : FragmentInputs;\n  outputs.Position = app.modelViewProjectionMatrix * inputs.positions;\n  outputs.fragUV = inputs.texCoords;\n  outputs.fragPosition = 0.5 * (inputs.positions + vec4(1.0, 1.0, 1.0, 1.0));\n  return outputs;\n}\n\n@fragment\nfn fragmentMain(inputs: FragmentInputs) -> @location(0) vec4<f32> {\n  return inputs.fragPosition;\n}\n",vs:Pn,fs:Mn,geometry:new ze({indices:!1}),bindings:{app:this.uniformStore.getManagedUniformBuffer(t,"app"),uTexture:n},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal"}})}onFinalize(){this.model.destroy(),this.uniformStore.destroy()}onRender(e){let{device:t,aspect:n,tick:i}=e;this.mvpMatrix.perspective({fovy:Math.PI/3,aspect:n}).multiplyRight(this.viewMatrix).rotateX(.01*i).rotateY(.013*i),this.uniformStore.setUniforms({app:{mvpMatrix:this.mvpMatrix}});const r=t.beginRenderPass({clearColor:[0,0,0,1]});this.model.draw(r),r.end()}}var Bn,yn,xn,Un;function wn(e,t){return t||(t=e.slice(0)),e.raw=t,e}Dn.info="<p>\nDrawing a textured cube\n</p>\n";const Gn={name:"color",vs:o(Bn||(Bn=wn(["out vec3 color_vColor;\n\nvoid color_setColor(vec3 color) {\n  color_vColor = color;\n}\n  "],["\\\nout vec3 color_vColor;\n\nvoid color_setColor(vec3 color) {\n  color_vColor = color;\n}\n  "]))),fs:o(yn||(yn=wn(["in vec3 color_vColor;\n\nvec3 color_getColor() {\n  return color_vColor;\n}\n  "],["\\\nin vec3 color_vColor;\n\nvec3 color_getColor() {\n  return color_vColor;\n}\n  "])))};class Hn extends p{constructor(e){let{device:t}=e;super(),this.positionBuffer=t.createBuffer(new Float32Array([-.2,-.2,.2,-.2,0,.2])),this.colorBuffer=t.createBuffer(new Float32Array([1,0,0,0,1,0,0,0,1,1,1,0])),this.offsetBuffer=t.createBuffer(new Float32Array([.5,.5,-.5,.5,.5,-.5,-.5,-.5])),this.model=new Ve(t,{vs:o(xn||(xn=wn(["#version 300 es\nin vec2 position;\nin vec3 instanceColor;\nin vec2 instanceOffset;\n\nvoid main() {\n  color_setColor(instanceColor);\n  gl_Position = vec4(position + instanceOffset, 0.0, 1.0);\n}\n      "],["\\\n#version 300 es\nin vec2 position;\nin vec3 instanceColor;\nin vec2 instanceOffset;\n\nvoid main() {\n  color_setColor(instanceColor);\n  gl_Position = vec4(position + instanceOffset, 0.0, 1.0);\n}\n      "]))),fs:o(Un||(Un=wn(["#version 300 es\nout vec4 fragColor;\nvoid main() {\n  fragColor = vec4(color_getColor(), 1.0);\n}\n      "],["\\\n#version 300 es\nout vec4 fragColor;\nvoid main() {\n  fragColor = vec4(color_getColor(), 1.0);\n}\n      "]))),modules:[Gn],bufferLayout:[{name:"position",format:"float32x2"},{name:"instanceColor",format:"float32x3",stepMode:"instance"},{name:"instanceOffset",format:"float32x2",stepMode:"instance"}],attributes:{position:this.positionBuffer,instanceColor:this.colorBuffer,instanceOffset:this.offsetBuffer},vertexCount:3,instanceCount:4})}onFinalize(){this.model.destroy(),this.positionBuffer.destroy(),this.colorBuffer.destroy(),this.offsetBuffer.destroy()}onRender(e){let{device:t}=e;const n=t.beginRenderPass({clearColor:[0,0,0,1]});this.model.draw(n),n.end()}}var Vn;Hn.info="\nInstanced triangles using luma.gl's high-level API\n";const Xn=o(Vn||(Vn=function(e,t){return t||(t=e.slice(0)),e.raw=t,e}(["#version 300 es\n\nin vec3 vColor;\nout vec4 fragColor;\nvoid main() {\n  fragColor = vec4(vColor, 1.0);\n}\n"],["\\\n#version 300 es\n\nin vec3 vColor;\nout vec4 fragColor;\nvoid main() {\n  fragColor = vec4(vColor, 1.0);\n}\n"])));class kn extends p{constructor(e){let{device:t}=e;super();const n=new Float32Array([0,0,-.5,-.5,1,0,0,.5,-.5,0,1,0,0,.5,0,0,1]);this.interleavedBuffer=t.createBuffer(n),this.model=new Ve(t,{id:"triangle",vs:"#version 300 es\n\nin vec2 position;\nin vec3 color;\n\nout vec3 vColor;\n\nvoid main() {\n  vColor = color;\n  gl_Position = vec4(position, 0.0, 1.0);\n}\n",fs:Xn,bufferLayout:[{name:"vertexData",byteStride:20,attributes:[{attribute:"position",format:"float32x2",byteOffset:8},{attribute:"color",format:"float32x3",byteOffset:16}]}],attributes:{vertexData:this.interleavedBuffer},vertexCount:3})}onFinalize(){this.model.destroy(),this.interleavedBuffer.destroy()}onRender(e){let{device:t}=e;const n=t.beginRenderPass({clearColor:[0,0,0,1]});this.model.draw(n),n.end()}}kn.info="\nHave to start somewhere...\n";var Wn=n(9977);class Kn{constructor(e){void 0===e&&(e={}),this.matrix=new lt.k,this.display=!0,this.position=new an.P,this.rotation=new an.P,this.scale=new an.P(1,1,1),this.userData={},this.props={};const{id:t}=e;this.id=t||be(this.constructor.name),this._setScenegraphNodeProps(e)}getBounds(){return null}destroy(){}delete(){this.destroy()}setProps(e){return this._setScenegraphNodeProps(e),this}toString(){return"{type: ScenegraphNode, id: "+this.id+")}"}setPosition(e){return this.position=e,this}setRotation(e){return this.rotation=e,this}setScale(e){return this.scale=e,this}setMatrix(e,t){void 0===t&&(t=!0),t?this.matrix.copy(e):this.matrix=e}setMatrixComponents(e){const{position:t,rotation:n,scale:i,update:r=!0}=e;return t&&this.setPosition(t),n&&this.setRotation(n),i&&this.setScale(i),r&&this.updateMatrix(),this}updateMatrix(){const e=this.position,t=this.rotation,n=this.scale;return this.matrix.identity(),this.matrix.translate(e),this.matrix.rotateXYZ(t),this.matrix.scale(n),this}update(e){void 0===e&&(e={});const{position:t,rotation:n,scale:i}=e;return t&&this.setPosition(t),n&&this.setRotation(n),i&&this.setScale(i),this.updateMatrix(),this}getCoordinateUniforms(e,t){t=t||this.matrix;const n=new lt.k(e).multiplyRight(t),i=n.invert(),r=i.transpose();return{viewMatrix:e,modelMatrix:t,objectMatrix:t,worldMatrix:n,worldInverseMatrix:i,worldInverseTransposeMatrix:r}}_setScenegraphNodeProps(e){"position"in e&&this.setPosition(e.position),"rotation"in e&&this.setRotation(e.rotation),"scale"in e&&this.setScale(e.scale),"matrix"in e&&this.setMatrix(e.matrix),Object.assign(this.props,e)}}class zn extends Kn{constructor(e){void 0===e&&(e={}),e=Array.isArray(e)?{children:e}:e;const{children:t=[]}=e;a.R.assert(t.every((e=>e instanceof Kn)),"every child must an instance of ScenegraphNode"),super(e),this.children=t}getBounds(){const e=[[1/0,1/0,1/0],[-1/0,-1/0,-1/0]];return this.traverse(((t,n)=>{let{worldMatrix:i}=n;const r=t.getBounds();if(!r)return;const[o,s]=r,a=new an.P(o).add(s).divide([2,2,2]);i.transformAsPoint(a,a);const l=new an.P(s).subtract(o).divide([2,2,2]);i.transformAsVector(l,l);for(let c=0;c<8;c++){const t=new an.P(1&c?-1:1,2&c?-1:1,4&c?-1:1).multiply(l).add(a);for(let n=0;n<3;n++)e[0][n]=Math.min(e[0][n],t[n]),e[1][n]=Math.max(e[1][n],t[n])}})),Number.isFinite(e[0][0])?e:null}destroy(){this.children.forEach((e=>e.destroy())),this.removeAll(),super.destroy()}add(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];for(const i of t)Array.isArray(i)?this.add(...i):this.children.push(i);return this}remove(e){const t=this.children,n=t.indexOf(e);return n>-1&&t.splice(n,1),this}removeAll(){return this.children=[],this}traverse(e,t){let{worldMatrix:n=new lt.k}=void 0===t?{}:t;const i=new lt.k(n).multiplyRight(this.matrix);for(const r of this.children)r instanceof zn?r.traverse(e,{worldMatrix:i}):e(r,{worldMatrix:i})}}var Yn=n(1633);const jn={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},Qn={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array};class Zn{constructor(e){this.name=void 0,this.startTime=0,this.playing=!0,this.speed=1,this.channels=[],Object.assign(this,e)}animate(e){if(!this.playing)return;const t=(e/1e3-this.startTime)*this.speed;this.channels.forEach((e=>{let{sampler:n,target:i,path:r}=e;!function(e,t,n,i){let{input:r,interpolation:o,output:s}=t;const l=r[r.length-1],c=e%l,u=r.findIndex((e=>e>=c)),d=Math.max(0,u-1);if(!Array.isArray(n[i]))switch(i){case"translation":n[i]=[0,0,0];break;case"rotation":n[i]=[0,0,0,1];break;case"scale":n[i]=[1,1,1];break;default:a.R.warn("Bad animation path "+i)()}const h=r[d],_=r[u];switch(o){case"STEP":!function(e,t,n){for(let i=0;i<n.length;i++)e[t][i]=n[i]}(n,i,s[d]);break;case"LINEAR":if(_>h){const e=(c-h)/(_-h);!function(e,t,n,i,r){if("rotation"===t){ei.slerp({start:n,target:i,ratio:r});for(let n=0;n<ei.length;n++)e[t][n]=ei[n]}else for(let o=0;o<n.length;o++)e[t][o]=r*i[o]+(1-r)*n[o]}(n,i,s[d],s[u],e)}break;case"CUBICSPLINE":if(_>h){const e=(c-h)/(_-h),t=_-h;!function(e,t,n){let{p0:i,outTangent0:r,inTangent1:o,p1:s,tDiff:a,ratio:l}=n;for(let c=0;c<e[t].length;c++){const n=r[c]*a,u=o[c]*a;e[t][c]=(2*Math.pow(l,3)-3*Math.pow(l,2)+1)*i[c]+(Math.pow(l,3)-2*Math.pow(l,2)+l)*n+(-2*Math.pow(l,3)+3*Math.pow(l,2))*s[c]+(Math.pow(l,3)-Math.pow(l,2))*u}}(n,i,{p0:s[3*d+1],outTangent0:s[3*d+2],inTangent1:s[3*u+0],p1:s[3*u+1],tDiff:t,ratio:e})}break;default:a.R.warn("Interpolation "+o+" not supported")()}}(t,n,i,r),function(e,t){t.matrix.identity(),e.translation&&t.matrix.translate(e.translation);if(e.rotation){const n=$n.fromQuaternion(e.rotation);t.matrix.multiplyRight(n)}e.scale&&t.matrix.scale(e.scale)}(i,i._node)}))}}class qn{constructor(e){this.animations=void 0,this.animations=e.animations.map(((t,n)=>{const i=t.name||"Animation-"+n,r=t.samplers.map((t=>{let{input:n,interpolation:i="LINEAR",output:r}=t;return{input:Jn(e.accessors[n]),interpolation:i,output:Jn(e.accessors[r])}})),o=t.channels.map((t=>{let{sampler:n,target:i}=t;return{sampler:r[n],target:e.nodes[i.node],path:i.path}}));return new Zn({name:i,channels:o})}))}animate(e){this.setTime(e)}setTime(e){this.animations.forEach((t=>t.animate(e)))}getAnimations(){return this.animations}}function Jn(e){if(!e._animation){const t=Qn[e.componentType],n=jn[e.type],i=n*e.count,{buffer:r,byteOffset:o}=e.bufferView.data,s=new t(r,o+(e.byteOffset||0),i);if(1===n)e._animation=Array.from(s);else{const t=[];for(let e=0;e<s.length;e+=n)t.push(Array.from(s.slice(e,e+n)));e._animation=t}}return e._animation}const $n=new lt.k;const ei=new Yn.P;var ti;const ni=F(ti||(ti=function(e,t){return t||(t=e.slice(0)),e.raw=t,e}(["#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\n\nstruct AmbientLight {\n vec3 color;\n};\n\nstruct PointLight {\n vec3 color;\n vec3 position;\n\n // Constant-Linear-Exponential\n vec3 attenuation;\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform AmbientLight lighting_uAmbientLight;\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\nuniform int lighting_uPointLightCount;\nuniform int lighting_uDirectionalLightCount;\n\nuniform bool lighting_uEnabled;\n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n#endif\n"],["\\\n#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\n\nstruct AmbientLight {\n vec3 color;\n};\n\nstruct PointLight {\n vec3 color;\n vec3 position;\n\n // Constant-Linear-Exponential\n vec3 attenuation;\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform AmbientLight lighting_uAmbientLight;\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\nuniform int lighting_uPointLightCount;\nuniform int lighting_uDirectionalLightCount;\n\nuniform bool lighting_uEnabled;\n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n#endif\n"]))),ii={lightSources:{}};function ri(e){void 0===e&&(e={});const{color:t=[0,0,0],intensity:n=1}=e;return t.map((e=>e*n/255))}const oi={name:"lights",vs:ni,fs:ni,getUniforms:function e(t){var n,i;if(void 0===t&&(t=ii),"lightSources"in t){const{ambientLight:e,pointLights:n,directionalLights:i}=t.lightSources||{};return e||n&&n.length>0||i&&i.length>0?Object.assign({},function(e){let{ambientLight:t,pointLights:n=[],directionalLights:i=[]}=e;const r={};return r["lighting_uAmbientLight.color"]=t?ri(t):[0,0,0],n.forEach(((e,t)=>{r["lighting_uPointLight["+t+"].color"]=ri(e),r["lighting_uPointLight["+t+"].position"]=e.position,r["lighting_uPointLight["+t+"].attenuation"]=e.attenuation||[1,0,0]})),r.lighting_uPointLightCount=n.length,i.forEach(((e,t)=>{r["lighting_uDirectionalLight["+t+"].color"]=ri(e),r["lighting_uDirectionalLight["+t+"].direction"]=e.direction})),r.lighting_uDirectionalLightCount=i.length,r}({ambientLight:e,pointLights:n,directionalLights:i}),{lighting_uEnabled:!0}):{lighting_uEnabled:!1}}if("lights"in t){const r={pointLights:[],directionalLights:[]};for(const e of t.lights||[])switch(e.type){case"ambient":r.ambientLight=e;break;case"directional":null==(n=r.directionalLights)||n.push(e);break;case"point":null==(i=r.pointLights)||i.push(e)}return e({lightSources:r})}return{}},defines:{MAX_LIGHTS:3}};var si;const ai=F(si||(si=function(e,t){return t||(t=e.slice(0)),e.raw=t,e}(["uniform mat4 u_MVPMatrix;\nuniform mat4 u_ModelMatrix;\nuniform mat4 u_NormalMatrix;\n\nout vec3 pbr_vPosition;\nout vec2 pbr_vUV;\n\n#ifdef HAS_NORMALS\n# ifdef HAS_TANGENTS\nout mat3 pbr_vTBN;\n# else\nout vec3 pbr_vNormal;\n# endif\n#endif\n\nvoid pbr_setPositionNormalTangentUV(vec4 position, vec4 normal, vec4 tangent, vec2 uv)\n{\n  vec4 pos = u_ModelMatrix * position;\n  pbr_vPosition = vec3(pos.xyz) / pos.w;\n\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\n  vec3 normalW = normalize(vec3(u_NormalMatrix * vec4(normal.xyz, 0.0)));\n  vec3 tangentW = normalize(vec3(u_ModelMatrix * vec4(tangent.xyz, 0.0)));\n  vec3 bitangentW = cross(normalW, tangentW) * tangent.w;\n  pbr_vTBN = mat3(tangentW, bitangentW, normalW);\n#else // HAS_TANGENTS != 1\n  pbr_vNormal = normalize(vec3(u_ModelMatrix * vec4(normal.xyz, 0.0)));\n#endif\n#endif\n\n#ifdef HAS_UV\n  pbr_vUV = uv;\n#else\n  pbr_vUV = vec2(0.,0.);\n#endif\n}\n"],["\\\nuniform mat4 u_MVPMatrix;\nuniform mat4 u_ModelMatrix;\nuniform mat4 u_NormalMatrix;\n\nout vec3 pbr_vPosition;\nout vec2 pbr_vUV;\n\n#ifdef HAS_NORMALS\n# ifdef HAS_TANGENTS\nout mat3 pbr_vTBN;\n# else\nout vec3 pbr_vNormal;\n# endif\n#endif\n\nvoid pbr_setPositionNormalTangentUV(vec4 position, vec4 normal, vec4 tangent, vec2 uv)\n{\n  vec4 pos = u_ModelMatrix * position;\n  pbr_vPosition = vec3(pos.xyz) / pos.w;\n\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\n  vec3 normalW = normalize(vec3(u_NormalMatrix * vec4(normal.xyz, 0.0)));\n  vec3 tangentW = normalize(vec3(u_ModelMatrix * vec4(tangent.xyz, 0.0)));\n  vec3 bitangentW = cross(normalW, tangentW) * tangent.w;\n  pbr_vTBN = mat3(tangentW, bitangentW, normalW);\n#else // HAS_TANGENTS != 1\n  pbr_vNormal = normalize(vec3(u_ModelMatrix * vec4(normal.xyz, 0.0)));\n#endif\n#endif\n\n#ifdef HAS_UV\n  pbr_vUV = uv;\n#else\n  pbr_vUV = vec2(0.,0.);\n#endif\n}\n"])));var li;const ci=F(li||(li=function(e,t){return t||(t=e.slice(0)),e.raw=t,e}(["precision highp float;\n\nuniform bool pbr_uUnlit;\n\n#ifdef USE_IBL\nuniform samplerCube u_DiffuseEnvSampler;\nuniform samplerCube u_SpecularEnvSampler;\nuniform sampler2D u_brdfLUT;\nuniform vec2 u_ScaleIBLAmbient;\n#endif\n\n#ifdef HAS_BASECOLORMAP\nuniform sampler2D u_BaseColorSampler;\n#endif\n#ifdef HAS_NORMALMAP\nuniform sampler2D u_NormalSampler;\nuniform float u_NormalScale;\n#endif\n#ifdef HAS_EMISSIVEMAP\nuniform sampler2D u_EmissiveSampler;\nuniform vec3 u_EmissiveFactor;\n#endif\n#ifdef HAS_METALROUGHNESSMAP\nuniform sampler2D u_MetallicRoughnessSampler;\n#endif\n#ifdef HAS_OCCLUSIONMAP\nuniform sampler2D u_OcclusionSampler;\nuniform float u_OcclusionStrength;\n#endif\n\n#ifdef ALPHA_CUTOFF\nuniform float u_AlphaCutoff;\n#endif\n\nuniform vec2 u_MetallicRoughnessValues;\nuniform vec4 u_BaseColorFactor;\n\nuniform vec3 u_Camera;\n\n// debugging flags used for shader output of intermediate PBR variables\n#ifdef PBR_DEBUG\nuniform vec4 u_ScaleDiffBaseMR;\nuniform vec4 u_ScaleFGDSpec;\n#endif\n\nin vec3 pbr_vPosition;\n\nin vec2 pbr_vUV;\n\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\nin mat3 pbr_vTBN;\n#else\nin vec3 pbr_vNormal;\n#endif\n#endif\n\n// Encapsulate the various inputs used by the various functions in the shading equation\n// We store values in this struct to simplify the integration of alternative implementations\n// of the shading terms, outlined in the Readme.MD Appendix.\nstruct PBRInfo\n{\n  float NdotL;                  // cos angle between normal and light direction\n  float NdotV;                  // cos angle between normal and view direction\n  float NdotH;                  // cos angle between normal and half vector\n  float LdotH;                  // cos angle between light direction and half vector\n  float VdotH;                  // cos angle between view direction and half vector\n  float perceptualRoughness;    // roughness value, as authored by the model creator (input to shader)\n  float metalness;              // metallic value at the surface\n  vec3 reflectance0;            // full reflectance color (normal incidence angle)\n  vec3 reflectance90;           // reflectance color at grazing angle\n  float alphaRoughness;         // roughness mapped to a more linear change in the roughness (proposed by [2])\n  vec3 diffuseColor;            // color contribution from diffuse lighting\n  vec3 specularColor;           // color contribution from specular lighting\n  vec3 n;                       // normal at surface point\n  vec3 v;                       // vector from surface point to camera\n};\n\nconst float M_PI = 3.141592653589793;\nconst float c_MinRoughness = 0.04;\n\nvec4 SRGBtoLINEAR(vec4 srgbIn)\n{\n#ifdef MANUAL_SRGB\n#ifdef SRGB_FAST_APPROXIMATION\n  vec3 linOut = pow(srgbIn.xyz,vec3(2.2));\n#else //SRGB_FAST_APPROXIMATION\n  vec3 bLess = step(vec3(0.04045),srgbIn.xyz);\n  vec3 linOut = mix( srgbIn.xyz/vec3(12.92), pow((srgbIn.xyz+vec3(0.055))/vec3(1.055),vec3(2.4)), bLess );\n#endif //SRGB_FAST_APPROXIMATION\n  return vec4(linOut,srgbIn.w);;\n#else //MANUAL_SRGB\n  return srgbIn;\n#endif //MANUAL_SRGB\n}\n\n// Find the normal for this fragment, pulling either from a predefined normal map\n// or from the interpolated mesh normal and tangent attributes.\nvec3 getNormal()\n{\n  // Retrieve the tangent space matrix\n#ifndef HAS_TANGENTS\n  vec3 pos_dx = dFdx(pbr_vPosition);\n  vec3 pos_dy = dFdy(pbr_vPosition);\n  vec3 tex_dx = dFdx(vec3(pbr_vUV, 0.0));\n  vec3 tex_dy = dFdy(vec3(pbr_vUV, 0.0));\n  vec3 t = (tex_dy.t * pos_dx - tex_dx.t * pos_dy) / (tex_dx.s * tex_dy.t - tex_dy.s * tex_dx.t);\n\n#ifdef HAS_NORMALS\n  vec3 ng = normalize(pbr_vNormal);\n#else\n  vec3 ng = cross(pos_dx, pos_dy);\n#endif\n\n  t = normalize(t - ng * dot(ng, t));\n  vec3 b = normalize(cross(ng, t));\n  mat3 tbn = mat3(t, b, ng);\n#else // HAS_TANGENTS\n  mat3 tbn = pbr_vTBN;\n#endif\n\n#ifdef HAS_NORMALMAP\n  vec3 n = texture(u_NormalSampler, pbr_vUV).rgb;\n  n = normalize(tbn * ((2.0 * n - 1.0) * vec3(u_NormalScale, u_NormalScale, 1.0)));\n#else\n  // The tbn matrix is linearly interpolated, so we need to re-normalize\n  vec3 n = normalize(tbn[2].xyz);\n#endif\n\n  return n;\n}\n\n// Calculation of the lighting contribution from an optional Image Based Light source.\n// Precomputed Environment Maps are required uniform inputs and are computed as outlined in [1].\n// See our README.md on Environment Maps [3] for additional discussion.\n#ifdef USE_IBL\nvec3 getIBLContribution(PBRInfo pbrInputs, vec3 n, vec3 reflection)\n{\n  float mipCount = 9.0; // resolution of 512x512\n  float lod = (pbrInputs.perceptualRoughness * mipCount);\n  // retrieve a scale and bias to F0. See [1], Figure 3\n  vec3 brdf = SRGBtoLINEAR(texture(u_brdfLUT,\n    vec2(pbrInputs.NdotV, 1.0 - pbrInputs.perceptualRoughness))).rgb;\n  vec3 diffuseLight = SRGBtoLINEAR(textureCube(u_DiffuseEnvSampler, n)).rgb;\n\n#ifdef USE_TEX_LOD\n  vec3 specularLight = SRGBtoLINEAR(textureCubeLod(u_SpecularEnvSampler, reflection, lod)).rgb;\n#else\n  vec3 specularLight = SRGBtoLINEAR(textureCube(u_SpecularEnvSampler, reflection)).rgb;\n#endif\n\n  vec3 diffuse = diffuseLight * pbrInputs.diffuseColor;\n  vec3 specular = specularLight * (pbrInputs.specularColor * brdf.x + brdf.y);\n\n  // For presentation, this allows us to disable IBL terms\n  diffuse *= u_ScaleIBLAmbient.x;\n  specular *= u_ScaleIBLAmbient.y;\n\n  return diffuse + specular;\n}\n#endif\n\n// Basic Lambertian diffuse\n// Implementation from Lambert's Photometria https://archive.org/details/lambertsphotome00lambgoog\n// See also [1], Equation 1\nvec3 diffuse(PBRInfo pbrInputs)\n{\n  return pbrInputs.diffuseColor / M_PI;\n}\n\n// The following equation models the Fresnel reflectance term of the spec equation (aka F())\n// Implementation of fresnel from [4], Equation 15\nvec3 specularReflection(PBRInfo pbrInputs)\n{\n  return pbrInputs.reflectance0 +\n    (pbrInputs.reflectance90 - pbrInputs.reflectance0) *\n    pow(clamp(1.0 - pbrInputs.VdotH, 0.0, 1.0), 5.0);\n}\n\n// This calculates the specular geometric attenuation (aka G()),\n// where rougher material will reflect less light back to the viewer.\n// This implementation is based on [1] Equation 4, and we adopt their modifications to\n// alphaRoughness as input as originally proposed in [2].\nfloat geometricOcclusion(PBRInfo pbrInputs)\n{\n  float NdotL = pbrInputs.NdotL;\n  float NdotV = pbrInputs.NdotV;\n  float r = pbrInputs.alphaRoughness;\n\n  float attenuationL = 2.0 * NdotL / (NdotL + sqrt(r * r + (1.0 - r * r) * (NdotL * NdotL)));\n  float attenuationV = 2.0 * NdotV / (NdotV + sqrt(r * r + (1.0 - r * r) * (NdotV * NdotV)));\n  return attenuationL * attenuationV;\n}\n\n// The following equation(s) model the distribution of microfacet normals across\n// the area being drawn (aka D())\n// Implementation from \"Average Irregularity Representation of a Roughened Surface\n// for Ray Reflection\" by T. S. Trowbridge, and K. P. Reitz\n// Follows the distribution function recommended in the SIGGRAPH 2013 course notes\n// from EPIC Games [1], Equation 3.\nfloat microfacetDistribution(PBRInfo pbrInputs)\n{\n  float roughnessSq = pbrInputs.alphaRoughness * pbrInputs.alphaRoughness;\n  float f = (pbrInputs.NdotH * roughnessSq - pbrInputs.NdotH) * pbrInputs.NdotH + 1.0;\n  return roughnessSq / (M_PI * f * f);\n}\n\nvoid PBRInfo_setAmbientLight(inout PBRInfo pbrInputs) {\n  pbrInputs.NdotL = 1.0;\n  pbrInputs.NdotH = 0.0;\n  pbrInputs.LdotH = 0.0;\n  pbrInputs.VdotH = 1.0;\n}\n\nvoid PBRInfo_setDirectionalLight(inout PBRInfo pbrInputs, vec3 lightDirection) {\n  vec3 n = pbrInputs.n;\n  vec3 v = pbrInputs.v;\n  vec3 l = normalize(lightDirection);             // Vector from surface point to light\n  vec3 h = normalize(l+v);                        // Half vector between both l and v\n\n  pbrInputs.NdotL = clamp(dot(n, l), 0.001, 1.0);\n  pbrInputs.NdotH = clamp(dot(n, h), 0.0, 1.0);\n  pbrInputs.LdotH = clamp(dot(l, h), 0.0, 1.0);\n  pbrInputs.VdotH = clamp(dot(v, h), 0.0, 1.0);\n}\n\nvoid PBRInfo_setPointLight(inout PBRInfo pbrInputs, PointLight pointLight) {\n  vec3 light_direction = normalize(pointLight.position - pbr_vPosition);\n  PBRInfo_setDirectionalLight(pbrInputs, light_direction);\n}\n\nvec3 calculateFinalColor(PBRInfo pbrInputs, vec3 lightColor) {\n  // Calculate the shading terms for the microfacet specular shading model\n  vec3 F = specularReflection(pbrInputs);\n  float G = geometricOcclusion(pbrInputs);\n  float D = microfacetDistribution(pbrInputs);\n\n  // Calculation of analytical lighting contribution\n  vec3 diffuseContrib = (1.0 - F) * diffuse(pbrInputs);\n  vec3 specContrib = F * G * D / (4.0 * pbrInputs.NdotL * pbrInputs.NdotV);\n  // Obtain final intensity as reflectance (BRDF) scaled by the energy of the light (cosine law)\n  return pbrInputs.NdotL * lightColor * (diffuseContrib + specContrib);\n}\n\nvec4 pbr_filterColor(vec4 colorUnused)\n{\n  // The albedo may be defined from a base texture or a flat color\n#ifdef HAS_BASECOLORMAP\n  vec4 baseColor = SRGBtoLINEAR(texture(u_BaseColorSampler, pbr_vUV)) * u_BaseColorFactor;\n#else\n  vec4 baseColor = u_BaseColorFactor;\n#endif\n\n#ifdef ALPHA_CUTOFF\n  if (baseColor.a < u_AlphaCutoff) {\n    discard;\n  }\n#endif\n\n  vec3 color = vec3(0, 0, 0);\n\n  if(pbr_uUnlit){\n    color.rgb = baseColor.rgb;\n  }\n  else{\n    // Metallic and Roughness material properties are packed together\n    // In glTF, these factors can be specified by fixed scalar values\n    // or from a metallic-roughness map\n    float perceptualRoughness = u_MetallicRoughnessValues.y;\n    float metallic = u_MetallicRoughnessValues.x;\n#ifdef HAS_METALROUGHNESSMAP\n    // Roughness is stored in the 'g' channel, metallic is stored in the 'b' channel.\n    // This layout intentionally reserves the 'r' channel for (optional) occlusion map data\n    vec4 mrSample = texture(u_MetallicRoughnessSampler, pbr_vUV);\n    perceptualRoughness = mrSample.g * perceptualRoughness;\n    metallic = mrSample.b * metallic;\n#endif\n    perceptualRoughness = clamp(perceptualRoughness, c_MinRoughness, 1.0);\n    metallic = clamp(metallic, 0.0, 1.0);\n    // Roughness is authored as perceptual roughness; as is convention,\n    // convert to material roughness by squaring the perceptual roughness [2].\n    float alphaRoughness = perceptualRoughness * perceptualRoughness;\n\n    vec3 f0 = vec3(0.04);\n    vec3 diffuseColor = baseColor.rgb * (vec3(1.0) - f0);\n    diffuseColor *= 1.0 - metallic;\n    vec3 specularColor = mix(f0, baseColor.rgb, metallic);\n\n    // Compute reflectance.\n    float reflectance = max(max(specularColor.r, specularColor.g), specularColor.b);\n\n    // For typical incident reflectance range (between 4% to 100%) set the grazing\n    // reflectance to 100% for typical fresnel effect.\n    // For very low reflectance range on highly diffuse objects (below 4%),\n    // incrementally reduce grazing reflecance to 0%.\n    float reflectance90 = clamp(reflectance * 25.0, 0.0, 1.0);\n    vec3 specularEnvironmentR0 = specularColor.rgb;\n    vec3 specularEnvironmentR90 = vec3(1.0, 1.0, 1.0) * reflectance90;\n\n    vec3 n = getNormal();                          // normal at surface point\n    vec3 v = normalize(u_Camera - pbr_vPosition);  // Vector from surface point to camera\n\n    float NdotV = clamp(abs(dot(n, v)), 0.001, 1.0);\n    vec3 reflection = -normalize(reflect(v, n));\n\n    PBRInfo pbrInputs = PBRInfo(\n      0.0, // NdotL\n      NdotV,\n      0.0, // NdotH\n      0.0, // LdotH\n      0.0, // VdotH\n      perceptualRoughness,\n      metallic,\n      specularEnvironmentR0,\n      specularEnvironmentR90,\n      alphaRoughness,\n      diffuseColor,\n      specularColor,\n      n,\n      v\n    );\n\n#ifdef USE_LIGHTS\n    // Apply ambient light\n    PBRInfo_setAmbientLight(pbrInputs);\n    color += calculateFinalColor(pbrInputs, lighting_uAmbientLight.color);\n\n    // Apply directional light\n    for(int i = 0; i < lighting_uDirectionalLightCount; i++) {\n      if (i < lighting_uDirectionalLightCount) {\n        PBRInfo_setDirectionalLight(pbrInputs, lighting_uDirectionalLight[i].direction);\n        color += calculateFinalColor(pbrInputs, lighting_uDirectionalLight[i].color);\n      }\n    }\n\n    // Apply point light\n    for(int i = 0; i < lighting_uPointLightCount; i++) {\n      if (i < lighting_uPointLightCount) {\n        PBRInfo_setPointLight(pbrInputs, lighting_uPointLight[i]);\n        float attenuation = getPointLightAttenuation(lighting_uPointLight[i], distance(lighting_uPointLight[i].position, pbr_vPosition));\n        color += calculateFinalColor(pbrInputs, lighting_uPointLight[i].color / attenuation);\n      }\n    }\n#endif\n\n    // Calculate lighting contribution from image based lighting source (IBL)\n#ifdef USE_IBL\n    color += getIBLContribution(pbrInputs, n, reflection);\n#endif\n\n    // Apply optional PBR terms for additional (optional) shading\n#ifdef HAS_OCCLUSIONMAP\n    float ao = texture(u_OcclusionSampler, pbr_vUV).r;\n    color = mix(color, color * ao, u_OcclusionStrength);\n#endif\n\n#ifdef HAS_EMISSIVEMAP\n    vec3 emissive = SRGBtoLINEAR(texture(u_EmissiveSampler, pbr_vUV)).rgb * u_EmissiveFactor;\n    color += emissive;\n#endif\n\n    // This section uses mix to override final color for reference app visualization\n    // of various parameters in the lighting equation.\n#ifdef PBR_DEBUG\n    // TODO: Figure out how to debug multiple lights\n\n    // color = mix(color, F, u_ScaleFGDSpec.x);\n    // color = mix(color, vec3(G), u_ScaleFGDSpec.y);\n    // color = mix(color, vec3(D), u_ScaleFGDSpec.z);\n    // color = mix(color, specContrib, u_ScaleFGDSpec.w);\n\n    // color = mix(color, diffuseContrib, u_ScaleDiffBaseMR.x);\n    color = mix(color, baseColor.rgb, u_ScaleDiffBaseMR.y);\n    color = mix(color, vec3(metallic), u_ScaleDiffBaseMR.z);\n    color = mix(color, vec3(perceptualRoughness), u_ScaleDiffBaseMR.w);\n#endif\n\n  }\n\n  return vec4(pow(color,vec3(1.0/2.2)), baseColor.a);\n}\n"],["\\\nprecision highp float;\n\nuniform bool pbr_uUnlit;\n\n#ifdef USE_IBL\nuniform samplerCube u_DiffuseEnvSampler;\nuniform samplerCube u_SpecularEnvSampler;\nuniform sampler2D u_brdfLUT;\nuniform vec2 u_ScaleIBLAmbient;\n#endif\n\n#ifdef HAS_BASECOLORMAP\nuniform sampler2D u_BaseColorSampler;\n#endif\n#ifdef HAS_NORMALMAP\nuniform sampler2D u_NormalSampler;\nuniform float u_NormalScale;\n#endif\n#ifdef HAS_EMISSIVEMAP\nuniform sampler2D u_EmissiveSampler;\nuniform vec3 u_EmissiveFactor;\n#endif\n#ifdef HAS_METALROUGHNESSMAP\nuniform sampler2D u_MetallicRoughnessSampler;\n#endif\n#ifdef HAS_OCCLUSIONMAP\nuniform sampler2D u_OcclusionSampler;\nuniform float u_OcclusionStrength;\n#endif\n\n#ifdef ALPHA_CUTOFF\nuniform float u_AlphaCutoff;\n#endif\n\nuniform vec2 u_MetallicRoughnessValues;\nuniform vec4 u_BaseColorFactor;\n\nuniform vec3 u_Camera;\n\n// debugging flags used for shader output of intermediate PBR variables\n#ifdef PBR_DEBUG\nuniform vec4 u_ScaleDiffBaseMR;\nuniform vec4 u_ScaleFGDSpec;\n#endif\n\nin vec3 pbr_vPosition;\n\nin vec2 pbr_vUV;\n\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\nin mat3 pbr_vTBN;\n#else\nin vec3 pbr_vNormal;\n#endif\n#endif\n\n// Encapsulate the various inputs used by the various functions in the shading equation\n// We store values in this struct to simplify the integration of alternative implementations\n// of the shading terms, outlined in the Readme.MD Appendix.\nstruct PBRInfo\n{\n  float NdotL;                  // cos angle between normal and light direction\n  float NdotV;                  // cos angle between normal and view direction\n  float NdotH;                  // cos angle between normal and half vector\n  float LdotH;                  // cos angle between light direction and half vector\n  float VdotH;                  // cos angle between view direction and half vector\n  float perceptualRoughness;    // roughness value, as authored by the model creator (input to shader)\n  float metalness;              // metallic value at the surface\n  vec3 reflectance0;            // full reflectance color (normal incidence angle)\n  vec3 reflectance90;           // reflectance color at grazing angle\n  float alphaRoughness;         // roughness mapped to a more linear change in the roughness (proposed by [2])\n  vec3 diffuseColor;            // color contribution from diffuse lighting\n  vec3 specularColor;           // color contribution from specular lighting\n  vec3 n;                       // normal at surface point\n  vec3 v;                       // vector from surface point to camera\n};\n\nconst float M_PI = 3.141592653589793;\nconst float c_MinRoughness = 0.04;\n\nvec4 SRGBtoLINEAR(vec4 srgbIn)\n{\n#ifdef MANUAL_SRGB\n#ifdef SRGB_FAST_APPROXIMATION\n  vec3 linOut = pow(srgbIn.xyz,vec3(2.2));\n#else //SRGB_FAST_APPROXIMATION\n  vec3 bLess = step(vec3(0.04045),srgbIn.xyz);\n  vec3 linOut = mix( srgbIn.xyz/vec3(12.92), pow((srgbIn.xyz+vec3(0.055))/vec3(1.055),vec3(2.4)), bLess );\n#endif //SRGB_FAST_APPROXIMATION\n  return vec4(linOut,srgbIn.w);;\n#else //MANUAL_SRGB\n  return srgbIn;\n#endif //MANUAL_SRGB\n}\n\n// Find the normal for this fragment, pulling either from a predefined normal map\n// or from the interpolated mesh normal and tangent attributes.\nvec3 getNormal()\n{\n  // Retrieve the tangent space matrix\n#ifndef HAS_TANGENTS\n  vec3 pos_dx = dFdx(pbr_vPosition);\n  vec3 pos_dy = dFdy(pbr_vPosition);\n  vec3 tex_dx = dFdx(vec3(pbr_vUV, 0.0));\n  vec3 tex_dy = dFdy(vec3(pbr_vUV, 0.0));\n  vec3 t = (tex_dy.t * pos_dx - tex_dx.t * pos_dy) / (tex_dx.s * tex_dy.t - tex_dy.s * tex_dx.t);\n\n#ifdef HAS_NORMALS\n  vec3 ng = normalize(pbr_vNormal);\n#else\n  vec3 ng = cross(pos_dx, pos_dy);\n#endif\n\n  t = normalize(t - ng * dot(ng, t));\n  vec3 b = normalize(cross(ng, t));\n  mat3 tbn = mat3(t, b, ng);\n#else // HAS_TANGENTS\n  mat3 tbn = pbr_vTBN;\n#endif\n\n#ifdef HAS_NORMALMAP\n  vec3 n = texture(u_NormalSampler, pbr_vUV).rgb;\n  n = normalize(tbn * ((2.0 * n - 1.0) * vec3(u_NormalScale, u_NormalScale, 1.0)));\n#else\n  // The tbn matrix is linearly interpolated, so we need to re-normalize\n  vec3 n = normalize(tbn[2].xyz);\n#endif\n\n  return n;\n}\n\n// Calculation of the lighting contribution from an optional Image Based Light source.\n// Precomputed Environment Maps are required uniform inputs and are computed as outlined in [1].\n// See our README.md on Environment Maps [3] for additional discussion.\n#ifdef USE_IBL\nvec3 getIBLContribution(PBRInfo pbrInputs, vec3 n, vec3 reflection)\n{\n  float mipCount = 9.0; // resolution of 512x512\n  float lod = (pbrInputs.perceptualRoughness * mipCount);\n  // retrieve a scale and bias to F0. See [1], Figure 3\n  vec3 brdf = SRGBtoLINEAR(texture(u_brdfLUT,\n    vec2(pbrInputs.NdotV, 1.0 - pbrInputs.perceptualRoughness))).rgb;\n  vec3 diffuseLight = SRGBtoLINEAR(textureCube(u_DiffuseEnvSampler, n)).rgb;\n\n#ifdef USE_TEX_LOD\n  vec3 specularLight = SRGBtoLINEAR(textureCubeLod(u_SpecularEnvSampler, reflection, lod)).rgb;\n#else\n  vec3 specularLight = SRGBtoLINEAR(textureCube(u_SpecularEnvSampler, reflection)).rgb;\n#endif\n\n  vec3 diffuse = diffuseLight * pbrInputs.diffuseColor;\n  vec3 specular = specularLight * (pbrInputs.specularColor * brdf.x + brdf.y);\n\n  // For presentation, this allows us to disable IBL terms\n  diffuse *= u_ScaleIBLAmbient.x;\n  specular *= u_ScaleIBLAmbient.y;\n\n  return diffuse + specular;\n}\n#endif\n\n// Basic Lambertian diffuse\n// Implementation from Lambert's Photometria https://archive.org/details/lambertsphotome00lambgoog\n// See also [1], Equation 1\nvec3 diffuse(PBRInfo pbrInputs)\n{\n  return pbrInputs.diffuseColor / M_PI;\n}\n\n// The following equation models the Fresnel reflectance term of the spec equation (aka F())\n// Implementation of fresnel from [4], Equation 15\nvec3 specularReflection(PBRInfo pbrInputs)\n{\n  return pbrInputs.reflectance0 +\n    (pbrInputs.reflectance90 - pbrInputs.reflectance0) *\n    pow(clamp(1.0 - pbrInputs.VdotH, 0.0, 1.0), 5.0);\n}\n\n// This calculates the specular geometric attenuation (aka G()),\n// where rougher material will reflect less light back to the viewer.\n// This implementation is based on [1] Equation 4, and we adopt their modifications to\n// alphaRoughness as input as originally proposed in [2].\nfloat geometricOcclusion(PBRInfo pbrInputs)\n{\n  float NdotL = pbrInputs.NdotL;\n  float NdotV = pbrInputs.NdotV;\n  float r = pbrInputs.alphaRoughness;\n\n  float attenuationL = 2.0 * NdotL / (NdotL + sqrt(r * r + (1.0 - r * r) * (NdotL * NdotL)));\n  float attenuationV = 2.0 * NdotV / (NdotV + sqrt(r * r + (1.0 - r * r) * (NdotV * NdotV)));\n  return attenuationL * attenuationV;\n}\n\n// The following equation(s) model the distribution of microfacet normals across\n// the area being drawn (aka D())\n// Implementation from \"Average Irregularity Representation of a Roughened Surface\n// for Ray Reflection\" by T. S. Trowbridge, and K. P. Reitz\n// Follows the distribution function recommended in the SIGGRAPH 2013 course notes\n// from EPIC Games [1], Equation 3.\nfloat microfacetDistribution(PBRInfo pbrInputs)\n{\n  float roughnessSq = pbrInputs.alphaRoughness * pbrInputs.alphaRoughness;\n  float f = (pbrInputs.NdotH * roughnessSq - pbrInputs.NdotH) * pbrInputs.NdotH + 1.0;\n  return roughnessSq / (M_PI * f * f);\n}\n\nvoid PBRInfo_setAmbientLight(inout PBRInfo pbrInputs) {\n  pbrInputs.NdotL = 1.0;\n  pbrInputs.NdotH = 0.0;\n  pbrInputs.LdotH = 0.0;\n  pbrInputs.VdotH = 1.0;\n}\n\nvoid PBRInfo_setDirectionalLight(inout PBRInfo pbrInputs, vec3 lightDirection) {\n  vec3 n = pbrInputs.n;\n  vec3 v = pbrInputs.v;\n  vec3 l = normalize(lightDirection);             // Vector from surface point to light\n  vec3 h = normalize(l+v);                        // Half vector between both l and v\n\n  pbrInputs.NdotL = clamp(dot(n, l), 0.001, 1.0);\n  pbrInputs.NdotH = clamp(dot(n, h), 0.0, 1.0);\n  pbrInputs.LdotH = clamp(dot(l, h), 0.0, 1.0);\n  pbrInputs.VdotH = clamp(dot(v, h), 0.0, 1.0);\n}\n\nvoid PBRInfo_setPointLight(inout PBRInfo pbrInputs, PointLight pointLight) {\n  vec3 light_direction = normalize(pointLight.position - pbr_vPosition);\n  PBRInfo_setDirectionalLight(pbrInputs, light_direction);\n}\n\nvec3 calculateFinalColor(PBRInfo pbrInputs, vec3 lightColor) {\n  // Calculate the shading terms for the microfacet specular shading model\n  vec3 F = specularReflection(pbrInputs);\n  float G = geometricOcclusion(pbrInputs);\n  float D = microfacetDistribution(pbrInputs);\n\n  // Calculation of analytical lighting contribution\n  vec3 diffuseContrib = (1.0 - F) * diffuse(pbrInputs);\n  vec3 specContrib = F * G * D / (4.0 * pbrInputs.NdotL * pbrInputs.NdotV);\n  // Obtain final intensity as reflectance (BRDF) scaled by the energy of the light (cosine law)\n  return pbrInputs.NdotL * lightColor * (diffuseContrib + specContrib);\n}\n\nvec4 pbr_filterColor(vec4 colorUnused)\n{\n  // The albedo may be defined from a base texture or a flat color\n#ifdef HAS_BASECOLORMAP\n  vec4 baseColor = SRGBtoLINEAR(texture(u_BaseColorSampler, pbr_vUV)) * u_BaseColorFactor;\n#else\n  vec4 baseColor = u_BaseColorFactor;\n#endif\n\n#ifdef ALPHA_CUTOFF\n  if (baseColor.a < u_AlphaCutoff) {\n    discard;\n  }\n#endif\n\n  vec3 color = vec3(0, 0, 0);\n\n  if(pbr_uUnlit){\n    color.rgb = baseColor.rgb;\n  }\n  else{\n    // Metallic and Roughness material properties are packed together\n    // In glTF, these factors can be specified by fixed scalar values\n    // or from a metallic-roughness map\n    float perceptualRoughness = u_MetallicRoughnessValues.y;\n    float metallic = u_MetallicRoughnessValues.x;\n#ifdef HAS_METALROUGHNESSMAP\n    // Roughness is stored in the 'g' channel, metallic is stored in the 'b' channel.\n    // This layout intentionally reserves the 'r' channel for (optional) occlusion map data\n    vec4 mrSample = texture(u_MetallicRoughnessSampler, pbr_vUV);\n    perceptualRoughness = mrSample.g * perceptualRoughness;\n    metallic = mrSample.b * metallic;\n#endif\n    perceptualRoughness = clamp(perceptualRoughness, c_MinRoughness, 1.0);\n    metallic = clamp(metallic, 0.0, 1.0);\n    // Roughness is authored as perceptual roughness; as is convention,\n    // convert to material roughness by squaring the perceptual roughness [2].\n    float alphaRoughness = perceptualRoughness * perceptualRoughness;\n\n    vec3 f0 = vec3(0.04);\n    vec3 diffuseColor = baseColor.rgb * (vec3(1.0) - f0);\n    diffuseColor *= 1.0 - metallic;\n    vec3 specularColor = mix(f0, baseColor.rgb, metallic);\n\n    // Compute reflectance.\n    float reflectance = max(max(specularColor.r, specularColor.g), specularColor.b);\n\n    // For typical incident reflectance range (between 4% to 100%) set the grazing\n    // reflectance to 100% for typical fresnel effect.\n    // For very low reflectance range on highly diffuse objects (below 4%),\n    // incrementally reduce grazing reflecance to 0%.\n    float reflectance90 = clamp(reflectance * 25.0, 0.0, 1.0);\n    vec3 specularEnvironmentR0 = specularColor.rgb;\n    vec3 specularEnvironmentR90 = vec3(1.0, 1.0, 1.0) * reflectance90;\n\n    vec3 n = getNormal();                          // normal at surface point\n    vec3 v = normalize(u_Camera - pbr_vPosition);  // Vector from surface point to camera\n\n    float NdotV = clamp(abs(dot(n, v)), 0.001, 1.0);\n    vec3 reflection = -normalize(reflect(v, n));\n\n    PBRInfo pbrInputs = PBRInfo(\n      0.0, // NdotL\n      NdotV,\n      0.0, // NdotH\n      0.0, // LdotH\n      0.0, // VdotH\n      perceptualRoughness,\n      metallic,\n      specularEnvironmentR0,\n      specularEnvironmentR90,\n      alphaRoughness,\n      diffuseColor,\n      specularColor,\n      n,\n      v\n    );\n\n#ifdef USE_LIGHTS\n    // Apply ambient light\n    PBRInfo_setAmbientLight(pbrInputs);\n    color += calculateFinalColor(pbrInputs, lighting_uAmbientLight.color);\n\n    // Apply directional light\n    for(int i = 0; i < lighting_uDirectionalLightCount; i++) {\n      if (i < lighting_uDirectionalLightCount) {\n        PBRInfo_setDirectionalLight(pbrInputs, lighting_uDirectionalLight[i].direction);\n        color += calculateFinalColor(pbrInputs, lighting_uDirectionalLight[i].color);\n      }\n    }\n\n    // Apply point light\n    for(int i = 0; i < lighting_uPointLightCount; i++) {\n      if (i < lighting_uPointLightCount) {\n        PBRInfo_setPointLight(pbrInputs, lighting_uPointLight[i]);\n        float attenuation = getPointLightAttenuation(lighting_uPointLight[i], distance(lighting_uPointLight[i].position, pbr_vPosition));\n        color += calculateFinalColor(pbrInputs, lighting_uPointLight[i].color / attenuation);\n      }\n    }\n#endif\n\n    // Calculate lighting contribution from image based lighting source (IBL)\n#ifdef USE_IBL\n    color += getIBLContribution(pbrInputs, n, reflection);\n#endif\n\n    // Apply optional PBR terms for additional (optional) shading\n#ifdef HAS_OCCLUSIONMAP\n    float ao = texture(u_OcclusionSampler, pbr_vUV).r;\n    color = mix(color, color * ao, u_OcclusionStrength);\n#endif\n\n#ifdef HAS_EMISSIVEMAP\n    vec3 emissive = SRGBtoLINEAR(texture(u_EmissiveSampler, pbr_vUV)).rgb * u_EmissiveFactor;\n    color += emissive;\n#endif\n\n    // This section uses mix to override final color for reference app visualization\n    // of various parameters in the lighting equation.\n#ifdef PBR_DEBUG\n    // TODO: Figure out how to debug multiple lights\n\n    // color = mix(color, F, u_ScaleFGDSpec.x);\n    // color = mix(color, vec3(G), u_ScaleFGDSpec.y);\n    // color = mix(color, vec3(D), u_ScaleFGDSpec.z);\n    // color = mix(color, specContrib, u_ScaleFGDSpec.w);\n\n    // color = mix(color, diffuseContrib, u_ScaleDiffBaseMR.x);\n    color = mix(color, baseColor.rgb, u_ScaleDiffBaseMR.y);\n    color = mix(color, vec3(metallic), u_ScaleDiffBaseMR.z);\n    color = mix(color, vec3(perceptualRoughness), u_ScaleDiffBaseMR.w);\n#endif\n\n  }\n\n  return vec4(pow(color,vec3(1.0/2.2)), baseColor.a);\n}\n"]))),ui={name:"pbr",vs:ai,fs:ci,defines:{LIGHTING_FRAGMENT:1},dependencies:[oi],getUniforms:e=>e};class di extends Kn{constructor(e){super(e),this.bounds=null,this.model=e.model,this.managedResources=e.managedResources||[],this.bounds=e.bounds||null,this.setProps(e)}destroy(){this.model&&(this.model.destroy(),this.model=null),this.managedResources.forEach((e=>e.destroy())),this.managedResources=[]}getBounds(){return this.bounds}draw(e){return this.model.draw(e)}}var hi;function _i(e,t,n,i){const r={defines:{MANUAL_SRGB:1,SRGB_FAST_APPROXIMATION:1},bindings:{},uniforms:{u_Camera:[0,0,0],u_MetallicRoughnessValues:[1,1]},parameters:{},glParameters:{},generatedTextures:[]};r.defines.USE_TEX_LOD=1;const{imageBasedLightingEnvironment:o}=i;return o&&(r.bindings.u_DiffuseEnvSampler=o.diffuseEnvSampler.texture,r.bindings.u_SpecularEnvSampler=o.specularEnvSampler.texture,r.bindings.u_brdfLUT=o.brdfLutTexture.texture,r.uniforms.u_ScaleIBLAmbient=[1,1]),null!=i&&i.pbrDebug&&(r.defines.PBR_DEBUG=1,r.uniforms.u_ScaleDiffBaseMR=[0,0,0,0],r.uniforms.u_ScaleFGDSpec=[0,0,0,0]),n.NORMAL&&(r.defines.HAS_NORMALS=1),n.TANGENT&&null!=i&&i.useTangents&&(r.defines.HAS_TANGENTS=1),n.TEXCOORD_0&&(r.defines.HAS_UV=1),null!=i&&i.imageBasedLightingEnvironment&&(r.defines.USE_IBL=1),null!=i&&i.lights&&(r.defines.USE_LIGHTS=1),t&&function(e,t,n){n.uniforms.pbr_uUnlit=Boolean(t.unlit),t.pbrMetallicRoughness&&function(e,t,n){t.baseColorTexture&&fi(e,t.baseColorTexture,"u_BaseColorSampler","HAS_BASECOLORMAP",n);n.uniforms.u_BaseColorFactor=t.baseColorFactor||[1,1,1,1],t.metallicRoughnessTexture&&fi(e,t.metallicRoughnessTexture,"u_MetallicRoughnessSampler","HAS_METALROUGHNESSMAP",n);const{metallicFactor:i=1,roughnessFactor:r=1}=t;n.uniforms.u_MetallicRoughnessValues=[i,r]}(e,t.pbrMetallicRoughness,n);if(t.normalTexture){fi(e,t.normalTexture,"u_NormalSampler","HAS_NORMALMAP",n);const{scale:i=1}=t.normalTexture;n.uniforms.u_NormalScale=i}if(t.occlusionTexture){fi(e,t.occlusionTexture,"u_OcclusionSampler","HAS_OCCLUSIONMAP",n);const{strength:i=1}=t.occlusionTexture;n.uniforms.u_OcclusionStrength=i}t.emissiveTexture&&(fi(e,t.emissiveTexture,"u_EmissiveSampler","HAS_EMISSIVEMAP",n),n.uniforms.u_EmissiveFactor=t.emissiveFactor||[0,0,0]);switch(t.alphaMode){case"MASK":const{alphaCutoff:e=.5}=t;n.defines.ALPHA_CUTOFF=1,n.uniforms.u_AlphaCutoff=e;break;case"BLEND":a.R.warn("glTF BLEND alphaMode might not work well because it requires mesh sorting")(),n.parameters.blendColorOperation="add",n.parameters.blendColorSrcFactor="src-alpha",n.parameters.blendColorDstFactor="one-minus-src-alpha",n.parameters.blendAlphaOperation="add",n.parameters.blendAlphaSrcFactor="one",n.parameters.blendAlphaDstFactor="one-minus-src-alpha",n.glParameters.blend=!0,n.glParameters.blendEquation=hi.FUNC_ADD,n.glParameters.blendFunc=[hi.SRC_ALPHA,hi.ONE_MINUS_SRC_ALPHA,hi.ONE,hi.ONE_MINUS_SRC_ALPHA]}}(e,t,r),r}function fi(e,t,n,i,r){var o;void 0===i&&(i=null);const s=(null==t||null==(o=t.texture)||null==(o=o.sampler)?void 0:o.parameters)||{},a=t.texture.source.image;let l,c={};a.compressed?(l=a,c={[hi.TEXTURE_MIN_FILTER]:a.data.length>1?hi.LINEAR_MIPMAP_NEAREST:hi.LINEAR}):l={data:a};const u=e.createTexture({id:t.uniformName||t.id,parameters:{...s,...c},pixelStore:{[hi.UNPACK_FLIP_Y_WEBGL]:!1},...l});r.bindings[n]=u,i&&(r.defines[i]=1),r.generatedTextures.push(u)}!function(e){e[e.FUNC_ADD=32774]="FUNC_ADD",e[e.ONE=1]="ONE",e[e.SRC_ALPHA=770]="SRC_ALPHA",e[e.ONE_MINUS_SRC_ALPHA=771]="ONE_MINUS_SRC_ALPHA",e[e.TEXTURE_MIN_FILTER=10241]="TEXTURE_MIN_FILTER",e[e.LINEAR=9729]="LINEAR",e[e.LINEAR_MIPMAP_NEAREST=9985]="LINEAR_MIPMAP_NEAREST",e[e.UNPACK_FLIP_Y_WEBGL=37440]="UNPACK_FLIP_Y_WEBGL"}(hi||(hi={}));var pi;!function(e){e[e.POINTS=0]="POINTS",e[e.LINES=1]="LINES",e[e.LINE_LOOP=2]="LINE_LOOP",e[e.LINE_STRIP=3]="LINE_STRIP",e[e.TRIANGLES=4]="TRIANGLES",e[e.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=6]="TRIANGLE_FAN"}(pi||(pi={}));const Ei={modelOptions:{},pbrDebug:!1,imageBasedLightingEnvironment:null,lights:!0,useTangents:!1};class gi{constructor(e,t){void 0===t&&(t={}),this.device=void 0,this.options=void 0,this.gltf=void 0,this.device=e,this.options={...Ei,...t}}instantiate(e){this.gltf=e;return(e.scenes||[]).map((e=>this.createScene(e)))}createAnimator(){return Array.isArray(this.gltf.animations)?new qn(this.gltf):null}createScene(e){const t=(e.nodes||[]).map((e=>this.createNode(e)));return new zn({id:e.name||e.id,children:t})}createNode(e){if(!e._node){const t=(e.children||[]).map((e=>this.createNode(e)));e.mesh&&t.push(this.createMesh(e.mesh));const n=new zn({id:e.name||e.id,children:t});if(e.matrix)n.setMatrix(e.matrix);else{if(n.matrix.identity(),e.translation&&n.matrix.translate(e.translation),e.rotation){const t=(new lt.k).fromQuaternion(e.rotation);n.matrix.multiplyRight(t)}e.scale&&n.matrix.scale(e.scale)}e._node=n}return e._node}createMesh(e){if(!e._mesh){const t=(e.primitives||[]).map(((t,n)=>this.createPrimitive(t,n,e))),n=new zn({id:e.name||e.id,children:t});e._mesh=n}return e._mesh}createPrimitive(e,t,n){const i=e.name||(n.name||n.id)+"-primitive-"+t,r=function(e){switch(e){case pi.POINTS:return"point-list";case pi.LINES:return"line-list";case pi.LINE_STRIP:return"line-strip";case pi.TRIANGLES:return"triangle-list";case pi.TRIANGLE_STRIP:return"triangle-strip";default:throw new Error(String(e))}}(e.mode||4),o=e.indices?e.indices.count:this.getVertexCount(e.attributes),s=function(e,t){const{id:n,geometry:i,material:r,vertexCount:o,materialOptions:s,modelOptions:l}=t,c=_i(e,r,i.attributes,s);a.R.info(4,"createGLTFModel defines: ",c.defines)();const u={id:n,source:"\nlayout(0) positions: vec4; // in vec4 POSITION;\n\n  #ifdef HAS_NORMALS\n    in vec4 normals; // in vec4 NORMAL;\n  #endif\n\n  #ifdef HAS_TANGENTS\n    in vec4 TANGENT;\n  #endif\n\n  #ifdef HAS_UV\n    // in vec2 TEXCOORD_0;\n    in vec2 texCoords;\n  #endif\n\n@vertex\n  void main(void) {\n    vec4 _NORMAL = vec4(0.);\n    vec4 _TANGENT = vec4(0.);\n    vec2 _TEXCOORD_0 = vec2(0.);\n\n    #ifdef HAS_NORMALS\n      _NORMAL = normals;\n    #endif\n\n    #ifdef HAS_TANGENTS\n      _TANGENT = TANGENT;\n    #endif\n\n    #ifdef HAS_UV\n      _TEXCOORD_0 = texCoords;\n    #endif\n\n    pbr_setPositionNormalTangentUV(positions, _NORMAL, _TANGENT, _TEXCOORD_0);\n    gl_Position = u_MVPMatrix * positions;\n  }\n\n@fragment\n  out vec4 fragmentColor;\n\n  void main(void) {\n    vec3 pos = pbr_vPosition;\n    fragmentColor = pbr_filterColor(vec4(1.0));\n  }\n",vs:"#version 300 es\nin vec4 positions;\n#ifdef HAS_NORMALS\nin vec4 normals;\n#endif\n#ifdef HAS_TANGENTS\nin vec4 TANGENT;\n#endif\n#ifdef HAS_UV\nin vec2 texCoords;\n#endif\nvoid main(void) {\nvec4 _NORMAL = vec4(0.);\nvec4 _TANGENT = vec4(0.);\nvec2 _TEXCOORD_0 = vec2(0.);\n#ifdef HAS_NORMALS\n_NORMAL = normals;\n#endif\n#ifdef HAS_TANGENTS\n_TANGENT = TANGENT;\n#endif\n#ifdef HAS_UV\n_TEXCOORD_0 = texCoords;\n#endif\npbr_setPositionNormalTangentUV(positions, _NORMAL, _TANGENT, _TEXCOORD_0);\ngl_Position = u_MVPMatrix * positions;\n}\n",fs:"#version 300 es\nout vec4 fragmentColor;\nvoid main(void) {\nvec3 pos = pbr_vPosition;\nfragmentColor = pbr_filterColor(vec4(1.0));\n}\n",geometry:i,topology:i.topology,vertexCount:o,modules:[ui],...l,bindings:{...c.bindings,...l.bindings},defines:{...c.defines,...l.defines},parameters:{depthWriteEnabled:!0,depthCompare:"less",depthFormat:"depth24plus",cullMode:"back",...c.parameters,...l.parameters},uniforms:{...c.uniforms,...l.uniforms}},d=new Ve(e,u);return new di({managedResources:[],model:d})}(this.device,{id:i,geometry:this.createGeometry(i,e,r),material:e.material,materialOptions:this.options,modelOptions:this.options.modelOptions,vertexCount:o});return s.bounds=[e.attributes.POSITION.min,e.attributes.POSITION.max],s}getVertexCount(e){throw new Error("getVertexCount not implemented")}createGeometry(e,t,n){const i={};for(const[r,o]of Object.entries(t.attributes)){const{components:e,size:t,value:n}=o;i[r]={size:null!=t?t:e,value:n}}return new Ke({id:e,topology:n,indices:t.indices.value,attributes:i})}createBuffer(e,t){e.bufferView||(e.bufferView={});const{bufferView:n}=e;return n.lumaBuffers||(n.lumaBuffers={}),n.lumaBuffers[t]||(n.lumaBuffers[t]=this.device.createBuffer({id:"from-"+n.id,data:n.data||e.value})),n.lumaBuffers[t]}createSampler(e){return e}needsPOT(){return!1}}var mi=n(6547),Ri=n(9737);class Ai extends p{constructor(e){let{device:t}=e;super(),this.scenes=[],this.center=[0,0,0],this.vantage=[0,0,0],this.time=0,this.device=t,this.loadGLTF("Avocado");const n=document.getElementById("model-select");null==n||n.addEventListener("change",(e=>{this.loadGLTF(e.target.value)}))}onFinalize(){this.scenes[0].traverse((e=>e.model.destroy()))}onRender(e){var t;let{aspect:n,device:i,time:r}=e;if(null==(t=this.scenes)||!t.length)return;const o=i.beginRenderPass({clearColor:[0,0,0,1]}),s=2*this.vantage[0],a=s/1e3,l=(new lt.k).perspective({fovy:Math.PI/3,aspect:n,near:a,far:s}),c=[this.vantage[0]*Math.sin(.001*r),this.vantage[1],this.vantage[2]*Math.cos(.001*r)];this.scenes[0].traverse(((e,t)=>{let{worldMatrix:n}=t;const{model:i}=e,r=n.transformAsPoint(c),s=n.transformAsPoint(this.center),a=(new lt.k).lookAt({eye:r,center:s}),u=new lt.k(l).multiplyRight(a).multiplyRight(n);i.setUniforms({u_Camera:r,u_MVPMatrix:u,u_ModelMatrix:n,u_NormalMatrix:new lt.k(n).invert().transpose()}),i.updateModuleSettings({lightSources:Ti}),i.draw(o)})),o.end()}async loadGLTF(e){const t=this.device.canvasContext.canvas;t.style.opacity="0.1";const n=await(0,Wn.H)("https://github.khronos.org/glTF-Sample-Viewer-Release/assets/models/Models/"+e+"/glTF/"+e+".gltf",mi.B),i=(0,Ri.R)(n),{scenes:r}=function(e,t,n){const i=new gi(e,n);return{scenes:i.instantiate(t),animator:i.createAnimator()}}(this.device,i,{pbrDebug:!1,imageBasedLightingEnvironment:null,lights:!0});this.scenes=r;let o=[1/0,1/0,1/0],s=[0,0,0];this.scenes[0].traverse((e=>{const{bounds:t}=e;o=o.map(((e,n)=>Math.min(e,t[0][n],t[1][n]))),s=s.map(((e,n)=>Math.max(e,t[0][n],t[1][n])))})),this.vantage=[2*(s[0]+s[2]),s[1],2*(s[0]+s[2])],this.center=[.5*(o[0]+s[0]),.5*(o[1]+s[1]),.5*(o[2]+s[2])],t.style.opacity="1"}}Ai.info="\nHave to start somewhere...\n";const Ti={ambientLight:{color:[255,133,133],intensity:1,type:"ambient"},directionalLights:[{color:[222,244,255],direction:[1,-.5,.5],intensity:10,position:[0,0,0],type:"directional"}],pointLights:[{attenuation:0,color:[255,222,222],position:[3,10,0],intensity:5,type:"point"}]};var vi;const Si=F(vi||(vi=function(e,t){return t||(t=e.slice(0)),e.raw=t,e}(["precision highp int;\n\n// #if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\nstruct AmbientLight {\n  vec3 color;\n};\n\nstruct PointLight {\n  vec3 color;\n  vec3 position;\n  vec3 attenuation; // 2nd order x:Constant-y:Linear-z:Exponential\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform lightingUniforms {\n  int enabled;\n  int pointLightCount;\n  int directionalLightCount;\n\n  vec3 ambientColor;\n\n  int lightType;\n  vec3 lightColor;\n  vec3 lightDirection;\n  vec3 lightPosition;\n  vec3 lightAttenuation;\n\n  // AmbientLight ambientLight;\n  // PointLight pointLight[MAX_LIGHTS];\n  // DirectionalLight directionalLight[MAX_LIGHTS];\n} lighting;\n\nPointLight lighting_getPointLight(int index) {\n  return PointLight(lighting.lightColor, lighting.lightPosition, lighting.lightAttenuation);\n}\n\nDirectionalLight lighting_getDirectionalLight(int index) {\n  return DirectionalLight(lighting.lightColor, lighting.lightDirection);\n} \n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n// #endif\n"],["\\\nprecision highp int;\n\n// #if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\nstruct AmbientLight {\n  vec3 color;\n};\n\nstruct PointLight {\n  vec3 color;\n  vec3 position;\n  vec3 attenuation; // 2nd order x:Constant-y:Linear-z:Exponential\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform lightingUniforms {\n  int enabled;\n  int pointLightCount;\n  int directionalLightCount;\n\n  vec3 ambientColor;\n\n  int lightType;\n  vec3 lightColor;\n  vec3 lightDirection;\n  vec3 lightPosition;\n  vec3 lightAttenuation;\n\n  // AmbientLight ambientLight;\n  // PointLight pointLight[MAX_LIGHTS];\n  // DirectionalLight directionalLight[MAX_LIGHTS];\n} lighting;\n\nPointLight lighting_getPointLight(int index) {\n  return PointLight(lighting.lightColor, lighting.lightPosition, lighting.lightAttenuation);\n}\n\nDirectionalLight lighting_getDirectionalLight(int index) {\n  return DirectionalLight(lighting.lightColor, lighting.lightDirection);\n} \n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n// #endif\n"]))),Ci=255;let bi=function(e){return e[e.POINT=0]="POINT",e[e.DIRECTIONAL=1]="DIRECTIONAL",e}({});const Ii={props:{},uniforms:{},name:"lighting",defines:{MAX_LIGHTS:5},uniformTypes:{enabled:"i32",ambientLightColor:"vec3<f32>",numberOfLights:"i32",lightType:"i32",lightColor:"vec3<f32>",lightPosition:"vec3<f32>",lightDirection:"vec3<f32>",lightAttenuation:"vec3<f32>"},defaultUniforms:{enabled:1,ambientLightColor:[.1,.1,.1],numberOfLights:0,lightType:bi.POINT,lightColor:[1,1,1],lightPosition:[1,1,2],lightDirection:[1,1,1],lightAttenuation:[1,1,1]},vs:Si,fs:Si,getUniforms:function(e,t){void 0===t&&(t={});if(!(e=e?{...e}:e))return{...Ii.defaultUniforms};e.lights&&(e={...e,...Li(e.lights),lights:void 0});const{ambientLight:n,pointLights:i,directionalLights:r}=e||{};if(!(n||i&&i.length>0||r&&r.length>0))return{...Ii.defaultUniforms,enabled:0};const o={...Ii.defaultUniforms,...t,...Ni({ambientLight:n,pointLights:i,directionalLights:r})};void 0!==e.enabled&&(o.enabled=e.enabled?1:0);return o}};function Ni(e){let{ambientLight:t,pointLights:n=[],directionalLights:i=[]}=e;const r={};r.ambientLightColor=Pi(t);let o=0;for(const s of n)r.lightType=bi.POINT,r.lightColor=Pi(s),r.lightPosition=s.position,r.lightAttenuation=[s.attenuation||1,0,0],o++;for(const s of i)r.lightType=bi.DIRECTIONAL,r.lightColor=Pi(s),r.lightPosition=s.position,r.lightDirection=s.direction,o++;return r.numberOfLights=o,r}function Li(e){var t,n;const i={pointLights:[],directionalLights:[]};for(const r of e||[])switch(r.type){case"ambient":i.ambientLight=r;break;case"directional":null==(t=i.directionalLights)||t.push(r);break;case"point":null==(n=i.pointLights)||n.push(r)}return i}function Pi(e){void 0===e&&(e={});const{color:t=[0,0,0],intensity:n=1}=e;return t.map((e=>e*n/Ci))}var Mi,Oi;function Fi(e,t){return t||(t=e.slice(0)),e.raw=t,e}const Di=F(Mi||(Mi=Fi(["uniform phongMaterialUniforms {\n  uniform float ambient;\n  uniform float diffuse;\n  uniform float shininess;\n  uniform vec3  specularColor;\n} material;\n"],["\\\nuniform phongMaterialUniforms {\n  uniform float ambient;\n  uniform float diffuse;\n  uniform float shininess;\n  uniform vec3  specularColor;\n} material;\n"]))),Bi=F(Oi||(Oi=Fi(["uniform phongMaterialUniforms {\n  uniform float ambient;\n  uniform float diffuse;\n  uniform float shininess;\n  uniform vec3  specularColor;\n} material;\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {\n  vec3 halfway_direction = normalize(light_direction + view_direction);\n  float lambertian = dot(light_direction, normal_worldspace);\n  float specular = 0.0;\n  if (lambertian > 0.0) {\n    float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\n    specular = pow(specular_angle, material.shininess);\n  }\n  lambertian = max(lambertian, 0.0);\n  return (lambertian * material.diffuse * surfaceColor + specular * material.specularColor) * color;\n}\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\n  vec3 lightColor = surfaceColor;\n\n  if (lighting.enabled == 0) {\n    return lightColor;\n  }\n\n  vec3 view_direction = normalize(cameraPosition - position_worldspace);\n  lightColor = material.ambient * surfaceColor * lighting.ambientColor;\n\n  if (lighting.lightType == 0) {\n    PointLight pointLight = lighting_getPointLight(0);\n    vec3 light_position_worldspace = pointLight.position;\n    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n  } else if (lighting.lightType == 1) {\n    DirectionalLight directionalLight = lighting_getDirectionalLight(0);\n    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n  }\n  \n  /*\n  for (int i = 0; i < MAX_LIGHTS; i++) {\n    if (i >= lighting.pointLightCount) {\n      break;\n    }\n    PointLight pointLight = lighting.pointLight[i];\n    vec3 light_position_worldspace = pointLight.position;\n    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n  }\n\n  for (int i = 0; i < MAX_LIGHTS; i++) {\n    if (i >= lighting.directionalLightCount) {\n      break;\n    }\n    DirectionalLight directionalLight = lighting.directionalLight[i];\n    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n  }\n  */\n  return lightColor;\n}\n\nvec3 lighting_getSpecularLightColor(vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\n  vec3 lightColor = vec3(0, 0, 0);\n  vec3 surfaceColor = vec3(0, 0, 0);\n\n  if (lighting.enabled == 0) {\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\n\n    switch (lighting.lightType) {\n      case 0:\n        PointLight pointLight = lighting_getPointLight(0);\n        vec3 light_position_worldspace = pointLight.position;\n        vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n        lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n        break;\n\n      case 1:\n        DirectionalLight directionalLight = lighting_getDirectionalLight(0);\n        lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n        break;\n    }\n  }\n  return lightColor;\n}\n"],["\\\nuniform phongMaterialUniforms {\n  uniform float ambient;\n  uniform float diffuse;\n  uniform float shininess;\n  uniform vec3  specularColor;\n} material;\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {\n  vec3 halfway_direction = normalize(light_direction + view_direction);\n  float lambertian = dot(light_direction, normal_worldspace);\n  float specular = 0.0;\n  if (lambertian > 0.0) {\n    float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\n    specular = pow(specular_angle, material.shininess);\n  }\n  lambertian = max(lambertian, 0.0);\n  return (lambertian * material.diffuse * surfaceColor + specular * material.specularColor) * color;\n}\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\n  vec3 lightColor = surfaceColor;\n\n  if (lighting.enabled == 0) {\n    return lightColor;\n  }\n\n  vec3 view_direction = normalize(cameraPosition - position_worldspace);\n  lightColor = material.ambient * surfaceColor * lighting.ambientColor;\n\n  if (lighting.lightType == 0) {\n    PointLight pointLight = lighting_getPointLight(0);\n    vec3 light_position_worldspace = pointLight.position;\n    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n  } else if (lighting.lightType == 1) {\n    DirectionalLight directionalLight = lighting_getDirectionalLight(0);\n    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n  }\n  \n  /*\n  for (int i = 0; i < MAX_LIGHTS; i++) {\n    if (i >= lighting.pointLightCount) {\n      break;\n    }\n    PointLight pointLight = lighting.pointLight[i];\n    vec3 light_position_worldspace = pointLight.position;\n    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n  }\n\n  for (int i = 0; i < MAX_LIGHTS; i++) {\n    if (i >= lighting.directionalLightCount) {\n      break;\n    }\n    DirectionalLight directionalLight = lighting.directionalLight[i];\n    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n  }\n  */\n  return lightColor;\n}\n\nvec3 lighting_getSpecularLightColor(vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\n  vec3 lightColor = vec3(0, 0, 0);\n  vec3 surfaceColor = vec3(0, 0, 0);\n\n  if (lighting.enabled == 0) {\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\n\n    switch (lighting.lightType) {\n      case 0:\n        PointLight pointLight = lighting_getPointLight(0);\n        vec3 light_position_worldspace = pointLight.position;\n        vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n        lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n        break;\n\n      case 1:\n        DirectionalLight directionalLight = lighting_getDirectionalLight(0);\n        lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n        break;\n    }\n  }\n  return lightColor;\n}\n"]))),yi={props:{},uniforms:{},name:"phong-lighting",dependencies:[Ii],vs:Di,fs:Bi,defines:{LIGHTING_FRAGMENT:1},uniformTypes:{ambient:"f32",diffuse:"f32",shininess:"f32",specularColor:"vec3<f32>"},defaultUniforms:{ambient:.35,diffuse:.6,shininess:32,specularColor:[.15,.15,.15]},getUniforms:e=>({...yi.defaultUniforms,...e})};var xi,Ui;function wi(e,t){return t||(t=e.slice(0)),e.raw=t,e}const Gi=o(xi||(xi=wi(["#version 300 es\n\nin vec3 positions;\nin vec3 normals;\nin vec2 texCoords;\n\nout vec3 vPosition;\nout vec3 vNormal;\nout vec2 vUV;\n\nuniform appUniforms {\n  mat4 modelMatrix;\n  mat4 mvpMatrix;\n  vec3 eyePosition;\n} app;\n\nvoid main(void) {\n  vPosition = (app.modelMatrix * vec4(positions, 1.0)).xyz;\n  vNormal = mat3(app.modelMatrix) * normals;\n  vUV = texCoords;\n  gl_Position = app.mvpMatrix * vec4(positions, 1.0);\n}\n"],["\\\n#version 300 es\n\nin vec3 positions;\nin vec3 normals;\nin vec2 texCoords;\n\nout vec3 vPosition;\nout vec3 vNormal;\nout vec2 vUV;\n\nuniform appUniforms {\n  mat4 modelMatrix;\n  mat4 mvpMatrix;\n  vec3 eyePosition;\n} app;\n\nvoid main(void) {\n  vPosition = (app.modelMatrix * vec4(positions, 1.0)).xyz;\n  vNormal = mat3(app.modelMatrix) * normals;\n  vUV = texCoords;\n  gl_Position = app.mvpMatrix * vec4(positions, 1.0);\n}\n"]))),Hi=o(Ui||(Ui=wi(["#version 300 es\nprecision highp float;\n\nin vec3 vPosition;\nin vec3 vNormal;\nin vec2 vUV;\n\nuniform sampler2D uTexture;\n\nuniform appUniforms {\n  mat4 modelMatrix;\n  mat4 mvpMatrix;\n  vec3 eyePosition;\n} uApp;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  vec3 surfaceColor = texture(uTexture, vec2(vUV.x, 1.0 - vUV.y)).rgb;\n  surfaceColor = lighting_getLightColor(surfaceColor, uApp.eyePosition, vPosition, normalize(vNormal));\n\n  fragColor = vec4(surfaceColor, 1.0);\n}\n"],["\\\n#version 300 es\nprecision highp float;\n\nin vec3 vPosition;\nin vec3 vNormal;\nin vec2 vUV;\n\nuniform sampler2D uTexture;\n\nuniform appUniforms {\n  mat4 modelMatrix;\n  mat4 mvpMatrix;\n  vec3 eyePosition;\n} uApp;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  vec3 surfaceColor = texture(uTexture, vec2(vUV.x, 1.0 - vUV.y)).rgb;\n  surfaceColor = lighting_getLightColor(surfaceColor, uApp.eyePosition, vPosition, normalize(vNormal));\n\n  fragColor = vec4(surfaceColor, 1.0);\n}\n"]))),Vi={name:"app",uniformTypes:{modelMatrix:"mat4x4<f32>",mvpMatrix:"mat4x4<f32>",eyePosition:"vec3<f32>"}},Xi=[0,0,5];class ki extends p{constructor(e){let{device:t}=e;super(),this.shaderInputs=new Ue({app:Vi,lighting:Ii,phongMaterial:yi}),this.modelMatrix=new lt.k,this.viewMatrix=(new lt.k).lookAt({eye:Xi}),this.mvpMatrix=new lt.k,this.shaderInputs.setProps({lighting:{lights:[{type:"ambient",color:[255,255,255]},{type:"point",color:[255,255,255],position:[1,2,1]}]},phongMaterial:{specularColor:[255,255,255]}});const n=new Ge(t,{data:(0,we.yt)("vis-logo.png")});this.model=new Ve(t,{vs:Gi,fs:Hi,shaderInputs:this.shaderInputs,geometry:new ze,bindings:{uTexture:n},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal"}})}onFinalize(){this.model.destroy()}onRender(e){let{device:t,aspect:n,tick:i}=e;this.modelMatrix.identity().rotateX(.01*i).rotateY(.013*i),this.mvpMatrix.perspective({fovy:Math.PI/3,aspect:n}).multiplyRight(this.viewMatrix).multiplyRight(this.modelMatrix),this.shaderInputs.setProps({app:{mvpMatrix:this.mvpMatrix,modelMatrix:this.modelMatrix}});const r=t.beginRenderPass({clearColor:[0,0,0,1],clearDepth:!0});this.model.draw(r),r.end()}}ki.info="\n<p>\nDrawing a phong-shaded cube\n</p>\n";const Wi="#version 300 es\n\nin vec2 position;\n\nvoid main() {\n  gl_Position = vec4(position, 0.0, 1.0);\n  OFFSET_POSITION(gl_Position);\n}\n",Ki="#version 300 es\n\nuniform appUniforms {  \n  vec3 color;\n} app;\n\nout vec4 fragColor;\n\nvoid main() {\n  fragColor = vec4(app.color, 1.0);\n}\n",zi={name:"offsetLeft",inject:{"vs:OFFSET_POSITION":"position.x -= 0.5;"}},Yi={name:"offsetRight",inject:{"vs:OFFSET_POSITION":"position.x += 0.5;"}};class ji extends p{constructor(e){let{device:t}=e;super(),this.uniformStore=new f({app:{uniformTypes:{color:"vec3<f32>"}}});const n=Se.getDefaultShaderAssembler();n.addShaderHook("vs:OFFSET_POSITION(inout vec4 position)"),this.positionBuffer=t.createBuffer(new Float32Array([-.3,-.5,.3,-.5,0,.5])),this.uniformBuffer1=this.uniformStore.createUniformBuffer(t,"app",{app:{color:[1,0,0]}});const i=this.uniformStore.getUniformBufferData("app");this.uniformBuffer1.write(i),this.uniformBuffer2=this.uniformStore.createUniformBuffer(t,"app",{app:{color:[0,0,1]}}),this.model1=new Ve(t,{vs:Wi,fs:Ki,shaderAssembler:n,modules:[zi],bufferLayout:[{name:"position",format:"float32x2"}],attributes:{position:this.positionBuffer},vertexCount:3,bindings:{app:this.uniformBuffer1}}),this.model2=new Ve(t,{vs:Wi,fs:Ki,shaderAssembler:n,modules:[Yi],bufferLayout:[{name:"position",format:"float32x2"}],vertexCount:3,attributes:{position:this.positionBuffer},bindings:{app:this.uniformBuffer2}})}onFinalize(){this.model1.destroy(),this.model2.destroy(),this.positionBuffer.destroy(),this.uniformStore.destroy(),this.uniformBuffer1.destroy(),this.uniformBuffer2.destroy()}onRender(e){let{device:t}=e;const n=t.beginRenderPass({clearColor:[0,0,0,1]});this.model1.draw(n),this.model2.draw(n),n.end()}}ji.info="\nModifying shader behavior with shader hooks\n";const Qi={name:"color",fs:"\nvec3 color_hsv2rgb(vec3 hsv) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(hsv.xxx + K.xyz) * 6.0 - K.www);\n  vec3 rgb = hsv.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), hsv.y);\n  return rgb;\n}\n  ",uniformTypes:{hsv:"vec3<f32>"}};class Zi extends p{constructor(e){let{device:t}=e;super(),this.shaderInputs1=new Ue({color:Qi}),this.shaderInputs2=new Ue({color:Qi}),this.positionBuffer=t.createBuffer(new Float32Array([-.3,-.5,.3,-.5,0,.5])),this.shaderInputs1.setProps({color:{hsv:[.7,1,1]}}),this.shaderInputs2.setProps({color:{hsv:[1,1,1]}}),this.model1=new Ve(t,{vs:"#version 300 es\nin vec2 position;\nvoid main() {\n  gl_Position = vec4(position - vec2(0.5, 0.0), 0.0, 1.0);\n}\n",fs:"#version 300 es\nprecision highp float;\n\nuniform colorUniforms {\n  vec3 hsv;\n} color;\n\nout vec4 fragColor;\n\nvoid main() {\n  fragColor = vec4(color_hsv2rgb(color.hsv), 1.0);\n}\n",shaderInputs:this.shaderInputs1,bufferLayout:[{name:"position",format:"float32x2"}],attributes:{position:this.positionBuffer},vertexCount:3}),this.model2=new Ve(t,{vs:"#version 300 es\nin vec2 position;\nvoid main() {\n  gl_Position = vec4(position + vec2(0.5, 0.0), 0.0, 1.0);\n}\n",fs:"#version 300 es\n\nprecision highp float;\n\nuniform colorUniforms {\n  vec3 hsv;\n} color;\n\nout vec4 fragColor;\n\nvoid main() {\n  fragColor = vec4(color_hsv2rgb(color.hsv) - 0.3, 1.0);\n}\n",shaderInputs:this.shaderInputs2,bufferLayout:[{name:"position",format:"float32x2"}],attributes:{position:this.positionBuffer},vertexCount:3})}onFinalize(){this.model1.destroy(),this.model2.destroy(),this.positionBuffer.destroy()}onRender(e){let{device:t}=e;const n=t.beginRenderPass({clearColor:[0,0,0,1]});this.model1.draw(n),this.model2.draw(n),n.end()}}var qi,Ji;function $i(e,t){return t||(t=e.slice(0)),e.raw=t,e}Zi.info="\nRe-using shader code with shader modules\n";const er=o(qi||(qi=$i(["#version 300 es\nconst vec2 pos[3] = vec2[3](vec2(0.0f, 0.5f), vec2(-0.5f, -0.5f), vec2(0.5f, -0.5f));\nvoid main() {\n  gl_Position = vec4(pos[gl_VertexID], 0.0, 1.0);\n}\n"],["\\\n#version 300 es\nconst vec2 pos[3] = vec2[3](vec2(0.0f, 0.5f), vec2(-0.5f, -0.5f), vec2(0.5f, -0.5f));\nvoid main() {\n  gl_Position = vec4(pos[gl_VertexID], 0.0, 1.0);\n}\n"]))),tr=o(Ji||(Ji=$i(["#version 300 es\nprecision highp float;\nlayout(location = 0) out vec4 outColor;\nvoid main() {\n    outColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n"],["\\\n#version 300 es\nprecision highp float;\nlayout(location = 0) out vec4 outColor;\nvoid main() {\n    outColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n"])));class nr extends p{constructor(e){let{device:t}=e;super(),this.model=new Ve(t,{source:"@vertex\nfn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> @builtin(position) vec4<f32> {\n  var positions = array<vec2<f32>, 3>(vec2(0.0, 0.5), vec2(-0.5, -0.5), vec2(0.5, -0.5));\n  return vec4<f32>(positions[vertexIndex], 0.0, 1.0);\n}\n\n@fragment\nfn fragmentMain() -> @location(0) vec4<f32> {\n  return vec4<f32>(1.0, 0.0, 0.0, 1.0);\n}\n",vs:er,fs:tr,topology:"triangle-list",vertexCount:3,shaderLayout:{attributes:[],bindings:[]},parameters:{depthFormat:"depth24plus"}})}onFinalize(){this.model.destroy()}onRender(e){let{device:t}=e;const n=t.beginRenderPass({clearColor:[1,1,1,1]});this.model.draw(n),n.end()}}var ir,rr;function or(e,t){return t||(t=e.slice(0)),e.raw=t,e}const sr=o(ir||(ir=or(["#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix[16];\n} app;\n\n// CUBE GEOMETRY\nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix[gl_InstanceID] * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = vec4(positions, 1.);\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix[16];\n} app;\n\n// CUBE GEOMETRY\nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix[gl_InstanceID] * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = vec4(positions, 1.);\n}\n"]))),ar=o(rr||(rr=or(["#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = fragPosition;\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = fragPosition;\n}\n"])));class lr extends p{constructor(e){let{device:t}=e;super(),this.uniformBuffer=t.createBuffer({id:"uniforms",usage:s.h.UNIFORM|s.h.COPY_DST,byteLength:1024}),this.cubeModel=new Ve(t,{id:"cube",source:"struct Uniforms {\n  modelViewProjectionMatrix : array<mat4x4<f32>, 16>,\n};\n\n@binding(0) @group(0) var<uniform> app : Uniforms;\n\nstruct VertexInputs {\n  @builtin(instance_index) instanceIdx : u32,\n  // CUBE GEOMETRY\n  @location(0) positions : vec4<f32>,\n  @location(1) texCoords : vec2<f32>\n}\n\nstruct FragmentInputs {\n  @builtin(position) Position : vec4<f32>,\n  @location(0) fragUV : vec2<f32>,\n  @location(1) fragPosition: vec4<f32>,\n}\n\n@vertex\nfn vertexMain(inputs: VertexInputs) -> FragmentInputs {\n  var outputs : FragmentInputs;\n  outputs.Position = app.modelViewProjectionMatrix[inputs.instanceIdx] * inputs.positions;\n  outputs.fragUV = inputs.texCoords;\n  outputs.fragPosition = 0.5 * (inputs.positions + vec4<f32>(1.0, 1.0, 1.0, 1.0));\n  return outputs;\n}\n\n@fragment\nfn fragmentMain(inputs: FragmentInputs) -> @location(0) vec4<f32> {\n  return inputs.fragPosition;\n}\n",vs:sr,fs:ar,geometry:new ze({indices:!1}),instanceCount:16,parameters:{depthWriteEnabled:!0,depthCompare:"less",depthFormat:"depth24plus",cullMode:"back"},bindings:{app:this.uniformBuffer}})}onFinalize(e){this.uniformBuffer.destroy(),this.cubeModel.destroy()}onRender(e){var t;let{device:n}=e;const i=new lt.k,r=null==(t=n.canvasContext)?void 0:t.getAspect(),o=Date.now()/1e3;i.perspective({fovy:2*Math.PI/5,aspect:r,near:1,far:100});const s=function(e,t){const n=(new lt.k).translate([0,0,-12]),i=new lt.k;let r=0,o=0;for(let s=0;s<4;s++)for(let a=0;a<4;a++)i.copy(cr[r]).rotateAxis(1,[Math.sin((s+.5)*t),Math.cos((a+.5)*t),0]).multiplyLeft(n).multiplyLeft(e),ur.set(i,o),r++,o+=16;return ur}(i,o);this.uniformBuffer.write(s);const a=n.beginRenderPass();this.cubeModel.draw(a),a.end()}}const cr=[];for(let kr=0;kr<4;kr++)for(let e=0;e<4;e++)cr.push((new lt.k).translate([4*(kr-2+.5),4*(e-2+.5),0]));const ur=new Float32Array(256);var dr,hr;function _r(e,t){return t||(t=e.slice(0)),e.raw=t,e}const fr=o(dr||(dr=_r(["#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\n// CUBE GEOMETRY \nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = vec4(positions, 1.);\n  // fragPosition = 0.5 * (vec4(position, 1.) + vec4(1., 1., 1., 1.));\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\n// CUBE GEOMETRY \nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = vec4(positions, 1.);\n  // fragPosition = 0.5 * (vec4(position, 1.) + vec4(1., 1., 1., 1.));\n}\n"]))),pr=o(hr||(hr=_r(["#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\n\nuniform sampler2D uTexture;\n\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = texture(uTexture, vec2(fragUV.x, 1.0 - fragUV.y));;\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\n\nuniform sampler2D uTexture;\n\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = texture(uTexture, vec2(fragUV.x, 1.0 - fragUV.y));;\n}\n"])));class Er extends p{constructor(e){let{device:t}=e;super();const n=new Ge(t,{data:(0,we.Dt)("https://raw.githubusercontent.com/uber/luma.gl/8.5-release/examples/getting-started/hello-cube/vis-logo.png"),mipmaps:!0,sampler:{magFilter:"linear",minFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}});this.uniformBuffer=t.createBuffer({id:"uniforms",byteLength:64,usage:s.h.UNIFORM|s.h.COPY_DST}),this.model=new Ve(t,{id:"cube",source:"\nstruct Uniforms {\n  modelViewProjectionMatrix : mat4x4<f32>,\n};\n@binding(0) @ group(0) var<uniform> app : Uniforms;\n\nstruct VertexOutput {\n  @builtin(position) Position : vec4<f32>,\n  @location(0) fragUV : vec2<f32>,\n  @location(1) fragPosition: vec4<f32>,\n};\n\n@vertex\nfn vertedMain(\n  @location(0) positions : vec4<f32>,\n  @location(1) texCoords : vec2<f32>) -> VertexOutput \n{\n  var output : VertexOutput;\n  output.Position = app.modelViewProjectionMatrix * positions;\n  output.fragUV = texCoords;\n  output.fragPosition = 0.5 * (positions + vec4<f32>(1.0, 1.0, 1.0, 1.0));\n  return output;\n}\n\n@group(0) @binding(1) var uSampler: sampler;\n@group(0) @binding(2) var uTexture: texture_2d<f32>;\n\n@fragment\nfn fragmentMain(@location(0) fragUV: vec2<f32>,\n        @location(1) fragPosition: vec4<f32>) -> @location(0) vec4<f32> {\n  let flippedUV = vec2<f32>(1.0 - fragUV.x, fragUV.y);\n  return textureSample(uTexture, uSampler, flippedUV) * fragPosition;\n}\n",vs:fr,fs:pr,geometry:new ze({indices:!1}),bindings:{app:this.uniformBuffer,uSampler:n.sampler,uTexture:n},parameters:{depthWriteEnabled:!0,depthCompare:"less"}})}onFinalize(){this.model.destroy(),this.uniformBuffer.destroy()}onRender(e){var t;let{device:n}=e;const i=new lt.k,r=new lt.k,o=new lt.k,s=null==(t=n.canvasContext)?void 0:t.getAspect(),a=Date.now()/1e3;r.identity().translate([0,0,-4]).rotateAxis(1,[Math.sin(a),Math.cos(a),0]),i.perspective({fovy:2*Math.PI/5,aspect:s,near:1,far:100}),o.copy(r).multiplyLeft(i),this.uniformBuffer.write(new Float32Array(o));const l=n.beginRenderPass({clearColor:[0,0,0,1]});this.model.draw(l),l.end()}}var gr,mr;function Rr(e,t){return t||(t=e.slice(0)),e.raw=t,e}const Ar=o(gr||(gr=Rr(["#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = vec4(positions, 1.);\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = vec4(positions, 1.);\n}\n"]))),Tr=o(mr||(mr=Rr(["#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = fragPosition;\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = fragPosition;\n}\n"])));class vr extends p{constructor(e){let{device:t}=e;super(),this.uniformBuffer1=t.createBuffer({id:"uniforms-1",usage:s.h.UNIFORM|s.h.COPY_DST,byteLength:64}),this.uniformBuffer2=t.createBuffer({id:"uniforms-2",usage:s.h.UNIFORM|s.h.COPY_DST,byteLength:64}),this.cubeModel=new Ve(t,{id:"cube",source:"struct Uniforms {\n  modelViewProjectionMatrix : mat4x4<f32>,\n};\n@binding(0) @group(0) var<uniform> app : Uniforms;\n\nstruct VertexInputs {\n  @location(0) positions : vec4<f32>,\n  @location(1) texCoords : vec2<f32>\n};\n\nstruct FragmentInputs {\n  @builtin(position) Position : vec4<f32>,\n  @location(0) fragUV : vec2<f32>,\n  @location(1) fragPosition: vec4<f32>,\n}\n\n@vertex\nfn vertexMain(inputs: VertexInputs) -> FragmentInputs {\n  var outputs : FragmentInputs;\n  outputs.Position = app.modelViewProjectionMatrix * inputs.positions;\n  outputs.fragUV = inputs.texCoords;\n  outputs.fragPosition = 0.5 * (inputs.positions + vec4(1.0, 1.0, 1.0, 1.0));\n  return outputs;\n}\n\n@fragment\nfn fragmentMain(inputs: FragmentInputs) -> @location(0) vec4<f32> {\n  return inputs.fragPosition;\n}\n",vs:Ar,fs:Tr,geometry:new ze({indices:!1}),parameters:{depthWriteEnabled:!0,depthCompare:"less",depthFormat:"depth24plus",cullMode:"back"},bindings:{app:this.uniformBuffer1}})}onFinalize(){this.cubeModel.destroy(),this.uniformBuffer1.destroy(),this.uniformBuffer2.destroy()}onRender(e){var t;let{device:n}=e;const i=new lt.k,r=new lt.k,o=new lt.k,s=null==(t=n.canvasContext)?void 0:t.getAspect(),a=Date.now()/1e3;i.perspective({fovy:2*Math.PI/5,aspect:s,near:1,far:100}),r.identity().translate([-2,0,-7]).rotateAxis(1,[Math.sin(a),Math.cos(a),0]),o.copy(r).multiplyLeft(i),this.uniformBuffer1.write(new Float32Array(o)),r.identity().translate([2,0,-7]).rotateAxis(1,[Math.cos(a),Math.sin(a),0]),o.copy(r).multiplyLeft(i),this.uniformBuffer2.write(new Float32Array(o));const l=n.beginRenderPass({clearColor:[0,0,0,1]});this.cubeModel.setBindings({app:this.uniformBuffer1}),this.cubeModel.draw(l),this.cubeModel.setBindings({app:this.uniformBuffer2}),this.cubeModel.draw(l),l.end()}}const Sr={},Cr=()=>i.createElement(r.fo,{id:"animation",directory:"api",template:Et,config:Sr}),br=()=>i.createElement(r.fo,{id:"cubemap",directory:"api",template:Ct,config:Sr}),Ir=()=>i.createElement(r.fo,{id:"texture-3d",directory:"api-3d",template:xt,config:Sr}),Nr=()=>i.createElement(r.fo,{id:"instancing",directory:"showcase",template:$t,config:Sr}),Lr=()=>i.createElement(r.fo,{id:"persistence",directory:"showcase/persistence",template:bn,config:Sr}),Pr=()=>i.createElement(r.fo,{id:"hello-cube",directory:"tutorials",template:Dn,config:Sr}),Mr=()=>i.createElement(r.fo,{id:"hello-instancing",directory:"tutorials",template:Hn,config:Sr}),Or=()=>i.createElement(r.fo,{id:"hello-triangle",directory:"tutorials",template:kn,config:Sr}),Fr=()=>i.createElement("h2",null,i.createElement("i",null,"Note: Transform examples temporarily disabled")),Dr=()=>i.createElement(r.fo,{id:"lighting",directory:"tutorials",template:ki,config:Sr}),Br=()=>i.createElement(r.fo,{id:"hello-gltf",directory:"tutorials",template:Ai,config:Sr}),yr=()=>i.createElement(r.fo,{id:"shader-hooks",directory:"tutorials",template:ji,config:Sr}),xr=()=>i.createElement(r.fo,{id:"shader-modules",directory:"tutorials",template:Zi,config:Sr}),Ur=()=>i.createElement("h2",null,i.createElement("i",null,"Note: Transform examples temporarily disabled")),wr=()=>i.createElement("h2",null,i.createElement("i",null,"Note: Transform examples temporarily disabled")),Gr=()=>i.createElement(r.fo,{id:"hello-triangle-webgpu",directory:"webgpu",template:nr,config:Sr}),Hr=()=>i.createElement(r.fo,{id:"instanced-cubes-webgpu",directory:"webgpu",template:lr,config:Sr}),Vr=()=>i.createElement(r.fo,{id:"textured-cube-webgpu",directory:"webgpu",template:Er,config:Sr}),Xr=()=>i.createElement(r.fo,{id:"two-cubes-webgpu",directory:"webgpu",template:vr,config:Sr})},6254:(e,t,n)=>{n.d(t,{xN:()=>Ai,Xj:()=>Si,dJ:()=>bi,yL:()=>Ci,R2:()=>Ti,I$:()=>vi,fo:()=>Oi,dw:()=>Ii});var i=n(6540),r=n(5556),o=n.n(r);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},s.apply(this,arguments)}class a extends i.Component{render(){const{height:e,width:t,viewBox:n,style:r={},children:o,predefinedClassName:a,className:l,colors:c,totalColor:u,...d}=this.props,h=e,_=t||h;r.fill="currentColor";const f=Array.isArray(c)&&u&&((e,t)=>new Array(e).fill(1).reduce(((e,n,i)=>e+".cr"+(i+1)+" {fill:"+t[i%t.length]+";}"),""))(u,c);return i.createElement("svg",s({viewBox:n,width:_,height:h,style:r,className:a+" "+l},d),f?i.createElement("style",{type:"text/css"},f):null,o)}}a.displayName="Base Icon",a.propTypes={height:o().string,width:o().string,viewBox:o().string,children:o().node,predefinedClassName:o().string,className:o().string},a.defaultProps={height:null,width:null,viewBox:"0 0 64 64",predefinedClassName:"",className:""};const l=e=>i.createElement(a,e,i.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M5.02167 13.7625C4.69623 13.4459 4.69623 12.9325 5.02167 12.6159L9.76574 8.00002L5.02167 3.38416C4.69623 3.06752 4.69623 2.55415 5.02167 2.2375C5.3471 1.92086 5.87474 1.92086 6.20018 2.2375L11.5335 7.42669C11.6898 7.57875 11.7776 7.78498 11.7776 8.00002C11.7776 8.21506 11.6898 8.4213 11.5335 8.57335L6.20018 13.7625C5.87474 14.0792 5.3471 14.0792 5.02167 13.7625Z"}));l.propTypes={height:o().string},l.defaultProps={height:"16px",viewBox:"0 0 17 16",predefinedClassName:"unfolded-icons-arrowbigright"};var c=n(4745),u=n(6769),d=n(3522),h=n(6237);const _=new class{constructor(){this.stats=new Map}getStats(e){return this.get(e)}get(e){return this.stats.has(e)||this.stats.set(e,new h.A({id:e})),this.stats.get(e)}};const f=function(){const e="undefined"!=typeof __VERSION__?__VERSION__:"running from source";if(globalThis.luma&&globalThis.luma.VERSION!==e)throw new Error("luma.gl - multiple VERSIONs detected: "+globalThis.luma.VERSION+" vs "+e);return globalThis.luma||((0,u.B)()&&d.R.log(1,e+" - set luma.log.level=1 (or higher) to trace rendering")(),globalThis.luma=globalThis.luma||{VERSION:e,version:e,log:d.R,stats:_}),e}();var p=n(1166),E=n(5056),g=n(2112);const m=["bc1","bc2","bc3","bc4","bc5","bc6","bc7","etc1","etc2","eac","atc","astc","pvrtc"],R=/^(rg?b?a?)([0-9]*)([a-z]*)(-srgb)?(-webgl|-unsized)?$/;function A(e){const t=R.exec(e);if(t){const[,e,n,i,r,o]=t;if(e){const t=""+i+n,s=(0,g.l)(t);return{format:e,components:e.length,srgb:"-srgb"===r,unsized:"-unsized"===o,webgl:"-webgl"===o,...s}}}return function(e){var t;const n=T[e];if(!n)throw new Error("Unknown format "+e);return{format:n.format||"",components:n.components||(null==(t=n.format)?void 0:t.length)||1,byteLength:n.bpp||1,srgb:!1,unsized:!1}}(e)}const T={"rgba4unorm-webgl":{format:"rgba",bpp:2},"rgb565unorm-webgl":{format:"rgb",bpp:2},"rgb5a1unorm-webgl":{format:"rgba",bbp:2},rgb9e5ufloat:{format:"rgb",bbp:4},rg11b10ufloat:{format:"rgb",bbp:4},rgb10a2unorm:{format:"rgba",bbp:4},"rgb10a2uint-webgl":{format:"rgba",bbp:4},stencil8:{components:1,bpp:1,a:"stencil"},depth16unorm:{components:1,bpp:2,a:"depth"},depth24plus:{components:1,bpp:3,a:"depth"},depth32float:{components:1,bpp:4,a:"depth"},"depth24plus-stencil8":{components:2,bpp:4,a:"depth-stencil"},"depth24unorm-stencil8":{components:2,bpp:4,a:"depth-stencil"},"depth32float-stencil8":{components:2,bpp:4,a:"depth-stencil"}};let v;class S{}class C{constructor(e,t){void 0===e&&(e=[]),this.features=new Set(e),this.disabledFeatures=t||{}}*[Symbol.iterator](){yield*this.features}has(e){var t;return!(null!=(t=this.disabledFeatures)&&t[e])&&this.features.has(e)}}v=Symbol.toStringTag;class b{get[v](){return"Device"}constructor(e){this.userData={},this.statsManager=_,this._lumaData={},this.timestamp=0,this.props={...b.defaultProps,...e},this.id=this.props.id||(0,p.L)(this[Symbol.toStringTag].toLowerCase())}isTextureFormatCompressed(e){return t=e,m.some((e=>t.startsWith(e)));var t}loseDevice(){return!1}error(e){this.props.onError(e)}getCanvasContext(){if(!this.canvasContext)throw new Error("Device has no CanvasContext");return this.canvasContext}createTexture(e){return this._createTexture(e)}createCommandEncoder(e){throw void 0===e&&(e={}),new Error("not implemented")}readPixelsToArrayWebGL(e,t){throw new Error("not implemented")}readPixelsToBufferWebGL(e,t){throw new Error("not implemented")}setParametersWebGL(e){throw new Error("not implemented")}getParametersWebGL(e){throw new Error("not implemented")}withParametersWebGL(e,t){throw new Error("not implemented")}clearWebGL(e){throw new Error("not implemented")}resetWebGL(){throw new Error("not implemented")}incrementTimestamp(){return this.timestamp++}onError(e){this.props.onError(e)}_getBufferProps(e){(e instanceof ArrayBuffer||ArrayBuffer.isView(e))&&(e={data:e});const t={...e};return(e.usage||0)&E.h.INDEX&&!e.indexType&&(e.data instanceof Uint32Array?t.indexType="uint32":e.data instanceof Uint16Array?t.indexType="uint16":d.R.warn("indices buffer content must be of integer type")()),t}}b.defaultProps={id:null,canvas:null,container:null,manageState:!0,width:800,height:600,requestMaxLimits:!0,onError:e=>d.R.error(e.message),gl:null,debug:Boolean(d.R.get("debug")),spector:Boolean(d.R.get("spector")),break:d.R.get("break")||[],initalizeFeatures:!0,disabledFeatures:{"compilation-status-async-webgl":!0},_factoryDestroyPolicy:"unused"},b.VERSION=f;const I=new Map;class N{static registerDevices(e){for(const t of e)I.set(t.type,t)}static getAvailableDevices(){return Array.from(I).map((e=>e.type))}static getSupportedDevices(){return Array.from(I).filter((e=>e.isSupported())).map((e=>e.type))}static setDefaultDeviceProps(e){Object.assign(N.defaultProps,e)}static async attachDevice(e){const t=L(e.devices)||I;if(e.handle instanceof WebGL2RenderingContext){const n=t.get("webgl");if(n)return await n.attach(e.handle)}if(null===e.handle){const e=t.get("unknown");if(e)return await e.attach(null)}throw new Error("Failed to attach device. Ensure `@luma.gl/webgl` and/or `@luma.gl/webgpu` modules are imported.")}static async createDevice(e){var t,n;void 0===e&&(e={}),(e={...N.defaultProps,...e}).gl&&(e.type="webgl");const i=L(e.devices)||I;let r,o;switch(e.type){case"webgpu":if(r=i.get("webgpu"),r)return await r.create(e);break;case"webgl":if(o=i.get("webgl"),o)return await o.create(e);break;case"unknown":const s=i.get("unknown");if(s)return await s.create(e);break;case"best-available":if(r=i.get("webgpu"),null!=(t=r)&&null!=t.isSupported&&t.isSupported())return await r.create(e);if(o=i.get("webgl"),null!=(n=o)&&null!=n.isSupported&&n.isSupported())return await o.create(e)}throw new Error("No matching device found. Ensure `@luma.gl/webgl` and/or `@luma.gl/webgpu` modules are imported.")}static enforceWebGL2(e){void 0===e&&(e=!0);const t=HTMLCanvasElement.prototype;if(!e&&t.originalGetContext)return t.getContext=t.originalGetContext,void(t.originalGetContext=void 0);t.originalGetContext=t.getContext,t.getContext=function(e,t){return"webgl"===e||"experimental-webgl"===e?this.originalGetContext("webgl2",t):this.originalGetContext(e,t)}}}function L(e){if(!e||0===(null==e?void 0:e.length))return null;const t=new Map;for(const n of e)t.set(n.type,n);return t}N.defaultProps={...b.defaultProps,type:"best-available",devices:void 0},N.stats=_,N.log=d.R;const P=(0,u.B)()&&"undefined"!=typeof document,M=()=>P&&"complete"===document.readyState,O={canvas:null,width:800,height:600,useDevicePixels:!0,autoResize:!0,container:null,visible:!0,colorSpace:"srgb",alphaMode:"opaque"};class F{static get isPageLoaded(){return M()}constructor(e){if(this.width=1,this.height=1,this._canvasSizeInfo={clientWidth:0,clientHeight:0,devicePixelRatio:1},this.props={...O,...e},e=this.props,!(0,u.B)())return this.id="node-canvas-context",this.type="node",this.width=this.props.width,this.height=this.props.height,void(this.canvas=null);if(e.canvas)"string"==typeof e.canvas?this.canvas=function(e){const t=document.getElementById(e);if(!t&&!M())throw new Error("Accessing '"+e+"' before page was loaded");if(!(t instanceof HTMLCanvasElement))throw new Error("Object is not a canvas element");return t}(e.canvas):this.canvas=e.canvas;else{var t,n;const i=function(e){const{width:t,height:n}=e,i=document.createElement("canvas");return i.id="lumagl-auto-created-canvas",i.width=t||1,i.height=n||1,i.style.width=Number.isFinite(t)?t+"px":"100%",i.style.height=Number.isFinite(n)?n+"px":"100%",i}(e),r=function(e){if("string"==typeof e){const t=document.getElementById(e);if(!t&&!M())throw new Error("Accessing '"+e+"' before page was loaded");if(!t)throw new Error(e+" is not an HTML element");return t}if(e)return e;return document.body}((null==(t=e)?void 0:t.container)||null);r.insertBefore(i,r.firstChild),this.canvas=i,null!=(n=e)&&n.visible||(this.canvas.style.visibility="hidden")}this.canvas instanceof HTMLCanvasElement?(this.id=this.canvas.id,this.type="html-canvas",this.htmlCanvas=this.canvas):(this.id="offscreen-canvas",this.type="offscreen-canvas",this.offscreenCanvas=this.canvas),this.canvas instanceof HTMLCanvasElement&&e.autoResize&&(this.resizeObserver=new ResizeObserver((e=>{for(const t of e)t.target===this.canvas&&this.update()})),this.resizeObserver.observe(this.canvas))}getDevicePixelRatio(e){if("undefined"!=typeof OffscreenCanvas&&this.canvas instanceof OffscreenCanvas)return 1;if(!(e=void 0===e?this.props.useDevicePixels:e)||e<=0)return 1;if(!0===e){return"undefined"!=typeof window&&window.devicePixelRatio||1}return e}getPixelSize(){switch(this.type){case"node":return[this.width,this.height];case"offscreen-canvas":return[this.canvas.width,this.canvas.height];case"html-canvas":const e=this.getDevicePixelRatio(),t=this.canvas;return t.parentElement?[t.clientWidth*e,t.clientHeight*e]:[this.canvas.width,this.canvas.height];default:throw new Error(this.type)}}getAspect(){const[e,t]=this.getPixelSize();return e/t}cssToDeviceRatio(){try{const[e]=this.getDrawingBufferSize(),{clientWidth:t}=this._canvasSizeInfo;return t?e/t:1}catch{return 1}}cssToDevicePixels(e,t){void 0===t&&(t=!0);const n=this.cssToDeviceRatio(),[i,r]=this.getDrawingBufferSize();return function(e,t,n,i,r){const o=e,s=D(o[0],t,n);let a=B(o[1],t,i,r),l=D(o[0]+1,t,n);const c=l===n-1?l:l-1;let u;l=B(o[1]+1,t,i,r),r?(l=0===l?l:l+1,u=a,a=l):u=l===i-1?l:l-1;return{x:s,y:a,width:Math.max(c-s+1,1),height:Math.max(u-a+1,1)}}(e,n,i,r,t)}setDevicePixelRatio(e,t){if(void 0===t&&(t={}),!this.htmlCanvas)return;let n="width"in t?t.width:this.htmlCanvas.clientWidth,i="height"in t?t.height:this.htmlCanvas.clientHeight;n&&i||(d.R.log(1,"Canvas clientWidth/clientHeight is 0")(),e=1,n=this.htmlCanvas.width||1,i=this.htmlCanvas.height||1);const r=this._canvasSizeInfo;if(r.clientWidth!==n||r.clientHeight!==i||r.devicePixelRatio!==e){let t=e;const r=Math.floor(n*t),o=Math.floor(i*t);this.htmlCanvas.width=r,this.htmlCanvas.height=o;const[s,a]=this.getDrawingBufferSize();s===r&&a===o||(t=Math.min(s/n,a/i),this.htmlCanvas.width=Math.floor(n*t),this.htmlCanvas.height=Math.floor(i*t),d.R.warn("Device pixel ratio clamped")()),this._canvasSizeInfo.clientWidth=n,this._canvasSizeInfo.clientHeight=i,this._canvasSizeInfo.devicePixelRatio=e}}getDrawingBufferSize(){const e=this.device.gl;if(!e)throw new Error("canvas size");return[e.drawingBufferWidth,e.drawingBufferHeight]}_setAutoCreatedCanvasId(e){var t;"lumagl-auto-created-canvas"===(null==(t=this.htmlCanvas)?void 0:t.id)&&(this.htmlCanvas.id=e)}}function D(e,t,n){return Math.min(Math.round(e*t),n-1)}function B(e,t,n,i){return i?Math.max(0,n-1-Math.round(e*t)):Math.min(Math.round(e*t),n-1)}F.pageLoaded=function(){if(M()||"undefined"==typeof window)return Promise.resolve();return new Promise((e=>{window.addEventListener("load",(()=>e()))}))}();var y=function(e){return e[e.DEPTH_BUFFER_BIT=256]="DEPTH_BUFFER_BIT",e[e.STENCIL_BUFFER_BIT=1024]="STENCIL_BUFFER_BIT",e[e.COLOR_BUFFER_BIT=16384]="COLOR_BUFFER_BIT",e[e.POINTS=0]="POINTS",e[e.LINES=1]="LINES",e[e.LINE_LOOP=2]="LINE_LOOP",e[e.LINE_STRIP=3]="LINE_STRIP",e[e.TRIANGLES=4]="TRIANGLES",e[e.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=6]="TRIANGLE_FAN",e[e.ZERO=0]="ZERO",e[e.ONE=1]="ONE",e[e.SRC_COLOR=768]="SRC_COLOR",e[e.ONE_MINUS_SRC_COLOR=769]="ONE_MINUS_SRC_COLOR",e[e.SRC_ALPHA=770]="SRC_ALPHA",e[e.ONE_MINUS_SRC_ALPHA=771]="ONE_MINUS_SRC_ALPHA",e[e.DST_ALPHA=772]="DST_ALPHA",e[e.ONE_MINUS_DST_ALPHA=773]="ONE_MINUS_DST_ALPHA",e[e.DST_COLOR=774]="DST_COLOR",e[e.ONE_MINUS_DST_COLOR=775]="ONE_MINUS_DST_COLOR",e[e.SRC_ALPHA_SATURATE=776]="SRC_ALPHA_SATURATE",e[e.CONSTANT_COLOR=32769]="CONSTANT_COLOR",e[e.ONE_MINUS_CONSTANT_COLOR=32770]="ONE_MINUS_CONSTANT_COLOR",e[e.CONSTANT_ALPHA=32771]="CONSTANT_ALPHA",e[e.ONE_MINUS_CONSTANT_ALPHA=32772]="ONE_MINUS_CONSTANT_ALPHA",e[e.FUNC_ADD=32774]="FUNC_ADD",e[e.FUNC_SUBTRACT=32778]="FUNC_SUBTRACT",e[e.FUNC_REVERSE_SUBTRACT=32779]="FUNC_REVERSE_SUBTRACT",e[e.BLEND_EQUATION=32777]="BLEND_EQUATION",e[e.BLEND_EQUATION_RGB=32777]="BLEND_EQUATION_RGB",e[e.BLEND_EQUATION_ALPHA=34877]="BLEND_EQUATION_ALPHA",e[e.BLEND_DST_RGB=32968]="BLEND_DST_RGB",e[e.BLEND_SRC_RGB=32969]="BLEND_SRC_RGB",e[e.BLEND_DST_ALPHA=32970]="BLEND_DST_ALPHA",e[e.BLEND_SRC_ALPHA=32971]="BLEND_SRC_ALPHA",e[e.BLEND_COLOR=32773]="BLEND_COLOR",e[e.ARRAY_BUFFER_BINDING=34964]="ARRAY_BUFFER_BINDING",e[e.ELEMENT_ARRAY_BUFFER_BINDING=34965]="ELEMENT_ARRAY_BUFFER_BINDING",e[e.LINE_WIDTH=2849]="LINE_WIDTH",e[e.ALIASED_POINT_SIZE_RANGE=33901]="ALIASED_POINT_SIZE_RANGE",e[e.ALIASED_LINE_WIDTH_RANGE=33902]="ALIASED_LINE_WIDTH_RANGE",e[e.CULL_FACE_MODE=2885]="CULL_FACE_MODE",e[e.FRONT_FACE=2886]="FRONT_FACE",e[e.DEPTH_RANGE=2928]="DEPTH_RANGE",e[e.DEPTH_WRITEMASK=2930]="DEPTH_WRITEMASK",e[e.DEPTH_CLEAR_VALUE=2931]="DEPTH_CLEAR_VALUE",e[e.DEPTH_FUNC=2932]="DEPTH_FUNC",e[e.STENCIL_CLEAR_VALUE=2961]="STENCIL_CLEAR_VALUE",e[e.STENCIL_FUNC=2962]="STENCIL_FUNC",e[e.STENCIL_FAIL=2964]="STENCIL_FAIL",e[e.STENCIL_PASS_DEPTH_FAIL=2965]="STENCIL_PASS_DEPTH_FAIL",e[e.STENCIL_PASS_DEPTH_PASS=2966]="STENCIL_PASS_DEPTH_PASS",e[e.STENCIL_REF=2967]="STENCIL_REF",e[e.STENCIL_VALUE_MASK=2963]="STENCIL_VALUE_MASK",e[e.STENCIL_WRITEMASK=2968]="STENCIL_WRITEMASK",e[e.STENCIL_BACK_FUNC=34816]="STENCIL_BACK_FUNC",e[e.STENCIL_BACK_FAIL=34817]="STENCIL_BACK_FAIL",e[e.STENCIL_BACK_PASS_DEPTH_FAIL=34818]="STENCIL_BACK_PASS_DEPTH_FAIL",e[e.STENCIL_BACK_PASS_DEPTH_PASS=34819]="STENCIL_BACK_PASS_DEPTH_PASS",e[e.STENCIL_BACK_REF=36003]="STENCIL_BACK_REF",e[e.STENCIL_BACK_VALUE_MASK=36004]="STENCIL_BACK_VALUE_MASK",e[e.STENCIL_BACK_WRITEMASK=36005]="STENCIL_BACK_WRITEMASK",e[e.VIEWPORT=2978]="VIEWPORT",e[e.SCISSOR_BOX=3088]="SCISSOR_BOX",e[e.COLOR_CLEAR_VALUE=3106]="COLOR_CLEAR_VALUE",e[e.COLOR_WRITEMASK=3107]="COLOR_WRITEMASK",e[e.UNPACK_ALIGNMENT=3317]="UNPACK_ALIGNMENT",e[e.PACK_ALIGNMENT=3333]="PACK_ALIGNMENT",e[e.MAX_TEXTURE_SIZE=3379]="MAX_TEXTURE_SIZE",e[e.MAX_VIEWPORT_DIMS=3386]="MAX_VIEWPORT_DIMS",e[e.SUBPIXEL_BITS=3408]="SUBPIXEL_BITS",e[e.RED_BITS=3410]="RED_BITS",e[e.GREEN_BITS=3411]="GREEN_BITS",e[e.BLUE_BITS=3412]="BLUE_BITS",e[e.ALPHA_BITS=3413]="ALPHA_BITS",e[e.DEPTH_BITS=3414]="DEPTH_BITS",e[e.STENCIL_BITS=3415]="STENCIL_BITS",e[e.POLYGON_OFFSET_UNITS=10752]="POLYGON_OFFSET_UNITS",e[e.POLYGON_OFFSET_FACTOR=32824]="POLYGON_OFFSET_FACTOR",e[e.TEXTURE_BINDING_2D=32873]="TEXTURE_BINDING_2D",e[e.SAMPLE_BUFFERS=32936]="SAMPLE_BUFFERS",e[e.SAMPLES=32937]="SAMPLES",e[e.SAMPLE_COVERAGE_VALUE=32938]="SAMPLE_COVERAGE_VALUE",e[e.SAMPLE_COVERAGE_INVERT=32939]="SAMPLE_COVERAGE_INVERT",e[e.COMPRESSED_TEXTURE_FORMATS=34467]="COMPRESSED_TEXTURE_FORMATS",e[e.VENDOR=7936]="VENDOR",e[e.RENDERER=7937]="RENDERER",e[e.VERSION=7938]="VERSION",e[e.IMPLEMENTATION_COLOR_READ_TYPE=35738]="IMPLEMENTATION_COLOR_READ_TYPE",e[e.IMPLEMENTATION_COLOR_READ_FORMAT=35739]="IMPLEMENTATION_COLOR_READ_FORMAT",e[e.BROWSER_DEFAULT_WEBGL=37444]="BROWSER_DEFAULT_WEBGL",e[e.STATIC_DRAW=35044]="STATIC_DRAW",e[e.STREAM_DRAW=35040]="STREAM_DRAW",e[e.DYNAMIC_DRAW=35048]="DYNAMIC_DRAW",e[e.ARRAY_BUFFER=34962]="ARRAY_BUFFER",e[e.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER",e[e.BUFFER_SIZE=34660]="BUFFER_SIZE",e[e.BUFFER_USAGE=34661]="BUFFER_USAGE",e[e.CURRENT_VERTEX_ATTRIB=34342]="CURRENT_VERTEX_ATTRIB",e[e.VERTEX_ATTRIB_ARRAY_ENABLED=34338]="VERTEX_ATTRIB_ARRAY_ENABLED",e[e.VERTEX_ATTRIB_ARRAY_SIZE=34339]="VERTEX_ATTRIB_ARRAY_SIZE",e[e.VERTEX_ATTRIB_ARRAY_STRIDE=34340]="VERTEX_ATTRIB_ARRAY_STRIDE",e[e.VERTEX_ATTRIB_ARRAY_TYPE=34341]="VERTEX_ATTRIB_ARRAY_TYPE",e[e.VERTEX_ATTRIB_ARRAY_NORMALIZED=34922]="VERTEX_ATTRIB_ARRAY_NORMALIZED",e[e.VERTEX_ATTRIB_ARRAY_POINTER=34373]="VERTEX_ATTRIB_ARRAY_POINTER",e[e.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING=34975]="VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",e[e.CULL_FACE=2884]="CULL_FACE",e[e.FRONT=1028]="FRONT",e[e.BACK=1029]="BACK",e[e.FRONT_AND_BACK=1032]="FRONT_AND_BACK",e[e.BLEND=3042]="BLEND",e[e.DEPTH_TEST=2929]="DEPTH_TEST",e[e.DITHER=3024]="DITHER",e[e.POLYGON_OFFSET_FILL=32823]="POLYGON_OFFSET_FILL",e[e.SAMPLE_ALPHA_TO_COVERAGE=32926]="SAMPLE_ALPHA_TO_COVERAGE",e[e.SAMPLE_COVERAGE=32928]="SAMPLE_COVERAGE",e[e.SCISSOR_TEST=3089]="SCISSOR_TEST",e[e.STENCIL_TEST=2960]="STENCIL_TEST",e[e.NO_ERROR=0]="NO_ERROR",e[e.INVALID_ENUM=1280]="INVALID_ENUM",e[e.INVALID_VALUE=1281]="INVALID_VALUE",e[e.INVALID_OPERATION=1282]="INVALID_OPERATION",e[e.OUT_OF_MEMORY=1285]="OUT_OF_MEMORY",e[e.CONTEXT_LOST_WEBGL=37442]="CONTEXT_LOST_WEBGL",e[e.CW=2304]="CW",e[e.CCW=2305]="CCW",e[e.DONT_CARE=4352]="DONT_CARE",e[e.FASTEST=4353]="FASTEST",e[e.NICEST=4354]="NICEST",e[e.GENERATE_MIPMAP_HINT=33170]="GENERATE_MIPMAP_HINT",e[e.BYTE=5120]="BYTE",e[e.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",e[e.SHORT=5122]="SHORT",e[e.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",e[e.INT=5124]="INT",e[e.UNSIGNED_INT=5125]="UNSIGNED_INT",e[e.FLOAT=5126]="FLOAT",e[e.DOUBLE=5130]="DOUBLE",e[e.DEPTH_COMPONENT=6402]="DEPTH_COMPONENT",e[e.ALPHA=6406]="ALPHA",e[e.RGB=6407]="RGB",e[e.RGBA=6408]="RGBA",e[e.LUMINANCE=6409]="LUMINANCE",e[e.LUMINANCE_ALPHA=6410]="LUMINANCE_ALPHA",e[e.UNSIGNED_SHORT_4_4_4_4=32819]="UNSIGNED_SHORT_4_4_4_4",e[e.UNSIGNED_SHORT_5_5_5_1=32820]="UNSIGNED_SHORT_5_5_5_1",e[e.UNSIGNED_SHORT_5_6_5=33635]="UNSIGNED_SHORT_5_6_5",e[e.FRAGMENT_SHADER=35632]="FRAGMENT_SHADER",e[e.VERTEX_SHADER=35633]="VERTEX_SHADER",e[e.COMPILE_STATUS=35713]="COMPILE_STATUS",e[e.DELETE_STATUS=35712]="DELETE_STATUS",e[e.LINK_STATUS=35714]="LINK_STATUS",e[e.VALIDATE_STATUS=35715]="VALIDATE_STATUS",e[e.ATTACHED_SHADERS=35717]="ATTACHED_SHADERS",e[e.ACTIVE_ATTRIBUTES=35721]="ACTIVE_ATTRIBUTES",e[e.ACTIVE_UNIFORMS=35718]="ACTIVE_UNIFORMS",e[e.MAX_VERTEX_ATTRIBS=34921]="MAX_VERTEX_ATTRIBS",e[e.MAX_VERTEX_UNIFORM_VECTORS=36347]="MAX_VERTEX_UNIFORM_VECTORS",e[e.MAX_VARYING_VECTORS=36348]="MAX_VARYING_VECTORS",e[e.MAX_COMBINED_TEXTURE_IMAGE_UNITS=35661]="MAX_COMBINED_TEXTURE_IMAGE_UNITS",e[e.MAX_VERTEX_TEXTURE_IMAGE_UNITS=35660]="MAX_VERTEX_TEXTURE_IMAGE_UNITS",e[e.MAX_TEXTURE_IMAGE_UNITS=34930]="MAX_TEXTURE_IMAGE_UNITS",e[e.MAX_FRAGMENT_UNIFORM_VECTORS=36349]="MAX_FRAGMENT_UNIFORM_VECTORS",e[e.SHADER_TYPE=35663]="SHADER_TYPE",e[e.SHADING_LANGUAGE_VERSION=35724]="SHADING_LANGUAGE_VERSION",e[e.CURRENT_PROGRAM=35725]="CURRENT_PROGRAM",e[e.NEVER=512]="NEVER",e[e.LESS=513]="LESS",e[e.EQUAL=514]="EQUAL",e[e.LEQUAL=515]="LEQUAL",e[e.GREATER=516]="GREATER",e[e.NOTEQUAL=517]="NOTEQUAL",e[e.GEQUAL=518]="GEQUAL",e[e.ALWAYS=519]="ALWAYS",e[e.KEEP=7680]="KEEP",e[e.REPLACE=7681]="REPLACE",e[e.INCR=7682]="INCR",e[e.DECR=7683]="DECR",e[e.INVERT=5386]="INVERT",e[e.INCR_WRAP=34055]="INCR_WRAP",e[e.DECR_WRAP=34056]="DECR_WRAP",e[e.NEAREST=9728]="NEAREST",e[e.LINEAR=9729]="LINEAR",e[e.NEAREST_MIPMAP_NEAREST=9984]="NEAREST_MIPMAP_NEAREST",e[e.LINEAR_MIPMAP_NEAREST=9985]="LINEAR_MIPMAP_NEAREST",e[e.NEAREST_MIPMAP_LINEAR=9986]="NEAREST_MIPMAP_LINEAR",e[e.LINEAR_MIPMAP_LINEAR=9987]="LINEAR_MIPMAP_LINEAR",e[e.TEXTURE_MAG_FILTER=10240]="TEXTURE_MAG_FILTER",e[e.TEXTURE_MIN_FILTER=10241]="TEXTURE_MIN_FILTER",e[e.TEXTURE_WRAP_S=10242]="TEXTURE_WRAP_S",e[e.TEXTURE_WRAP_T=10243]="TEXTURE_WRAP_T",e[e.TEXTURE_2D=3553]="TEXTURE_2D",e[e.TEXTURE=5890]="TEXTURE",e[e.TEXTURE_CUBE_MAP=34067]="TEXTURE_CUBE_MAP",e[e.TEXTURE_BINDING_CUBE_MAP=34068]="TEXTURE_BINDING_CUBE_MAP",e[e.TEXTURE_CUBE_MAP_POSITIVE_X=34069]="TEXTURE_CUBE_MAP_POSITIVE_X",e[e.TEXTURE_CUBE_MAP_NEGATIVE_X=34070]="TEXTURE_CUBE_MAP_NEGATIVE_X",e[e.TEXTURE_CUBE_MAP_POSITIVE_Y=34071]="TEXTURE_CUBE_MAP_POSITIVE_Y",e[e.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072]="TEXTURE_CUBE_MAP_NEGATIVE_Y",e[e.TEXTURE_CUBE_MAP_POSITIVE_Z=34073]="TEXTURE_CUBE_MAP_POSITIVE_Z",e[e.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074]="TEXTURE_CUBE_MAP_NEGATIVE_Z",e[e.MAX_CUBE_MAP_TEXTURE_SIZE=34076]="MAX_CUBE_MAP_TEXTURE_SIZE",e[e.TEXTURE0=33984]="TEXTURE0",e[e.ACTIVE_TEXTURE=34016]="ACTIVE_TEXTURE",e[e.REPEAT=10497]="REPEAT",e[e.CLAMP_TO_EDGE=33071]="CLAMP_TO_EDGE",e[e.MIRRORED_REPEAT=33648]="MIRRORED_REPEAT",e[e.TEXTURE_WIDTH=4096]="TEXTURE_WIDTH",e[e.TEXTURE_HEIGHT=4097]="TEXTURE_HEIGHT",e[e.FLOAT_VEC2=35664]="FLOAT_VEC2",e[e.FLOAT_VEC3=35665]="FLOAT_VEC3",e[e.FLOAT_VEC4=35666]="FLOAT_VEC4",e[e.INT_VEC2=35667]="INT_VEC2",e[e.INT_VEC3=35668]="INT_VEC3",e[e.INT_VEC4=35669]="INT_VEC4",e[e.BOOL=35670]="BOOL",e[e.BOOL_VEC2=35671]="BOOL_VEC2",e[e.BOOL_VEC3=35672]="BOOL_VEC3",e[e.BOOL_VEC4=35673]="BOOL_VEC4",e[e.FLOAT_MAT2=35674]="FLOAT_MAT2",e[e.FLOAT_MAT3=35675]="FLOAT_MAT3",e[e.FLOAT_MAT4=35676]="FLOAT_MAT4",e[e.SAMPLER_2D=35678]="SAMPLER_2D",e[e.SAMPLER_CUBE=35680]="SAMPLER_CUBE",e[e.LOW_FLOAT=36336]="LOW_FLOAT",e[e.MEDIUM_FLOAT=36337]="MEDIUM_FLOAT",e[e.HIGH_FLOAT=36338]="HIGH_FLOAT",e[e.LOW_INT=36339]="LOW_INT",e[e.MEDIUM_INT=36340]="MEDIUM_INT",e[e.HIGH_INT=36341]="HIGH_INT",e[e.FRAMEBUFFER=36160]="FRAMEBUFFER",e[e.RENDERBUFFER=36161]="RENDERBUFFER",e[e.RGBA4=32854]="RGBA4",e[e.RGB5_A1=32855]="RGB5_A1",e[e.RGB565=36194]="RGB565",e[e.DEPTH_COMPONENT16=33189]="DEPTH_COMPONENT16",e[e.STENCIL_INDEX=6401]="STENCIL_INDEX",e[e.STENCIL_INDEX8=36168]="STENCIL_INDEX8",e[e.DEPTH_STENCIL=34041]="DEPTH_STENCIL",e[e.RENDERBUFFER_WIDTH=36162]="RENDERBUFFER_WIDTH",e[e.RENDERBUFFER_HEIGHT=36163]="RENDERBUFFER_HEIGHT",e[e.RENDERBUFFER_INTERNAL_FORMAT=36164]="RENDERBUFFER_INTERNAL_FORMAT",e[e.RENDERBUFFER_RED_SIZE=36176]="RENDERBUFFER_RED_SIZE",e[e.RENDERBUFFER_GREEN_SIZE=36177]="RENDERBUFFER_GREEN_SIZE",e[e.RENDERBUFFER_BLUE_SIZE=36178]="RENDERBUFFER_BLUE_SIZE",e[e.RENDERBUFFER_ALPHA_SIZE=36179]="RENDERBUFFER_ALPHA_SIZE",e[e.RENDERBUFFER_DEPTH_SIZE=36180]="RENDERBUFFER_DEPTH_SIZE",e[e.RENDERBUFFER_STENCIL_SIZE=36181]="RENDERBUFFER_STENCIL_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE=36048]="FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",e[e.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME=36049]="FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",e[e.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL=36050]="FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",e[e.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE=36051]="FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",e[e.COLOR_ATTACHMENT0=36064]="COLOR_ATTACHMENT0",e[e.DEPTH_ATTACHMENT=36096]="DEPTH_ATTACHMENT",e[e.STENCIL_ATTACHMENT=36128]="STENCIL_ATTACHMENT",e[e.DEPTH_STENCIL_ATTACHMENT=33306]="DEPTH_STENCIL_ATTACHMENT",e[e.NONE=0]="NONE",e[e.FRAMEBUFFER_COMPLETE=36053]="FRAMEBUFFER_COMPLETE",e[e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT=36054]="FRAMEBUFFER_INCOMPLETE_ATTACHMENT",e[e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=36055]="FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",e[e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS=36057]="FRAMEBUFFER_INCOMPLETE_DIMENSIONS",e[e.FRAMEBUFFER_UNSUPPORTED=36061]="FRAMEBUFFER_UNSUPPORTED",e[e.FRAMEBUFFER_BINDING=36006]="FRAMEBUFFER_BINDING",e[e.RENDERBUFFER_BINDING=36007]="RENDERBUFFER_BINDING",e[e.READ_FRAMEBUFFER=36008]="READ_FRAMEBUFFER",e[e.DRAW_FRAMEBUFFER=36009]="DRAW_FRAMEBUFFER",e[e.MAX_RENDERBUFFER_SIZE=34024]="MAX_RENDERBUFFER_SIZE",e[e.INVALID_FRAMEBUFFER_OPERATION=1286]="INVALID_FRAMEBUFFER_OPERATION",e[e.UNPACK_FLIP_Y_WEBGL=37440]="UNPACK_FLIP_Y_WEBGL",e[e.UNPACK_PREMULTIPLY_ALPHA_WEBGL=37441]="UNPACK_PREMULTIPLY_ALPHA_WEBGL",e[e.UNPACK_COLORSPACE_CONVERSION_WEBGL=37443]="UNPACK_COLORSPACE_CONVERSION_WEBGL",e[e.READ_BUFFER=3074]="READ_BUFFER",e[e.UNPACK_ROW_LENGTH=3314]="UNPACK_ROW_LENGTH",e[e.UNPACK_SKIP_ROWS=3315]="UNPACK_SKIP_ROWS",e[e.UNPACK_SKIP_PIXELS=3316]="UNPACK_SKIP_PIXELS",e[e.PACK_ROW_LENGTH=3330]="PACK_ROW_LENGTH",e[e.PACK_SKIP_ROWS=3331]="PACK_SKIP_ROWS",e[e.PACK_SKIP_PIXELS=3332]="PACK_SKIP_PIXELS",e[e.TEXTURE_BINDING_3D=32874]="TEXTURE_BINDING_3D",e[e.UNPACK_SKIP_IMAGES=32877]="UNPACK_SKIP_IMAGES",e[e.UNPACK_IMAGE_HEIGHT=32878]="UNPACK_IMAGE_HEIGHT",e[e.MAX_3D_TEXTURE_SIZE=32883]="MAX_3D_TEXTURE_SIZE",e[e.MAX_ELEMENTS_VERTICES=33e3]="MAX_ELEMENTS_VERTICES",e[e.MAX_ELEMENTS_INDICES=33001]="MAX_ELEMENTS_INDICES",e[e.MAX_TEXTURE_LOD_BIAS=34045]="MAX_TEXTURE_LOD_BIAS",e[e.MAX_FRAGMENT_UNIFORM_COMPONENTS=35657]="MAX_FRAGMENT_UNIFORM_COMPONENTS",e[e.MAX_VERTEX_UNIFORM_COMPONENTS=35658]="MAX_VERTEX_UNIFORM_COMPONENTS",e[e.MAX_ARRAY_TEXTURE_LAYERS=35071]="MAX_ARRAY_TEXTURE_LAYERS",e[e.MIN_PROGRAM_TEXEL_OFFSET=35076]="MIN_PROGRAM_TEXEL_OFFSET",e[e.MAX_PROGRAM_TEXEL_OFFSET=35077]="MAX_PROGRAM_TEXEL_OFFSET",e[e.MAX_VARYING_COMPONENTS=35659]="MAX_VARYING_COMPONENTS",e[e.FRAGMENT_SHADER_DERIVATIVE_HINT=35723]="FRAGMENT_SHADER_DERIVATIVE_HINT",e[e.RASTERIZER_DISCARD=35977]="RASTERIZER_DISCARD",e[e.VERTEX_ARRAY_BINDING=34229]="VERTEX_ARRAY_BINDING",e[e.MAX_VERTEX_OUTPUT_COMPONENTS=37154]="MAX_VERTEX_OUTPUT_COMPONENTS",e[e.MAX_FRAGMENT_INPUT_COMPONENTS=37157]="MAX_FRAGMENT_INPUT_COMPONENTS",e[e.MAX_SERVER_WAIT_TIMEOUT=37137]="MAX_SERVER_WAIT_TIMEOUT",e[e.MAX_ELEMENT_INDEX=36203]="MAX_ELEMENT_INDEX",e[e.RED=6403]="RED",e[e.RGB8=32849]="RGB8",e[e.RGBA8=32856]="RGBA8",e[e.RGB10_A2=32857]="RGB10_A2",e[e.TEXTURE_3D=32879]="TEXTURE_3D",e[e.TEXTURE_WRAP_R=32882]="TEXTURE_WRAP_R",e[e.TEXTURE_MIN_LOD=33082]="TEXTURE_MIN_LOD",e[e.TEXTURE_MAX_LOD=33083]="TEXTURE_MAX_LOD",e[e.TEXTURE_BASE_LEVEL=33084]="TEXTURE_BASE_LEVEL",e[e.TEXTURE_MAX_LEVEL=33085]="TEXTURE_MAX_LEVEL",e[e.TEXTURE_COMPARE_MODE=34892]="TEXTURE_COMPARE_MODE",e[e.TEXTURE_COMPARE_FUNC=34893]="TEXTURE_COMPARE_FUNC",e[e.SRGB=35904]="SRGB",e[e.SRGB8=35905]="SRGB8",e[e.SRGB8_ALPHA8=35907]="SRGB8_ALPHA8",e[e.COMPARE_REF_TO_TEXTURE=34894]="COMPARE_REF_TO_TEXTURE",e[e.RGBA32F=34836]="RGBA32F",e[e.RGB32F=34837]="RGB32F",e[e.RGBA16F=34842]="RGBA16F",e[e.RGB16F=34843]="RGB16F",e[e.TEXTURE_2D_ARRAY=35866]="TEXTURE_2D_ARRAY",e[e.TEXTURE_BINDING_2D_ARRAY=35869]="TEXTURE_BINDING_2D_ARRAY",e[e.R11F_G11F_B10F=35898]="R11F_G11F_B10F",e[e.RGB9_E5=35901]="RGB9_E5",e[e.RGBA32UI=36208]="RGBA32UI",e[e.RGB32UI=36209]="RGB32UI",e[e.RGBA16UI=36214]="RGBA16UI",e[e.RGB16UI=36215]="RGB16UI",e[e.RGBA8UI=36220]="RGBA8UI",e[e.RGB8UI=36221]="RGB8UI",e[e.RGBA32I=36226]="RGBA32I",e[e.RGB32I=36227]="RGB32I",e[e.RGBA16I=36232]="RGBA16I",e[e.RGB16I=36233]="RGB16I",e[e.RGBA8I=36238]="RGBA8I",e[e.RGB8I=36239]="RGB8I",e[e.RED_INTEGER=36244]="RED_INTEGER",e[e.RGB_INTEGER=36248]="RGB_INTEGER",e[e.RGBA_INTEGER=36249]="RGBA_INTEGER",e[e.R8=33321]="R8",e[e.RG8=33323]="RG8",e[e.R16F=33325]="R16F",e[e.R32F=33326]="R32F",e[e.RG16F=33327]="RG16F",e[e.RG32F=33328]="RG32F",e[e.R8I=33329]="R8I",e[e.R8UI=33330]="R8UI",e[e.R16I=33331]="R16I",e[e.R16UI=33332]="R16UI",e[e.R32I=33333]="R32I",e[e.R32UI=33334]="R32UI",e[e.RG8I=33335]="RG8I",e[e.RG8UI=33336]="RG8UI",e[e.RG16I=33337]="RG16I",e[e.RG16UI=33338]="RG16UI",e[e.RG32I=33339]="RG32I",e[e.RG32UI=33340]="RG32UI",e[e.R8_SNORM=36756]="R8_SNORM",e[e.RG8_SNORM=36757]="RG8_SNORM",e[e.RGB8_SNORM=36758]="RGB8_SNORM",e[e.RGBA8_SNORM=36759]="RGBA8_SNORM",e[e.RGB10_A2UI=36975]="RGB10_A2UI",e[e.TEXTURE_IMMUTABLE_FORMAT=37167]="TEXTURE_IMMUTABLE_FORMAT",e[e.TEXTURE_IMMUTABLE_LEVELS=33503]="TEXTURE_IMMUTABLE_LEVELS",e[e.UNSIGNED_INT_2_10_10_10_REV=33640]="UNSIGNED_INT_2_10_10_10_REV",e[e.UNSIGNED_INT_10F_11F_11F_REV=35899]="UNSIGNED_INT_10F_11F_11F_REV",e[e.UNSIGNED_INT_5_9_9_9_REV=35902]="UNSIGNED_INT_5_9_9_9_REV",e[e.FLOAT_32_UNSIGNED_INT_24_8_REV=36269]="FLOAT_32_UNSIGNED_INT_24_8_REV",e[e.UNSIGNED_INT_24_8=34042]="UNSIGNED_INT_24_8",e[e.HALF_FLOAT=5131]="HALF_FLOAT",e[e.RG=33319]="RG",e[e.RG_INTEGER=33320]="RG_INTEGER",e[e.INT_2_10_10_10_REV=36255]="INT_2_10_10_10_REV",e[e.CURRENT_QUERY=34917]="CURRENT_QUERY",e[e.QUERY_RESULT=34918]="QUERY_RESULT",e[e.QUERY_RESULT_AVAILABLE=34919]="QUERY_RESULT_AVAILABLE",e[e.ANY_SAMPLES_PASSED=35887]="ANY_SAMPLES_PASSED",e[e.ANY_SAMPLES_PASSED_CONSERVATIVE=36202]="ANY_SAMPLES_PASSED_CONSERVATIVE",e[e.MAX_DRAW_BUFFERS=34852]="MAX_DRAW_BUFFERS",e[e.DRAW_BUFFER0=34853]="DRAW_BUFFER0",e[e.DRAW_BUFFER1=34854]="DRAW_BUFFER1",e[e.DRAW_BUFFER2=34855]="DRAW_BUFFER2",e[e.DRAW_BUFFER3=34856]="DRAW_BUFFER3",e[e.DRAW_BUFFER4=34857]="DRAW_BUFFER4",e[e.DRAW_BUFFER5=34858]="DRAW_BUFFER5",e[e.DRAW_BUFFER6=34859]="DRAW_BUFFER6",e[e.DRAW_BUFFER7=34860]="DRAW_BUFFER7",e[e.DRAW_BUFFER8=34861]="DRAW_BUFFER8",e[e.DRAW_BUFFER9=34862]="DRAW_BUFFER9",e[e.DRAW_BUFFER10=34863]="DRAW_BUFFER10",e[e.DRAW_BUFFER11=34864]="DRAW_BUFFER11",e[e.DRAW_BUFFER12=34865]="DRAW_BUFFER12",e[e.DRAW_BUFFER13=34866]="DRAW_BUFFER13",e[e.DRAW_BUFFER14=34867]="DRAW_BUFFER14",e[e.DRAW_BUFFER15=34868]="DRAW_BUFFER15",e[e.MAX_COLOR_ATTACHMENTS=36063]="MAX_COLOR_ATTACHMENTS",e[e.COLOR_ATTACHMENT1=36065]="COLOR_ATTACHMENT1",e[e.COLOR_ATTACHMENT2=36066]="COLOR_ATTACHMENT2",e[e.COLOR_ATTACHMENT3=36067]="COLOR_ATTACHMENT3",e[e.COLOR_ATTACHMENT4=36068]="COLOR_ATTACHMENT4",e[e.COLOR_ATTACHMENT5=36069]="COLOR_ATTACHMENT5",e[e.COLOR_ATTACHMENT6=36070]="COLOR_ATTACHMENT6",e[e.COLOR_ATTACHMENT7=36071]="COLOR_ATTACHMENT7",e[e.COLOR_ATTACHMENT8=36072]="COLOR_ATTACHMENT8",e[e.COLOR_ATTACHMENT9=36073]="COLOR_ATTACHMENT9",e[e.COLOR_ATTACHMENT10=36074]="COLOR_ATTACHMENT10",e[e.COLOR_ATTACHMENT11=36075]="COLOR_ATTACHMENT11",e[e.COLOR_ATTACHMENT12=36076]="COLOR_ATTACHMENT12",e[e.COLOR_ATTACHMENT13=36077]="COLOR_ATTACHMENT13",e[e.COLOR_ATTACHMENT14=36078]="COLOR_ATTACHMENT14",e[e.COLOR_ATTACHMENT15=36079]="COLOR_ATTACHMENT15",e[e.SAMPLER_3D=35679]="SAMPLER_3D",e[e.SAMPLER_2D_SHADOW=35682]="SAMPLER_2D_SHADOW",e[e.SAMPLER_2D_ARRAY=36289]="SAMPLER_2D_ARRAY",e[e.SAMPLER_2D_ARRAY_SHADOW=36292]="SAMPLER_2D_ARRAY_SHADOW",e[e.SAMPLER_CUBE_SHADOW=36293]="SAMPLER_CUBE_SHADOW",e[e.INT_SAMPLER_2D=36298]="INT_SAMPLER_2D",e[e.INT_SAMPLER_3D=36299]="INT_SAMPLER_3D",e[e.INT_SAMPLER_CUBE=36300]="INT_SAMPLER_CUBE",e[e.INT_SAMPLER_2D_ARRAY=36303]="INT_SAMPLER_2D_ARRAY",e[e.UNSIGNED_INT_SAMPLER_2D=36306]="UNSIGNED_INT_SAMPLER_2D",e[e.UNSIGNED_INT_SAMPLER_3D=36307]="UNSIGNED_INT_SAMPLER_3D",e[e.UNSIGNED_INT_SAMPLER_CUBE=36308]="UNSIGNED_INT_SAMPLER_CUBE",e[e.UNSIGNED_INT_SAMPLER_2D_ARRAY=36311]="UNSIGNED_INT_SAMPLER_2D_ARRAY",e[e.MAX_SAMPLES=36183]="MAX_SAMPLES",e[e.SAMPLER_BINDING=35097]="SAMPLER_BINDING",e[e.PIXEL_PACK_BUFFER=35051]="PIXEL_PACK_BUFFER",e[e.PIXEL_UNPACK_BUFFER=35052]="PIXEL_UNPACK_BUFFER",e[e.PIXEL_PACK_BUFFER_BINDING=35053]="PIXEL_PACK_BUFFER_BINDING",e[e.PIXEL_UNPACK_BUFFER_BINDING=35055]="PIXEL_UNPACK_BUFFER_BINDING",e[e.COPY_READ_BUFFER=36662]="COPY_READ_BUFFER",e[e.COPY_WRITE_BUFFER=36663]="COPY_WRITE_BUFFER",e[e.COPY_READ_BUFFER_BINDING=36662]="COPY_READ_BUFFER_BINDING",e[e.COPY_WRITE_BUFFER_BINDING=36663]="COPY_WRITE_BUFFER_BINDING",e[e.FLOAT_MAT2x3=35685]="FLOAT_MAT2x3",e[e.FLOAT_MAT2x4=35686]="FLOAT_MAT2x4",e[e.FLOAT_MAT3x2=35687]="FLOAT_MAT3x2",e[e.FLOAT_MAT3x4=35688]="FLOAT_MAT3x4",e[e.FLOAT_MAT4x2=35689]="FLOAT_MAT4x2",e[e.FLOAT_MAT4x3=35690]="FLOAT_MAT4x3",e[e.UNSIGNED_INT_VEC2=36294]="UNSIGNED_INT_VEC2",e[e.UNSIGNED_INT_VEC3=36295]="UNSIGNED_INT_VEC3",e[e.UNSIGNED_INT_VEC4=36296]="UNSIGNED_INT_VEC4",e[e.UNSIGNED_NORMALIZED=35863]="UNSIGNED_NORMALIZED",e[e.SIGNED_NORMALIZED=36764]="SIGNED_NORMALIZED",e[e.VERTEX_ATTRIB_ARRAY_INTEGER=35069]="VERTEX_ATTRIB_ARRAY_INTEGER",e[e.VERTEX_ATTRIB_ARRAY_DIVISOR=35070]="VERTEX_ATTRIB_ARRAY_DIVISOR",e[e.TRANSFORM_FEEDBACK_BUFFER_MODE=35967]="TRANSFORM_FEEDBACK_BUFFER_MODE",e[e.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS=35968]="MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS",e[e.TRANSFORM_FEEDBACK_VARYINGS=35971]="TRANSFORM_FEEDBACK_VARYINGS",e[e.TRANSFORM_FEEDBACK_BUFFER_START=35972]="TRANSFORM_FEEDBACK_BUFFER_START",e[e.TRANSFORM_FEEDBACK_BUFFER_SIZE=35973]="TRANSFORM_FEEDBACK_BUFFER_SIZE",e[e.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN=35976]="TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN",e[e.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS=35978]="MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS",e[e.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS=35979]="MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS",e[e.INTERLEAVED_ATTRIBS=35980]="INTERLEAVED_ATTRIBS",e[e.SEPARATE_ATTRIBS=35981]="SEPARATE_ATTRIBS",e[e.TRANSFORM_FEEDBACK_BUFFER=35982]="TRANSFORM_FEEDBACK_BUFFER",e[e.TRANSFORM_FEEDBACK_BUFFER_BINDING=35983]="TRANSFORM_FEEDBACK_BUFFER_BINDING",e[e.TRANSFORM_FEEDBACK=36386]="TRANSFORM_FEEDBACK",e[e.TRANSFORM_FEEDBACK_PAUSED=36387]="TRANSFORM_FEEDBACK_PAUSED",e[e.TRANSFORM_FEEDBACK_ACTIVE=36388]="TRANSFORM_FEEDBACK_ACTIVE",e[e.TRANSFORM_FEEDBACK_BINDING=36389]="TRANSFORM_FEEDBACK_BINDING",e[e.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING=33296]="FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING",e[e.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE=33297]="FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE",e[e.FRAMEBUFFER_ATTACHMENT_RED_SIZE=33298]="FRAMEBUFFER_ATTACHMENT_RED_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE=33299]="FRAMEBUFFER_ATTACHMENT_GREEN_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE=33300]="FRAMEBUFFER_ATTACHMENT_BLUE_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE=33301]="FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE=33302]="FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE=33303]="FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE",e[e.FRAMEBUFFER_DEFAULT=33304]="FRAMEBUFFER_DEFAULT",e[e.DEPTH24_STENCIL8=35056]="DEPTH24_STENCIL8",e[e.DRAW_FRAMEBUFFER_BINDING=36006]="DRAW_FRAMEBUFFER_BINDING",e[e.READ_FRAMEBUFFER_BINDING=36010]="READ_FRAMEBUFFER_BINDING",e[e.RENDERBUFFER_SAMPLES=36011]="RENDERBUFFER_SAMPLES",e[e.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER=36052]="FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER",e[e.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE=36182]="FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",e[e.UNIFORM_BUFFER=35345]="UNIFORM_BUFFER",e[e.UNIFORM_BUFFER_BINDING=35368]="UNIFORM_BUFFER_BINDING",e[e.UNIFORM_BUFFER_START=35369]="UNIFORM_BUFFER_START",e[e.UNIFORM_BUFFER_SIZE=35370]="UNIFORM_BUFFER_SIZE",e[e.MAX_VERTEX_UNIFORM_BLOCKS=35371]="MAX_VERTEX_UNIFORM_BLOCKS",e[e.MAX_FRAGMENT_UNIFORM_BLOCKS=35373]="MAX_FRAGMENT_UNIFORM_BLOCKS",e[e.MAX_COMBINED_UNIFORM_BLOCKS=35374]="MAX_COMBINED_UNIFORM_BLOCKS",e[e.MAX_UNIFORM_BUFFER_BINDINGS=35375]="MAX_UNIFORM_BUFFER_BINDINGS",e[e.MAX_UNIFORM_BLOCK_SIZE=35376]="MAX_UNIFORM_BLOCK_SIZE",e[e.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS=35377]="MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS",e[e.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS=35379]="MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS",e[e.UNIFORM_BUFFER_OFFSET_ALIGNMENT=35380]="UNIFORM_BUFFER_OFFSET_ALIGNMENT",e[e.ACTIVE_UNIFORM_BLOCKS=35382]="ACTIVE_UNIFORM_BLOCKS",e[e.UNIFORM_TYPE=35383]="UNIFORM_TYPE",e[e.UNIFORM_SIZE=35384]="UNIFORM_SIZE",e[e.UNIFORM_BLOCK_INDEX=35386]="UNIFORM_BLOCK_INDEX",e[e.UNIFORM_OFFSET=35387]="UNIFORM_OFFSET",e[e.UNIFORM_ARRAY_STRIDE=35388]="UNIFORM_ARRAY_STRIDE",e[e.UNIFORM_MATRIX_STRIDE=35389]="UNIFORM_MATRIX_STRIDE",e[e.UNIFORM_IS_ROW_MAJOR=35390]="UNIFORM_IS_ROW_MAJOR",e[e.UNIFORM_BLOCK_BINDING=35391]="UNIFORM_BLOCK_BINDING",e[e.UNIFORM_BLOCK_DATA_SIZE=35392]="UNIFORM_BLOCK_DATA_SIZE",e[e.UNIFORM_BLOCK_ACTIVE_UNIFORMS=35394]="UNIFORM_BLOCK_ACTIVE_UNIFORMS",e[e.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES=35395]="UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES",e[e.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER=35396]="UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER",e[e.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER=35398]="UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER",e[e.OBJECT_TYPE=37138]="OBJECT_TYPE",e[e.SYNC_CONDITION=37139]="SYNC_CONDITION",e[e.SYNC_STATUS=37140]="SYNC_STATUS",e[e.SYNC_FLAGS=37141]="SYNC_FLAGS",e[e.SYNC_FENCE=37142]="SYNC_FENCE",e[e.SYNC_GPU_COMMANDS_COMPLETE=37143]="SYNC_GPU_COMMANDS_COMPLETE",e[e.UNSIGNALED=37144]="UNSIGNALED",e[e.SIGNALED=37145]="SIGNALED",e[e.ALREADY_SIGNALED=37146]="ALREADY_SIGNALED",e[e.TIMEOUT_EXPIRED=37147]="TIMEOUT_EXPIRED",e[e.CONDITION_SATISFIED=37148]="CONDITION_SATISFIED",e[e.WAIT_FAILED=37149]="WAIT_FAILED",e[e.SYNC_FLUSH_COMMANDS_BIT=1]="SYNC_FLUSH_COMMANDS_BIT",e[e.COLOR=6144]="COLOR",e[e.DEPTH=6145]="DEPTH",e[e.STENCIL=6146]="STENCIL",e[e.MIN=32775]="MIN",e[e.MAX=32776]="MAX",e[e.DEPTH_COMPONENT24=33190]="DEPTH_COMPONENT24",e[e.STREAM_READ=35041]="STREAM_READ",e[e.STREAM_COPY=35042]="STREAM_COPY",e[e.STATIC_READ=35045]="STATIC_READ",e[e.STATIC_COPY=35046]="STATIC_COPY",e[e.DYNAMIC_READ=35049]="DYNAMIC_READ",e[e.DYNAMIC_COPY=35050]="DYNAMIC_COPY",e[e.DEPTH_COMPONENT32F=36012]="DEPTH_COMPONENT32F",e[e.DEPTH32F_STENCIL8=36013]="DEPTH32F_STENCIL8",e[e.INVALID_INDEX=4294967295]="INVALID_INDEX",e[e.TIMEOUT_IGNORED=-1]="TIMEOUT_IGNORED",e[e.MAX_CLIENT_WAIT_TIMEOUT_WEBGL=37447]="MAX_CLIENT_WAIT_TIMEOUT_WEBGL",e[e.UNMASKED_VENDOR_WEBGL=37445]="UNMASKED_VENDOR_WEBGL",e[e.UNMASKED_RENDERER_WEBGL=37446]="UNMASKED_RENDERER_WEBGL",e[e.MAX_TEXTURE_MAX_ANISOTROPY_EXT=34047]="MAX_TEXTURE_MAX_ANISOTROPY_EXT",e[e.TEXTURE_MAX_ANISOTROPY_EXT=34046]="TEXTURE_MAX_ANISOTROPY_EXT",e[e.R16_EXT=33322]="R16_EXT",e[e.RG16_EXT=33324]="RG16_EXT",e[e.RGB16_EXT=32852]="RGB16_EXT",e[e.RGBA16_EXT=32859]="RGBA16_EXT",e[e.R16_SNORM_EXT=36760]="R16_SNORM_EXT",e[e.RG16_SNORM_EXT=36761]="RG16_SNORM_EXT",e[e.RGB16_SNORM_EXT=36762]="RGB16_SNORM_EXT",e[e.RGBA16_SNORM_EXT=36763]="RGBA16_SNORM_EXT",e[e.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777]="COMPRESSED_RGBA_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778]="COMPRESSED_RGBA_S3TC_DXT3_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",e[e.COMPRESSED_SRGB_S3TC_DXT1_EXT=35916]="COMPRESSED_SRGB_S3TC_DXT1_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT=35917]="COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT=35918]="COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT=35919]="COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT",e[e.COMPRESSED_RED_RGTC1_EXT=36283]="COMPRESSED_RED_RGTC1_EXT",e[e.COMPRESSED_SIGNED_RED_RGTC1_EXT=36284]="COMPRESSED_SIGNED_RED_RGTC1_EXT",e[e.COMPRESSED_RED_GREEN_RGTC2_EXT=36285]="COMPRESSED_RED_GREEN_RGTC2_EXT",e[e.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT=36286]="COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT",e[e.COMPRESSED_RGBA_BPTC_UNORM_EXT=36492]="COMPRESSED_RGBA_BPTC_UNORM_EXT",e[e.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT=36493]="COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT",e[e.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT=36494]="COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT",e[e.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT=36495]="COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT",e[e.COMPRESSED_R11_EAC=37488]="COMPRESSED_R11_EAC",e[e.COMPRESSED_SIGNED_R11_EAC=37489]="COMPRESSED_SIGNED_R11_EAC",e[e.COMPRESSED_RG11_EAC=37490]="COMPRESSED_RG11_EAC",e[e.COMPRESSED_SIGNED_RG11_EAC=37491]="COMPRESSED_SIGNED_RG11_EAC",e[e.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",e[e.COMPRESSED_RGBA8_ETC2_EAC=37493]="COMPRESSED_RGBA8_ETC2_EAC",e[e.COMPRESSED_SRGB8_ETC2=37494]="COMPRESSED_SRGB8_ETC2",e[e.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37495]="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC",e[e.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37496]="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37497]="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",e[e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",e[e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG=35841]="COMPRESSED_RGB_PVRTC_2BPPV1_IMG",e[e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG=35843]="COMPRESSED_RGBA_PVRTC_2BPPV1_IMG",e[e.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",e[e.COMPRESSED_RGB_ATC_WEBGL=35986]="COMPRESSED_RGB_ATC_WEBGL",e[e.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL=35986]="COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL",e[e.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL=34798]="COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL",e[e.COMPRESSED_RGBA_ASTC_4x4_KHR=37808]="COMPRESSED_RGBA_ASTC_4x4_KHR",e[e.COMPRESSED_RGBA_ASTC_5x4_KHR=37809]="COMPRESSED_RGBA_ASTC_5x4_KHR",e[e.COMPRESSED_RGBA_ASTC_5x5_KHR=37810]="COMPRESSED_RGBA_ASTC_5x5_KHR",e[e.COMPRESSED_RGBA_ASTC_6x5_KHR=37811]="COMPRESSED_RGBA_ASTC_6x5_KHR",e[e.COMPRESSED_RGBA_ASTC_6x6_KHR=37812]="COMPRESSED_RGBA_ASTC_6x6_KHR",e[e.COMPRESSED_RGBA_ASTC_8x5_KHR=37813]="COMPRESSED_RGBA_ASTC_8x5_KHR",e[e.COMPRESSED_RGBA_ASTC_8x6_KHR=37814]="COMPRESSED_RGBA_ASTC_8x6_KHR",e[e.COMPRESSED_RGBA_ASTC_8x8_KHR=37815]="COMPRESSED_RGBA_ASTC_8x8_KHR",e[e.COMPRESSED_RGBA_ASTC_10x5_KHR=37816]="COMPRESSED_RGBA_ASTC_10x5_KHR",e[e.COMPRESSED_RGBA_ASTC_10x6_KHR=37817]="COMPRESSED_RGBA_ASTC_10x6_KHR",e[e.COMPRESSED_RGBA_ASTC_10x8_KHR=37818]="COMPRESSED_RGBA_ASTC_10x8_KHR",e[e.COMPRESSED_RGBA_ASTC_10x10_KHR=37819]="COMPRESSED_RGBA_ASTC_10x10_KHR",e[e.COMPRESSED_RGBA_ASTC_12x10_KHR=37820]="COMPRESSED_RGBA_ASTC_12x10_KHR",e[e.COMPRESSED_RGBA_ASTC_12x12_KHR=37821]="COMPRESSED_RGBA_ASTC_12x12_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR=37840]="COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR=37841]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR=37842]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR=37843]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR=37844]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR=37845]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR=37846]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR=37847]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR=37848]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR=37849]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR=37850]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR=37851]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR=37852]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR=37853]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR",e[e.QUERY_COUNTER_BITS_EXT=34916]="QUERY_COUNTER_BITS_EXT",e[e.CURRENT_QUERY_EXT=34917]="CURRENT_QUERY_EXT",e[e.QUERY_RESULT_EXT=34918]="QUERY_RESULT_EXT",e[e.QUERY_RESULT_AVAILABLE_EXT=34919]="QUERY_RESULT_AVAILABLE_EXT",e[e.TIME_ELAPSED_EXT=35007]="TIME_ELAPSED_EXT",e[e.TIMESTAMP_EXT=36392]="TIMESTAMP_EXT",e[e.GPU_DISJOINT_EXT=36795]="GPU_DISJOINT_EXT",e[e.COMPLETION_STATUS_KHR=37297]="COMPLETION_STATUS_KHR",e[e.DEPTH_CLAMP_EXT=34383]="DEPTH_CLAMP_EXT",e[e.FIRST_VERTEX_CONVENTION_WEBGL=36429]="FIRST_VERTEX_CONVENTION_WEBGL",e[e.LAST_VERTEX_CONVENTION_WEBGL=36430]="LAST_VERTEX_CONVENTION_WEBGL",e[e.PROVOKING_VERTEX_WEBL=36431]="PROVOKING_VERTEX_WEBL",e[e.POLYGON_MODE_WEBGL=2880]="POLYGON_MODE_WEBGL",e[e.POLYGON_OFFSET_LINE_WEBGL=10754]="POLYGON_OFFSET_LINE_WEBGL",e[e.LINE_WEBGL=6913]="LINE_WEBGL",e[e.FILL_WEBGL=6914]="FILL_WEBGL",e[e.MAX_CLIP_DISTANCES_WEBGL=3378]="MAX_CLIP_DISTANCES_WEBGL",e[e.MAX_CULL_DISTANCES_WEBGL=33529]="MAX_CULL_DISTANCES_WEBGL",e[e.MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL=33530]="MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL",e[e.CLIP_DISTANCE0_WEBGL=12288]="CLIP_DISTANCE0_WEBGL",e[e.CLIP_DISTANCE1_WEBGL=12289]="CLIP_DISTANCE1_WEBGL",e[e.CLIP_DISTANCE2_WEBGL=12290]="CLIP_DISTANCE2_WEBGL",e[e.CLIP_DISTANCE3_WEBGL=12291]="CLIP_DISTANCE3_WEBGL",e[e.CLIP_DISTANCE4_WEBGL=12292]="CLIP_DISTANCE4_WEBGL",e[e.CLIP_DISTANCE5_WEBGL=12293]="CLIP_DISTANCE5_WEBGL",e[e.CLIP_DISTANCE6_WEBGL=12294]="CLIP_DISTANCE6_WEBGL",e[e.CLIP_DISTANCE7_WEBGL=12295]="CLIP_DISTANCE7_WEBGL",e[e.POLYGON_OFFSET_CLAMP_EXT=36379]="POLYGON_OFFSET_CLAMP_EXT",e[e.LOWER_LEFT_EXT=36001]="LOWER_LEFT_EXT",e[e.UPPER_LEFT_EXT=36002]="UPPER_LEFT_EXT",e[e.NEGATIVE_ONE_TO_ONE_EXT=37726]="NEGATIVE_ONE_TO_ONE_EXT",e[e.ZERO_TO_ONE_EXT=37727]="ZERO_TO_ONE_EXT",e[e.CLIP_ORIGIN_EXT=37724]="CLIP_ORIGIN_EXT",e[e.CLIP_DEPTH_MODE_EXT=37725]="CLIP_DEPTH_MODE_EXT",e[e.SRC1_COLOR_WEBGL=35065]="SRC1_COLOR_WEBGL",e[e.SRC1_ALPHA_WEBGL=34185]="SRC1_ALPHA_WEBGL",e[e.ONE_MINUS_SRC1_COLOR_WEBGL=35066]="ONE_MINUS_SRC1_COLOR_WEBGL",e[e.ONE_MINUS_SRC1_ALPHA_WEBGL=35067]="ONE_MINUS_SRC1_ALPHA_WEBGL",e[e.MAX_DUAL_SOURCE_DRAW_BUFFERS_WEBGL=35068]="MAX_DUAL_SOURCE_DRAW_BUFFERS_WEBGL",e[e.MIRROR_CLAMP_TO_EDGE_EXT=34627]="MIRROR_CLAMP_TO_EDGE_EXT",e}(y||{});const x={[y.BLEND]:!1,[y.BLEND_COLOR]:new Float32Array([0,0,0,0]),[y.BLEND_EQUATION_RGB]:y.FUNC_ADD,[y.BLEND_EQUATION_ALPHA]:y.FUNC_ADD,[y.BLEND_SRC_RGB]:y.ONE,[y.BLEND_DST_RGB]:y.ZERO,[y.BLEND_SRC_ALPHA]:y.ONE,[y.BLEND_DST_ALPHA]:y.ZERO,[y.COLOR_CLEAR_VALUE]:new Float32Array([0,0,0,0]),[y.COLOR_WRITEMASK]:[!0,!0,!0,!0],[y.CULL_FACE]:!1,[y.CULL_FACE_MODE]:y.BACK,[y.DEPTH_TEST]:!1,[y.DEPTH_CLEAR_VALUE]:1,[y.DEPTH_FUNC]:y.LESS,[y.DEPTH_RANGE]:new Float32Array([0,1]),[y.DEPTH_WRITEMASK]:!0,[y.DITHER]:!0,[y.CURRENT_PROGRAM]:null,[y.FRAMEBUFFER_BINDING]:null,[y.RENDERBUFFER_BINDING]:null,[y.VERTEX_ARRAY_BINDING]:null,[y.ARRAY_BUFFER_BINDING]:null,[y.FRONT_FACE]:y.CCW,[y.GENERATE_MIPMAP_HINT]:y.DONT_CARE,[y.LINE_WIDTH]:1,[y.POLYGON_OFFSET_FILL]:!1,[y.POLYGON_OFFSET_FACTOR]:0,[y.POLYGON_OFFSET_UNITS]:0,[y.SAMPLE_ALPHA_TO_COVERAGE]:!1,[y.SAMPLE_COVERAGE]:!1,[y.SAMPLE_COVERAGE_VALUE]:1,[y.SAMPLE_COVERAGE_INVERT]:!1,[y.SCISSOR_TEST]:!1,[y.SCISSOR_BOX]:new Int32Array([0,0,1024,1024]),[y.STENCIL_TEST]:!1,[y.STENCIL_CLEAR_VALUE]:0,[y.STENCIL_WRITEMASK]:4294967295,[y.STENCIL_BACK_WRITEMASK]:4294967295,[y.STENCIL_FUNC]:y.ALWAYS,[y.STENCIL_REF]:0,[y.STENCIL_VALUE_MASK]:4294967295,[y.STENCIL_BACK_FUNC]:y.ALWAYS,[y.STENCIL_BACK_REF]:0,[y.STENCIL_BACK_VALUE_MASK]:4294967295,[y.STENCIL_FAIL]:y.KEEP,[y.STENCIL_PASS_DEPTH_FAIL]:y.KEEP,[y.STENCIL_PASS_DEPTH_PASS]:y.KEEP,[y.STENCIL_BACK_FAIL]:y.KEEP,[y.STENCIL_BACK_PASS_DEPTH_FAIL]:y.KEEP,[y.STENCIL_BACK_PASS_DEPTH_PASS]:y.KEEP,[y.VIEWPORT]:[0,0,1024,1024],[y.TRANSFORM_FEEDBACK_BINDING]:null,[y.COPY_READ_BUFFER_BINDING]:null,[y.COPY_WRITE_BUFFER_BINDING]:null,[y.PIXEL_PACK_BUFFER_BINDING]:null,[y.PIXEL_UNPACK_BUFFER_BINDING]:null,[y.FRAGMENT_SHADER_DERIVATIVE_HINT]:y.DONT_CARE,[y.READ_FRAMEBUFFER_BINDING]:null,[y.RASTERIZER_DISCARD]:!1,[y.PACK_ALIGNMENT]:4,[y.UNPACK_ALIGNMENT]:4,[y.UNPACK_FLIP_Y_WEBGL]:!1,[y.UNPACK_PREMULTIPLY_ALPHA_WEBGL]:!1,[y.UNPACK_COLORSPACE_CONVERSION_WEBGL]:y.BROWSER_DEFAULT_WEBGL,[y.PACK_ROW_LENGTH]:0,[y.PACK_SKIP_PIXELS]:0,[y.PACK_SKIP_ROWS]:0,[y.UNPACK_ROW_LENGTH]:0,[y.UNPACK_IMAGE_HEIGHT]:0,[y.UNPACK_SKIP_PIXELS]:0,[y.UNPACK_SKIP_ROWS]:0,[y.UNPACK_SKIP_IMAGES]:0},U=(e,t,n)=>t?e.enable(n):e.disable(n),w=(e,t,n)=>e.hint(n,t),G=(e,t,n)=>e.pixelStorei(n,t),H=(e,t,n)=>{const i=n===y.FRAMEBUFFER_BINDING?y.DRAW_FRAMEBUFFER:y.READ_FRAMEBUFFER;return e.bindFramebuffer(i,t)},V=(e,t,n)=>{const i={[y.ARRAY_BUFFER_BINDING]:y.ARRAY_BUFFER,[y.COPY_READ_BUFFER_BINDING]:y.COPY_READ_BUFFER,[y.COPY_WRITE_BUFFER_BINDING]:y.COPY_WRITE_BUFFER,[y.PIXEL_PACK_BUFFER_BINDING]:y.PIXEL_PACK_BUFFER,[y.PIXEL_UNPACK_BUFFER_BINDING]:y.PIXEL_UNPACK_BUFFER}[n];e.bindBuffer(i,t)};function X(e){return Array.isArray(e)||ArrayBuffer.isView(e)&&!(e instanceof DataView)}const k={[y.BLEND]:U,[y.BLEND_COLOR]:(e,t)=>e.blendColor(...t),[y.BLEND_EQUATION_RGB]:"blendEquation",[y.BLEND_EQUATION_ALPHA]:"blendEquation",[y.BLEND_SRC_RGB]:"blendFunc",[y.BLEND_DST_RGB]:"blendFunc",[y.BLEND_SRC_ALPHA]:"blendFunc",[y.BLEND_DST_ALPHA]:"blendFunc",[y.COLOR_CLEAR_VALUE]:(e,t)=>e.clearColor(...t),[y.COLOR_WRITEMASK]:(e,t)=>e.colorMask(...t),[y.CULL_FACE]:U,[y.CULL_FACE_MODE]:(e,t)=>e.cullFace(t),[y.DEPTH_TEST]:U,[y.DEPTH_CLEAR_VALUE]:(e,t)=>e.clearDepth(t),[y.DEPTH_FUNC]:(e,t)=>e.depthFunc(t),[y.DEPTH_RANGE]:(e,t)=>e.depthRange(...t),[y.DEPTH_WRITEMASK]:(e,t)=>e.depthMask(t),[y.DITHER]:U,[y.FRAGMENT_SHADER_DERIVATIVE_HINT]:w,[y.CURRENT_PROGRAM]:(e,t)=>e.useProgram(t),[y.RENDERBUFFER_BINDING]:(e,t)=>e.bindRenderbuffer(y.RENDERBUFFER,t),[y.TRANSFORM_FEEDBACK_BINDING]:(e,t)=>null==e.bindTransformFeedback?void 0:e.bindTransformFeedback(y.TRANSFORM_FEEDBACK,t),[y.VERTEX_ARRAY_BINDING]:(e,t)=>e.bindVertexArray(t),[y.FRAMEBUFFER_BINDING]:H,[y.READ_FRAMEBUFFER_BINDING]:H,[y.ARRAY_BUFFER_BINDING]:V,[y.COPY_READ_BUFFER_BINDING]:V,[y.COPY_WRITE_BUFFER_BINDING]:V,[y.PIXEL_PACK_BUFFER_BINDING]:V,[y.PIXEL_UNPACK_BUFFER_BINDING]:V,[y.FRONT_FACE]:(e,t)=>e.frontFace(t),[y.GENERATE_MIPMAP_HINT]:w,[y.LINE_WIDTH]:(e,t)=>e.lineWidth(t),[y.POLYGON_OFFSET_FILL]:U,[y.POLYGON_OFFSET_FACTOR]:"polygonOffset",[y.POLYGON_OFFSET_UNITS]:"polygonOffset",[y.RASTERIZER_DISCARD]:U,[y.SAMPLE_ALPHA_TO_COVERAGE]:U,[y.SAMPLE_COVERAGE]:U,[y.SAMPLE_COVERAGE_VALUE]:"sampleCoverage",[y.SAMPLE_COVERAGE_INVERT]:"sampleCoverage",[y.SCISSOR_TEST]:U,[y.SCISSOR_BOX]:(e,t)=>e.scissor(...t),[y.STENCIL_TEST]:U,[y.STENCIL_CLEAR_VALUE]:(e,t)=>e.clearStencil(t),[y.STENCIL_WRITEMASK]:(e,t)=>e.stencilMaskSeparate(y.FRONT,t),[y.STENCIL_BACK_WRITEMASK]:(e,t)=>e.stencilMaskSeparate(y.BACK,t),[y.STENCIL_FUNC]:"stencilFuncFront",[y.STENCIL_REF]:"stencilFuncFront",[y.STENCIL_VALUE_MASK]:"stencilFuncFront",[y.STENCIL_BACK_FUNC]:"stencilFuncBack",[y.STENCIL_BACK_REF]:"stencilFuncBack",[y.STENCIL_BACK_VALUE_MASK]:"stencilFuncBack",[y.STENCIL_FAIL]:"stencilOpFront",[y.STENCIL_PASS_DEPTH_FAIL]:"stencilOpFront",[y.STENCIL_PASS_DEPTH_PASS]:"stencilOpFront",[y.STENCIL_BACK_FAIL]:"stencilOpBack",[y.STENCIL_BACK_PASS_DEPTH_FAIL]:"stencilOpBack",[y.STENCIL_BACK_PASS_DEPTH_PASS]:"stencilOpBack",[y.VIEWPORT]:(e,t)=>e.viewport(...t),[y.DEPTH_CLAMP_EXT]:U,[y.POLYGON_OFFSET_LINE_WEBGL]:U,[y.CLIP_DISTANCE0_WEBGL]:U,[y.CLIP_DISTANCE1_WEBGL]:U,[y.CLIP_DISTANCE2_WEBGL]:U,[y.CLIP_DISTANCE3_WEBGL]:U,[y.CLIP_DISTANCE4_WEBGL]:U,[y.CLIP_DISTANCE5_WEBGL]:U,[y.CLIP_DISTANCE6_WEBGL]:U,[y.CLIP_DISTANCE7_WEBGL]:U,[y.PACK_ALIGNMENT]:G,[y.UNPACK_ALIGNMENT]:G,[y.UNPACK_FLIP_Y_WEBGL]:G,[y.UNPACK_PREMULTIPLY_ALPHA_WEBGL]:G,[y.UNPACK_COLORSPACE_CONVERSION_WEBGL]:G,[y.PACK_ROW_LENGTH]:G,[y.PACK_SKIP_PIXELS]:G,[y.PACK_SKIP_ROWS]:G,[y.UNPACK_ROW_LENGTH]:G,[y.UNPACK_IMAGE_HEIGHT]:G,[y.UNPACK_SKIP_PIXELS]:G,[y.UNPACK_SKIP_ROWS]:G,[y.UNPACK_SKIP_IMAGES]:G,framebuffer:(e,t)=>{const n=t&&"handle"in t?t.handle:t;return e.bindFramebuffer(y.FRAMEBUFFER,n)},blend:(e,t)=>t?e.enable(y.BLEND):e.disable(y.BLEND),blendColor:(e,t)=>e.blendColor(...t),blendEquation:(e,t)=>{const n="number"==typeof t?[t,t]:t;e.blendEquationSeparate(...n)},blendFunc:(e,t)=>{const n=2===(null==t?void 0:t.length)?[...t,...t]:t;e.blendFuncSeparate(...n)},clearColor:(e,t)=>e.clearColor(...t),clearDepth:(e,t)=>e.clearDepth(t),clearStencil:(e,t)=>e.clearStencil(t),colorMask:(e,t)=>e.colorMask(...t),cull:(e,t)=>t?e.enable(y.CULL_FACE):e.disable(y.CULL_FACE),cullFace:(e,t)=>e.cullFace(t),depthTest:(e,t)=>t?e.enable(y.DEPTH_TEST):e.disable(y.DEPTH_TEST),depthFunc:(e,t)=>e.depthFunc(t),depthMask:(e,t)=>e.depthMask(t),depthRange:(e,t)=>e.depthRange(...t),dither:(e,t)=>t?e.enable(y.DITHER):e.disable(y.DITHER),derivativeHint:(e,t)=>{e.hint(y.FRAGMENT_SHADER_DERIVATIVE_HINT,t)},frontFace:(e,t)=>e.frontFace(t),mipmapHint:(e,t)=>e.hint(y.GENERATE_MIPMAP_HINT,t),lineWidth:(e,t)=>e.lineWidth(t),polygonOffsetFill:(e,t)=>t?e.enable(y.POLYGON_OFFSET_FILL):e.disable(y.POLYGON_OFFSET_FILL),polygonOffset:(e,t)=>e.polygonOffset(...t),sampleCoverage:(e,t)=>e.sampleCoverage(t[0],t[1]||!1),scissorTest:(e,t)=>t?e.enable(y.SCISSOR_TEST):e.disable(y.SCISSOR_TEST),scissor:(e,t)=>e.scissor(...t),stencilTest:(e,t)=>t?e.enable(y.STENCIL_TEST):e.disable(y.STENCIL_TEST),stencilMask:(e,t)=>{t=X(t)?t:[t,t];const[n,i]=t;e.stencilMaskSeparate(y.FRONT,n),e.stencilMaskSeparate(y.BACK,i)},stencilFunc:(e,t)=>{t=X(t)&&3===t.length?[...t,...t]:t;const[n,i,r,o,s,a]=t;e.stencilFuncSeparate(y.FRONT,n,i,r),e.stencilFuncSeparate(y.BACK,o,s,a)},stencilOp:(e,t)=>{t=X(t)&&3===t.length?[...t,...t]:t;const[n,i,r,o,s,a]=t;e.stencilOpSeparate(y.FRONT,n,i,r),e.stencilOpSeparate(y.BACK,o,s,a)},viewport:(e,t)=>e.viewport(...t)};function W(e,t,n){return void 0!==t[e]?t[e]:n[e]}const K={blendEquation:(e,t,n)=>e.blendEquationSeparate(W(y.BLEND_EQUATION_RGB,t,n),W(y.BLEND_EQUATION_ALPHA,t,n)),blendFunc:(e,t,n)=>e.blendFuncSeparate(W(y.BLEND_SRC_RGB,t,n),W(y.BLEND_DST_RGB,t,n),W(y.BLEND_SRC_ALPHA,t,n),W(y.BLEND_DST_ALPHA,t,n)),polygonOffset:(e,t,n)=>e.polygonOffset(W(y.POLYGON_OFFSET_FACTOR,t,n),W(y.POLYGON_OFFSET_UNITS,t,n)),sampleCoverage:(e,t,n)=>e.sampleCoverage(W(y.SAMPLE_COVERAGE_VALUE,t,n),W(y.SAMPLE_COVERAGE_INVERT,t,n)),stencilFuncFront:(e,t,n)=>e.stencilFuncSeparate(y.FRONT,W(y.STENCIL_FUNC,t,n),W(y.STENCIL_REF,t,n),W(y.STENCIL_VALUE_MASK,t,n)),stencilFuncBack:(e,t,n)=>e.stencilFuncSeparate(y.BACK,W(y.STENCIL_BACK_FUNC,t,n),W(y.STENCIL_BACK_REF,t,n),W(y.STENCIL_BACK_VALUE_MASK,t,n)),stencilOpFront:(e,t,n)=>e.stencilOpSeparate(y.FRONT,W(y.STENCIL_FAIL,t,n),W(y.STENCIL_PASS_DEPTH_FAIL,t,n),W(y.STENCIL_PASS_DEPTH_PASS,t,n)),stencilOpBack:(e,t,n)=>e.stencilOpSeparate(y.BACK,W(y.STENCIL_BACK_FAIL,t,n),W(y.STENCIL_BACK_PASS_DEPTH_FAIL,t,n),W(y.STENCIL_BACK_PASS_DEPTH_PASS,t,n))},z={enable:(e,t)=>e({[t]:!0}),disable:(e,t)=>e({[t]:!1}),pixelStorei:(e,t,n)=>e({[t]:n}),hint:(e,t,n)=>e({[t]:n}),useProgram:(e,t)=>e({[y.CURRENT_PROGRAM]:t}),bindRenderbuffer:(e,t,n)=>e({[y.RENDERBUFFER_BINDING]:n}),bindTransformFeedback:(e,t,n)=>e({[y.TRANSFORM_FEEDBACK_BINDING]:n}),bindVertexArray:(e,t)=>e({[y.VERTEX_ARRAY_BINDING]:t}),bindFramebuffer:(e,t,n)=>{switch(t){case y.FRAMEBUFFER:return e({[y.DRAW_FRAMEBUFFER_BINDING]:n,[y.READ_FRAMEBUFFER_BINDING]:n});case y.DRAW_FRAMEBUFFER:return e({[y.DRAW_FRAMEBUFFER_BINDING]:n});case y.READ_FRAMEBUFFER:return e({[y.READ_FRAMEBUFFER_BINDING]:n});default:return null}},bindBuffer:(e,t,n)=>{const i={[y.ARRAY_BUFFER]:[y.ARRAY_BUFFER_BINDING],[y.COPY_READ_BUFFER]:[y.COPY_READ_BUFFER_BINDING],[y.COPY_WRITE_BUFFER]:[y.COPY_WRITE_BUFFER_BINDING],[y.PIXEL_PACK_BUFFER]:[y.PIXEL_PACK_BUFFER_BINDING],[y.PIXEL_UNPACK_BUFFER]:[y.PIXEL_UNPACK_BUFFER_BINDING]}[t];return i?e({[i]:n}):{valueChanged:!0}},blendColor:(e,t,n,i,r)=>e({[y.BLEND_COLOR]:new Float32Array([t,n,i,r])}),blendEquation:(e,t)=>e({[y.BLEND_EQUATION_RGB]:t,[y.BLEND_EQUATION_ALPHA]:t}),blendEquationSeparate:(e,t,n)=>e({[y.BLEND_EQUATION_RGB]:t,[y.BLEND_EQUATION_ALPHA]:n}),blendFunc:(e,t,n)=>e({[y.BLEND_SRC_RGB]:t,[y.BLEND_DST_RGB]:n,[y.BLEND_SRC_ALPHA]:t,[y.BLEND_DST_ALPHA]:n}),blendFuncSeparate:(e,t,n,i,r)=>e({[y.BLEND_SRC_RGB]:t,[y.BLEND_DST_RGB]:n,[y.BLEND_SRC_ALPHA]:i,[y.BLEND_DST_ALPHA]:r}),clearColor:(e,t,n,i,r)=>e({[y.COLOR_CLEAR_VALUE]:new Float32Array([t,n,i,r])}),clearDepth:(e,t)=>e({[y.DEPTH_CLEAR_VALUE]:t}),clearStencil:(e,t)=>e({[y.STENCIL_CLEAR_VALUE]:t}),colorMask:(e,t,n,i,r)=>e({[y.COLOR_WRITEMASK]:[t,n,i,r]}),cullFace:(e,t)=>e({[y.CULL_FACE_MODE]:t}),depthFunc:(e,t)=>e({[y.DEPTH_FUNC]:t}),depthRange:(e,t,n)=>e({[y.DEPTH_RANGE]:new Float32Array([t,n])}),depthMask:(e,t)=>e({[y.DEPTH_WRITEMASK]:t}),frontFace:(e,t)=>e({[y.FRONT_FACE]:t}),lineWidth:(e,t)=>e({[y.LINE_WIDTH]:t}),polygonOffset:(e,t,n)=>e({[y.POLYGON_OFFSET_FACTOR]:t,[y.POLYGON_OFFSET_UNITS]:n}),sampleCoverage:(e,t,n)=>e({[y.SAMPLE_COVERAGE_VALUE]:t,[y.SAMPLE_COVERAGE_INVERT]:n}),scissor:(e,t,n,i,r)=>e({[y.SCISSOR_BOX]:new Int32Array([t,n,i,r])}),stencilMask:(e,t)=>e({[y.STENCIL_WRITEMASK]:t,[y.STENCIL_BACK_WRITEMASK]:t}),stencilMaskSeparate:(e,t,n)=>e({[t===y.FRONT?y.STENCIL_WRITEMASK:y.STENCIL_BACK_WRITEMASK]:n}),stencilFunc:(e,t,n,i)=>e({[y.STENCIL_FUNC]:t,[y.STENCIL_REF]:n,[y.STENCIL_VALUE_MASK]:i,[y.STENCIL_BACK_FUNC]:t,[y.STENCIL_BACK_REF]:n,[y.STENCIL_BACK_VALUE_MASK]:i}),stencilFuncSeparate:(e,t,n,i,r)=>e({[t===y.FRONT?y.STENCIL_FUNC:y.STENCIL_BACK_FUNC]:n,[t===y.FRONT?y.STENCIL_REF:y.STENCIL_BACK_REF]:i,[t===y.FRONT?y.STENCIL_VALUE_MASK:y.STENCIL_BACK_VALUE_MASK]:r}),stencilOp:(e,t,n,i)=>e({[y.STENCIL_FAIL]:t,[y.STENCIL_PASS_DEPTH_FAIL]:n,[y.STENCIL_PASS_DEPTH_PASS]:i,[y.STENCIL_BACK_FAIL]:t,[y.STENCIL_BACK_PASS_DEPTH_FAIL]:n,[y.STENCIL_BACK_PASS_DEPTH_PASS]:i}),stencilOpSeparate:(e,t,n,i,r)=>e({[t===y.FRONT?y.STENCIL_FAIL:y.STENCIL_BACK_FAIL]:n,[t===y.FRONT?y.STENCIL_PASS_DEPTH_FAIL:y.STENCIL_BACK_PASS_DEPTH_FAIL]:i,[t===y.FRONT?y.STENCIL_PASS_DEPTH_PASS:y.STENCIL_BACK_PASS_DEPTH_PASS]:r}),viewport:(e,t,n,i,r)=>e({[y.VIEWPORT]:[t,n,i,r]})},Y=(e,t)=>e.isEnabled(t),j={[y.BLEND]:Y,[y.CULL_FACE]:Y,[y.DEPTH_TEST]:Y,[y.DITHER]:Y,[y.POLYGON_OFFSET_FILL]:Y,[y.SAMPLE_ALPHA_TO_COVERAGE]:Y,[y.SAMPLE_COVERAGE]:Y,[y.SCISSOR_TEST]:Y,[y.STENCIL_TEST]:Y,[y.RASTERIZER_DISCARD]:Y},Q=new Set([y.ACTIVE_TEXTURE,y.TRANSFORM_FEEDBACK_ACTIVE,y.TRANSFORM_FEEDBACK_PAUSED,y.TRANSFORM_FEEDBACK_BUFFER_BINDING,y.UNIFORM_BUFFER_BINDING,y.ELEMENT_ARRAY_BUFFER_BINDING,y.IMPLEMENTATION_COLOR_READ_FORMAT,y.IMPLEMENTATION_COLOR_READ_TYPE,y.READ_BUFFER,y.DRAW_BUFFER0,y.DRAW_BUFFER1,y.DRAW_BUFFER2,y.DRAW_BUFFER3,y.DRAW_BUFFER4,y.DRAW_BUFFER5,y.DRAW_BUFFER6,y.DRAW_BUFFER7,y.DRAW_BUFFER8,y.DRAW_BUFFER9,y.DRAW_BUFFER10,y.DRAW_BUFFER11,y.DRAW_BUFFER12,y.DRAW_BUFFER13,y.DRAW_BUFFER14,y.DRAW_BUFFER15,y.SAMPLER_BINDING,y.TEXTURE_BINDING_2D,y.TEXTURE_BINDING_2D_ARRAY,y.TEXTURE_BINDING_3D,y.TEXTURE_BINDING_CUBE_MAP]);function Z(e,t){if(function(e){for(const t in e)return!1;return!0}(t))return;const n={};for(const r in t){const i=Number(r),o=k[r];o&&("string"==typeof o?n[o]=!0:o(e,t[r],i))}const i=e.state&&e.state.cache;if(i)for(const r in n){(0,K[r])(e,t,i)}}function q(e,t){if(void 0===t&&(t=x),"number"==typeof t){const n=t,i=j[n];return i?i(e,n):e.getParameter(n)}const n=Array.isArray(t)?t:Object.keys(t),i={};for(const r of n){const t=j[r];i[r]=t?t(e,Number(r)):e.getParameter(Number(r))}return i}function J(e,t){if(e===t)return!0;const n=Array.isArray(e)||ArrayBuffer.isView(e),i=Array.isArray(t)||ArrayBuffer.isView(t);if(n&&i&&e.length===t.length){for(let n=0;n<e.length;++n)if(e[n]!==t[n])return!1;return!0}return!1}class ${constructor(e,t){let{copyState:n=!1,log:i=(()=>{})}=void 0===t?{}:t;this.program=null,this.stateStack=[],this.enable=!0,this.gl=e,this.cache=n?q(e):Object.assign({},x),this.log=i,this._updateCache=this._updateCache.bind(this),Object.seal(this)}push(e){void 0===e&&(e={}),this.stateStack.push({})}pop(){const e=this.stateStack[this.stateStack.length-1];Z(this.gl,e),this.stateStack.pop()}_updateCache(e){let t,n=!1;const i=this.stateStack.length>0?this.stateStack[this.stateStack.length-1]:null;for(const r in e){const o=e[r],s=this.cache[r];J(o,s)||(n=!0,t=s,i&&!(r in i)&&(i[r]=s),this.cache[r]=o)}return{valueChanged:n,oldValue:t}}}function ee(e){return e.state}function te(e,t){const{enable:n=!0,copyState:i}=t||{};if(!e.state){e.state=new $(e,{copyState:i}),function(e){const t=e.useProgram.bind(e);e.useProgram=function(n){const i=ee(e);i.program!==n&&(t(n),i.program=n)}}(e);for(const t in z){oe(e,t,z[t])}re(e,"getParameter"),re(e,"isEnabled")}return ee(e).enable=n,e}function ne(e){let t=ee(e);t||(te(e,{copyState:!1}),t=ee(e)),t.push()}function ie(e){ee(e).pop()}function re(e,t){const n=e[t].bind(e);e[t]=function(t){if(void 0===t||Q.has(t))return n(t);const i=ee(e);return t in i.cache||(i.cache[t]=n(t)),i.enable?i.cache[t]:n(t)},Object.defineProperty(e[t],"name",{value:t+"-from-cache",configurable:!1})}function oe(e,t,n){if(!e[t])return;const i=e[t].bind(e);e[t]=function(){const t=ee(e);for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s];const{valueChanged:a,oldValue:l}=n(t._updateCache,...o);return a&&i(...o),l},Object.defineProperty(e[t],"name",{value:t+"-to-cache",configurable:!1})}const se={powerPreference:"high-performance",onContextLost:()=>console.error("WebGL context lost"),onContextRestored:()=>console.info("WebGL context restored")};function ae(e,t,n){return void 0===n[t]&&(n[t]=e.getExtension(t)||null),n[t]}function le(e,t){const n=e.getParameter(y.VENDOR),i=e.getParameter(y.RENDERER);ae(e,"WEBGL_debug_renderer_info",t);const r=t.WEBGL_debug_renderer_info,o=e.getParameter(r?r.UNMASKED_VENDOR_WEBGL:y.VENDOR)||n,s=e.getParameter(r?r.UNMASKED_RENDERER_WEBGL:y.RENDERER)||i,a=e.getParameter(y.VERSION),l=ce(o,s),c=function(e,t){if(/Metal/i.exec(e)||/Metal/i.exec(t))return"metal";if(/ANGLE/i.exec(e)||/ANGLE/i.exec(t))return"opengl";return"unknown"}(o,s),u=function(e,t){if(/SwiftShader/i.exec(e)||/SwiftShader/i.exec(t))return"cpu";switch(ce(e,t)){case"intel":return"integrated";case"software":return"cpu";case"unknown":return"unknown";default:return"discrete"}}(o,s);return{type:"webgl",gpu:l,gpuType:u,gpuBackend:c,vendor:o,renderer:s,version:a,shadingLanguage:"glsl",shadingLanguageVersion:300}}function ce(e,t){return/NVIDIA/i.exec(e)||/NVIDIA/i.exec(t)?"nvidia":/INTEL/i.exec(e)||/INTEL/i.exec(t)?"intel":/Apple/i.exec(e)||/Apple/i.exec(t)?"apple":/AMD/i.exec(e)||/AMD/i.exec(t)||/ATI/i.exec(e)||/ATI/i.exec(t)?"amd":/SwiftShader/i.exec(e)||/SwiftShader/i.exec(t)?"software":"unknown"}function ue(e){switch(e){case"uint8":case"unorm8":return y.UNSIGNED_BYTE;case"sint8":case"snorm8":return y.BYTE;case"uint16":case"unorm16":return y.UNSIGNED_SHORT;case"sint16":case"snorm16":return y.SHORT;case"uint32":return y.UNSIGNED_INT;case"sint32":return y.INT;case"float16":return y.HALF_FLOAT;case"float32":return y.FLOAT}throw new Error(String(e))}const de="texture-compression-bc",he="texture-compression-astc",_e="texture-compression-etc2",fe="texture-compression-pvrtc-webgl",pe="texture-compression-atc-webgl",Ee="float32-renderable-webgl",ge="float16-renderable-webgl",me="snorm8-renderable-webgl",Re="norm16-renderable-webgl",Ae="snorm16-renderable-webgl",Te="float32-filterable",ve="float16-filterable-webgl",Se="WEBGL_compressed_texture_s3tc",Ce="WEBGL_compressed_texture_s3tc_srgb",be="EXT_texture_compression_rgtc",Ie="EXT_texture_compression_bptc",Ne="EXT_texture_norm16",Le="EXT_render_snorm",Pe={"float32-renderable-webgl":["EXT_color_buffer_float"],"float16-renderable-webgl":["EXT_color_buffer_half_float"],"rgb9e5ufloat_renderable-webgl":["WEBGL_render_shared_exponent"],"snorm8-renderable-webgl":[Le],"norm16-renderable-webgl":[Ne],"snorm16-renderable-webgl":[Ne,Le],"float32-filterable":["OES_texture_float_linear"],"float16-filterable-webgl":["OES_texture_half_float_linear"],"texture-filterable-anisotropic-webgl":["EXT_texture_filter_anisotropic"],"texture-blend-float-webgl":["EXT_float_blend"],"texture-compression-bc":[Se,Ce,be,Ie],"texture-compression-bc5-webgl":[be],"texture-compression-bc7-webgl":[Ie],"texture-compression-etc2":["WEBGL_compressed_texture_etc"],"texture-compression-astc":["WEBGL_compressed_texture_astc"],"texture-compression-etc1-webgl":["WEBGL_compressed_texture_etc1"],"texture-compression-pvrtc-webgl":["WEBGL_compressed_texture_pvrtc"],"texture-compression-atc-webgl":["WEBGL_compressed_texture_atc"]};function Me(e,t,n){return(Pe[t]||[]).every((t=>ae(e,t,n)))}const Oe={"rgb8unorm-unsized":{gl:y.RGB,b:4,c:2,bpp:4,dataFormat:y.RGB,types:[y.UNSIGNED_BYTE,y.UNSIGNED_SHORT_5_6_5]},"rgba8unorm-unsized":{gl:y.RGBA,b:4,c:2,bpp:4,dataFormat:y.RGBA,types:[y.UNSIGNED_BYTE,y.UNSIGNED_SHORT_4_4_4_4,y.UNSIGNED_SHORT_5_5_5_1]},r8unorm:{gl:y.R8,b:1,c:1,rb:!0},r8snorm:{gl:y.R8_SNORM,b:1,c:1,render:me},r8uint:{gl:y.R8UI,b:1,c:1,rb:!0},r8sint:{gl:y.R8I,b:1,c:1,rb:!0},rg8unorm:{gl:y.RG8,b:2,c:2,rb:!0},rg8snorm:{gl:y.RG8_SNORM,b:2,c:2,render:me},rg8uint:{gl:y.RG8UI,b:2,c:2,rb:!0},rg8sint:{gl:y.RG8I,b:2,c:2,rb:!0},r16uint:{gl:y.R16UI,b:2,c:1,rb:!0},r16sint:{gl:y.R16I,b:2,c:1,rb:!0},r16float:{gl:y.R16F,b:2,c:1,render:ge,filter:"float16-filterable-webgl",rb:!0},"r16unorm-webgl":{gl:y.R16_EXT,b:2,c:1,f:Re,rb:!0},"r16snorm-webgl":{gl:y.R16_SNORM_EXT,b:2,c:1,f:Ae},"rgba4unorm-webgl":{gl:y.RGBA4,b:2,c:4,wgpu:!1,rb:!0},"rgb565unorm-webgl":{gl:y.RGB565,b:2,c:4,wgpu:!1,rb:!0},"rgb5a1unorm-webgl":{gl:y.RGB5_A1,b:2,c:4,wgpu:!1,rb:!0},"rgb8unorm-webgl":{gl:y.RGB8,b:3,c:3,wgpu:!1},"rgb8snorm-webgl":{gl:y.RGB8_SNORM,b:3,c:3,wgpu:!1},rgba8unorm:{gl:y.RGBA8,b:4,c:2,bpp:4},"rgba8unorm-srgb":{gl:y.SRGB8_ALPHA8,b:4,c:4,bpp:4},rgba8snorm:{gl:y.RGBA8_SNORM,b:4,c:4,render:me},rgba8uint:{gl:y.RGBA8UI,b:4,c:4,bpp:4},rgba8sint:{gl:y.RGBA8I,b:4,c:4,bpp:4},bgra8unorm:{b:4,c:4},"bgra8unorm-srgb":{b:4,c:4},rg16uint:{gl:y.RG16UI,b:4,c:1,bpp:4},rg16sint:{gl:y.RG16I,b:4,c:2,bpp:4},rg16float:{gl:y.RG16F,bpp:4,b:4,c:2,render:ge,filter:ve,rb:!0},"rg16unorm-webgl":{gl:y.RG16_EXT,b:2,c:2,render:Re},"rg16snorm-webgl":{gl:y.RG16_SNORM_EXT,b:2,c:2,render:Ae},r32uint:{gl:y.R32UI,b:4,c:1,bpp:4,rb:!0},r32sint:{gl:y.R32I,b:4,c:1,bpp:4,rb:!0},r32float:{gl:y.R32F,bpp:4,b:4,c:1,render:Ee,filter:Te},rgb9e5ufloat:{gl:y.RGB9_E5,b:4,c:3,p:1,render:"rgb9e5ufloat_renderable-webgl"},rg11b10ufloat:{gl:y.R11F_G11F_B10F,b:4,c:3,p:1,render:Ee,rb:!0},rgb10a2unorm:{gl:y.RGB10_A2,b:4,c:4,p:1,rb:!0},"rgb10a2uint-webgl":{b:4,c:4,gl:y.RGB10_A2UI,p:1,wgpu:!1,bpp:4,rb:!0},"rgb16unorm-webgl":{gl:y.RGB16_EXT,b:2,c:3,f:Re},"rgb16snorm-webgl":{gl:y.RGB16_SNORM_EXT,b:2,c:3,f:Re},rg32uint:{gl:y.RG32UI,b:8,c:2,rb:!0},rg32sint:{gl:y.RG32I,b:8,c:2,rb:!0},rg32float:{gl:y.RG32F,b:8,c:2,render:Ee,filter:Te,rb:!0},rgba16uint:{gl:y.RGBA16UI,b:8,c:4,rb:!0},rgba16sint:{gl:y.RGBA16I,b:8,c:4,rb:!0},rgba16float:{gl:y.RGBA16F,b:8,c:4,render:ge,filter:ve},"rgba16unorm-webgl":{gl:y.RGBA16_EXT,b:2,c:4,render:Re,rb:!0},"rgba16snorm-webgl":{gl:y.RGBA16_SNORM_EXT,b:2,c:4,render:Ae},"rgb32float-webgl":{gl:y.RGB32F,render:Ee,filter:Te,gl2ext:"EXT_color_buffer_float",dataFormat:y.RGB,types:[y.FLOAT]},rgba32uint:{gl:y.RGBA32UI,b:16,c:4,rb:!0},rgba32sint:{gl:y.RGBA32I,b:16,c:4,rb:!0},rgba32float:{gl:y.RGBA32F,b:16,c:4,render:Ee,filter:Te,rb:!0},stencil8:{gl:y.STENCIL_INDEX8,b:1,c:1,attachment:y.STENCIL_ATTACHMENT,rb:!0},depth16unorm:{gl:y.DEPTH_COMPONENT16,b:2,c:1,attachment:y.DEPTH_ATTACHMENT,dataFormat:y.DEPTH_COMPONENT,types:[y.UNSIGNED_SHORT],rb:!0},depth24plus:{gl:y.DEPTH_COMPONENT24,b:3,c:1,attachment:y.DEPTH_ATTACHMENT,dataFormat:y.DEPTH_COMPONENT,types:[y.UNSIGNED_INT]},depth32float:{gl:y.DEPTH_COMPONENT32F,b:4,c:1,attachment:y.DEPTH_ATTACHMENT,dataFormat:y.DEPTH_COMPONENT,types:[y.FLOAT],rb:!0},"depth24plus-stencil8":{gl:y.DEPTH24_STENCIL8,b:4,c:2,p:1,attachment:y.DEPTH_STENCIL_ATTACHMENT,rb:!0,depthTexture:!0,dataFormat:y.DEPTH_STENCIL,types:[y.UNSIGNED_INT_24_8]},"depth24unorm-stencil8":{gl:y.DEPTH24_STENCIL8,b:4,c:2,p:1,attachment:y.DEPTH_STENCIL_ATTACHMENT,dataFormat:y.DEPTH_STENCIL,types:[y.UNSIGNED_INT_24_8],rb:!0},"depth32float-stencil8":{gl:y.DEPTH32F_STENCIL8,b:5,c:2,p:1,attachment:y.DEPTH_STENCIL_ATTACHMENT,dataFormat:y.DEPTH_STENCIL,types:[y.FLOAT_32_UNSIGNED_INT_24_8_REV],rb:!0},"bc1-rgb-unorm-webgl":{gl:y.COMPRESSED_RGB_S3TC_DXT1_EXT,x:Se,f:de},"bc1-rgb-unorm-srgb-webgl":{gl:y.COMPRESSED_SRGB_S3TC_DXT1_EXT,x:Ce,f:de},"bc1-rgba-unorm":{gl:y.COMPRESSED_RGBA_S3TC_DXT1_EXT,x:Se,f:de},"bc1-rgba-unorm-srgb":{gl:y.COMPRESSED_SRGB_S3TC_DXT1_EXT,x:Ce,f:de},"bc2-rgba-unorm":{gl:y.COMPRESSED_RGBA_S3TC_DXT3_EXT,x:Se,f:de},"bc2-rgba-unorm-srgb":{gl:y.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,x:Ce,f:de},"bc3-rgba-unorm":{gl:y.COMPRESSED_RGBA_S3TC_DXT5_EXT,x:Se,f:de},"bc3-rgba-unorm-srgb":{gl:y.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT,x:Ce,f:de},"bc4-r-unorm":{gl:y.COMPRESSED_RED_RGTC1_EXT,x:be,f:de},"bc4-r-snorm":{gl:y.COMPRESSED_SIGNED_RED_RGTC1_EXT,x:be,f:de},"bc5-rg-unorm":{gl:y.COMPRESSED_RED_GREEN_RGTC2_EXT,x:be,f:de},"bc5-rg-snorm":{gl:y.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT,x:be,f:de},"bc6h-rgb-ufloat":{gl:y.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT,x:Ie,f:de},"bc6h-rgb-float":{gl:y.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT,x:Ie,f:de},"bc7-rgba-unorm":{gl:y.COMPRESSED_RGBA_BPTC_UNORM_EXT,x:Ie,f:de},"bc7-rgba-unorm-srgb":{gl:y.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT,x:Ie,f:de},"etc2-rgb8unorm":{gl:y.COMPRESSED_RGB8_ETC2,f:_e},"etc2-rgb8unorm-srgb":{gl:y.COMPRESSED_SRGB8_ETC2,f:_e},"etc2-rgb8a1unorm":{gl:y.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,f:_e},"etc2-rgb8a1unorm-srgb":{gl:y.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,f:_e},"etc2-rgba8unorm":{gl:y.COMPRESSED_RGBA8_ETC2_EAC,f:_e},"etc2-rgba8unorm-srgb":{gl:y.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC,f:_e},"eac-r11unorm":{gl:y.COMPRESSED_R11_EAC,f:_e},"eac-r11snorm":{gl:y.COMPRESSED_SIGNED_R11_EAC,f:_e},"eac-rg11unorm":{gl:y.COMPRESSED_RG11_EAC,f:_e},"eac-rg11snorm":{gl:y.COMPRESSED_SIGNED_RG11_EAC,f:_e},"astc-4x4-unorm":{gl:y.COMPRESSED_RGBA_ASTC_4x4_KHR,f:he},"astc-4x4-unorm-srgb":{gl:y.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR,f:he},"astc-5x4-unorm":{gl:y.COMPRESSED_RGBA_ASTC_5x4_KHR,f:he},"astc-5x4-unorm-srgb":{gl:y.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR,f:he},"astc-5x5-unorm":{gl:y.COMPRESSED_RGBA_ASTC_5x5_KHR,f:he},"astc-5x5-unorm-srgb":{gl:y.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR,f:he},"astc-6x5-unorm":{gl:y.COMPRESSED_RGBA_ASTC_6x5_KHR,f:he},"astc-6x5-unorm-srgb":{gl:y.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR,f:he},"astc-6x6-unorm":{gl:y.COMPRESSED_RGBA_ASTC_6x6_KHR,f:he},"astc-6x6-unorm-srgb":{gl:y.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR,f:he},"astc-8x5-unorm":{gl:y.COMPRESSED_RGBA_ASTC_8x5_KHR,f:he},"astc-8x5-unorm-srgb":{gl:y.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR,f:he},"astc-8x6-unorm":{gl:y.COMPRESSED_RGBA_ASTC_8x6_KHR,f:he},"astc-8x6-unorm-srgb":{gl:y.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR,f:he},"astc-8x8-unorm":{gl:y.COMPRESSED_RGBA_ASTC_8x8_KHR,f:he},"astc-8x8-unorm-srgb":{gl:y.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR,f:he},"astc-10x5-unorm":{gl:y.COMPRESSED_RGBA_ASTC_10x10_KHR,f:he},"astc-10x5-unorm-srgb":{gl:y.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR,f:he},"astc-10x6-unorm":{gl:y.COMPRESSED_RGBA_ASTC_10x6_KHR,f:he},"astc-10x6-unorm-srgb":{gl:y.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR,f:he},"astc-10x8-unorm":{gl:y.COMPRESSED_RGBA_ASTC_10x8_KHR,f:he},"astc-10x8-unorm-srgb":{gl:y.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR,f:he},"astc-10x10-unorm":{gl:y.COMPRESSED_RGBA_ASTC_10x10_KHR,f:he},"astc-10x10-unorm-srgb":{gl:y.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR,f:he},"astc-12x10-unorm":{gl:y.COMPRESSED_RGBA_ASTC_12x10_KHR,f:he},"astc-12x10-unorm-srgb":{gl:y.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR,f:he},"astc-12x12-unorm":{gl:y.COMPRESSED_RGBA_ASTC_12x12_KHR,f:he},"astc-12x12-unorm-srgb":{gl:y.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR,f:he},"pvrtc-rgb4unorm-webgl":{gl:y.COMPRESSED_RGB_PVRTC_4BPPV1_IMG,f:fe},"pvrtc-rgba4unorm-webgl":{gl:y.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,f:fe},"pvrtc-rbg2unorm-webgl":{gl:y.COMPRESSED_RGB_PVRTC_2BPPV1_IMG,f:fe},"pvrtc-rgba2unorm-webgl":{gl:y.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG,f:fe},"etc1-rbg-unorm-webgl":{gl:y.COMPRESSED_RGB_ETC1_WEBGL,f:"texture-compression-etc1-webgl"},"atc-rgb-unorm-webgl":{gl:y.COMPRESSED_RGB_ATC_WEBGL,f:pe},"atc-rgba-unorm-webgl":{gl:y.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,f:pe},"atc-rgbai-unorm-webgl":{gl:y.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL,f:pe}};y.RED,y.RED_INTEGER,y.RG,y.RG_INTEGER,y.RGB,y.RGB_INTEGER,y.RGBA,y.RGBA_INTEGER,y.DEPTH_COMPONENT,y.DEPTH_STENCIL,y.ALPHA,y.LUMINANCE,y.LUMINANCE_ALPHA,y.FLOAT,y.UNSIGNED_INT,y.INT,y.UNSIGNED_SHORT,y.SHORT,y.HALF_FLOAT,y.BYTE,y.UNSIGNED_BYTE;function Fe(e,t,n){const i=Oe[t];if(!i)return!1;if(void 0===i.gl)return!1;const r=i.x||i.gl2ext;return!r||Boolean(ae(e,r,n))}function De(e){var t;const n=Oe[e],i=function(e){const t=Oe[e],n=null==t?void 0:t.gl;if(void 0===n)throw new Error("Unsupported texture format "+e);return n}(e),r=A(e);return{internalFormat:i,format:(null==n?void 0:n.dataFormat)||Be(r.format,r.integer,r.normalized,i),type:r.dataType?ue(r.dataType):(null==n||null==(t=n.types)?void 0:t[0])||y.UNSIGNED_BYTE,compressed:r.compressed}}function Be(e,t,n,i){if(i===y.RGBA||i===y.RGB)return i;switch(e){case"r":return t&&!n?y.RED_INTEGER:y.RED;case"rg":return t&&!n?y.RG_INTEGER:y.RG;case"rgb":return t&&!n?y.RGB_INTEGER:y.RGB;case"rgba":return t&&!n?y.RGBA_INTEGER:y.RGBA;default:return y.RGBA}}let ye;const xe={"depth-clip-control":"EXT_depth_clamp","timer-query-webgl":"EXT_disjoint_timer_query_webgl2","compilation-status-async-webgl":"KHR_parallel_shader_compile","polygon-mode-webgl":"WEBGL_polygon_mode","provoking-vertex-webgl":"WEBGL_provoking_vertex","shader-clip-cull-distance-webgl":"WEBGL_clip_cull_distance","shader-noperspective-interpolation-webgl":"NV_shader_noperspective_interpolation","shader-conservative-depth-webgl":"EXT_conservative_depth"};ye=Symbol.iterator;class Ue extends C{constructor(e,t,n){super([],n),this.testedFeatures=new Set,this.gl=e,this.extensions=t,ae(e,"EXT_color_buffer_float",t)}*[ye](){const e=this.getFeatures();for(const t of e)this.has(t)&&(yield t);return[]}has(e){var t;return(null==(t=this.disabledFeatures)||!t[e])&&(this.testedFeatures.has(e)||(this.testedFeatures.add(e),function(e){return e in Pe}(e)&&Me(this.gl,e,this.extensions)&&this.features.add(e),this.getWebGLFeature(e)&&this.features.add(e)),this.features.has(e))}initializeFeatures(){const e=this.getFeatures().filter((e=>"polygon-mode-webgl"!==e));for(const t of e)this.has(t)}getFeatures(){return[...Object.keys(xe),...Object.keys(Pe)]}getWebGLFeature(e){const t=xe[e];return"string"==typeof t?Boolean(ae(this.gl,t,this.extensions)):Boolean(t)}}class we extends S{get maxTextureDimension1D(){return 0}get maxTextureDimension2D(){return this.getParameter(y.MAX_TEXTURE_SIZE)}get maxTextureDimension3D(){return this.getParameter(y.MAX_3D_TEXTURE_SIZE)}get maxTextureArrayLayers(){return this.getParameter(y.MAX_ARRAY_TEXTURE_LAYERS)}get maxBindGroups(){return 0}get maxDynamicUniformBuffersPerPipelineLayout(){return 0}get maxDynamicStorageBuffersPerPipelineLayout(){return 0}get maxSampledTexturesPerShaderStage(){return this.getParameter(y.MAX_VERTEX_TEXTURE_IMAGE_UNITS)}get maxSamplersPerShaderStage(){return this.getParameter(y.MAX_COMBINED_TEXTURE_IMAGE_UNITS)}get maxStorageBuffersPerShaderStage(){return 0}get maxStorageTexturesPerShaderStage(){return 0}get maxUniformBuffersPerShaderStage(){return this.getParameter(y.MAX_UNIFORM_BUFFER_BINDINGS)}get maxUniformBufferBindingSize(){return this.getParameter(y.MAX_UNIFORM_BLOCK_SIZE)}get maxStorageBufferBindingSize(){return 0}get minUniformBufferOffsetAlignment(){return this.getParameter(y.UNIFORM_BUFFER_OFFSET_ALIGNMENT)}get minStorageBufferOffsetAlignment(){return 0}get maxVertexBuffers(){return 16}get maxVertexAttributes(){return this.getParameter(y.MAX_VERTEX_ATTRIBS)}get maxVertexBufferArrayStride(){return 2048}get maxInterStageShaderComponents(){return this.getParameter(y.MAX_VARYING_COMPONENTS)}get maxComputeWorkgroupStorageSize(){return 0}get maxComputeInvocationsPerWorkgroup(){return 0}get maxComputeWorkgroupSizeX(){return 0}get maxComputeWorkgroupSizeY(){return 0}get maxComputeWorkgroupSizeZ(){return 0}get maxComputeWorkgroupsPerDimension(){return 0}constructor(e){super(),this.limits={},this.gl=e}getParameter(e){return void 0===this.limits[e]&&(this.limits[e]=this.gl.getParameter(e)),this.limits[e]||0}}var Ge=n(7862),He=n(7083);let Ve;Ve=Symbol.toStringTag;class Xe extends Ge.F{get[Ve](){return"Framebuffer"}constructor(e,t){void 0===t&&(t={}),super(e,t,Xe.defaultProps),this.width=this.props.width,this.height=this.props.height}resize(e){let t=!e;if(e){const[n,i]=Array.isArray(e)?e:[e.width,e.height];t=t||i!==this.height||n!==this.width,this.width=n,this.height=i}t&&(d.R.log(2,"Resizing framebuffer "+this.id+" to "+this.width+"x"+this.height)(),this.resizeAttachments(this.width,this.height))}autoCreateAttachmentTextures(){if(0===this.props.colorAttachments.length&&!this.props.depthStencilAttachment)throw new Error("Framebuffer has noattachments");this.colorAttachments=this.props.colorAttachments.map((e=>{if("string"==typeof e){const t=this.createColorTexture(e);return this.attachResource(t),t.view}return e instanceof He.g?e.view:e}));const e=this.props.depthStencilAttachment;if(e)if("string"==typeof e){const t=this.createDepthStencilTexture(e);this.attachResource(t),this.depthStencilAttachment=t.view}else e instanceof He.g?this.depthStencilAttachment=e.view:this.depthStencilAttachment=e}createColorTexture(e){return this.device.createTexture({id:"color-attachment",usage:He.g.RENDER_ATTACHMENT,format:e,width:this.width,height:this.height})}createDepthStencilTexture(e){return this.device.createTexture({id:"depth-stencil-attachment",usage:He.g.RENDER_ATTACHMENT,format:e,width:this.width,height:this.height})}resizeAttachments(e,t){for(let n=0;n<this.colorAttachments.length;++n)if(this.colorAttachments[n]){const i=this.device._createTexture({...this.colorAttachments[n].texture.props,width:e,height:t});this.destroyAttachedResource(this.colorAttachments[n]),this.colorAttachments[n]=i.view,this.attachResource(i.view)}if(this.depthStencilAttachment){const n=this.device._createTexture({...this.depthStencilAttachment.texture.props,width:e,height:t});this.destroyAttachedResource(this.depthStencilAttachment),this.depthStencilAttachment=n.view,this.attachResource(n)}}}function ke(e,t,n){if(function(e){for(const t in e)return!1;return!0}(t))return n(e);const{nocatch:i=!0}=t;let r;if(ne(e),Z(e,t),i)r=n(e),ie(e);else try{r=n(e)}finally{ie(e)}return r}function We(e,t){const n=e,{gl:i}=n;if(t.cullMode)switch(t.cullMode){case"none":i.disable(y.CULL_FACE);break;case"front":i.enable(y.CULL_FACE),i.cullFace(y.FRONT);break;case"back":i.enable(y.CULL_FACE),i.cullFace(y.BACK)}if(t.frontFace&&i.frontFace(Qe("frontFace",t.frontFace,{ccw:y.CCW,cw:y.CW})),t.unclippedDepth&&e.features.has("depth-clip-control")&&i.enable(y.DEPTH_CLAMP_EXT),void 0!==t.depthBias&&(i.enable(y.POLYGON_OFFSET_FILL),i.polygonOffset(t.depthBias,t.depthBiasSlopeScale||0)),t.provokingVertex&&e.features.has("provoking-vertex-webgl")){const e=n.getExtension("WEBGL_provoking_vertex").WEBGL_provoking_vertex,i=Qe("provokingVertex",t.provokingVertex,{first:y.FIRST_VERTEX_CONVENTION_WEBGL,last:y.LAST_VERTEX_CONVENTION_WEBGL});null==e||e.provokingVertexWEBGL(i)}if((t.polygonMode||t.polygonOffsetLine)&&e.features.has("polygon-mode-webgl")){if(t.polygonMode){const e=n.getExtension("WEBGL_polygon_mode").WEBGL_polygon_mode,i=Qe("polygonMode",t.polygonMode,{fill:y.FILL_WEBGL,line:y.LINE_WEBGL});null==e||e.polygonModeWEBGL(y.FRONT,i),null==e||e.polygonModeWEBGL(y.BACK,i)}t.polygonOffsetLine&&i.enable(y.POLYGON_OFFSET_LINE_WEBGL)}if(e.features.has("shader-clip-cull-distance-webgl")&&(t.clipDistance0&&i.enable(y.CLIP_DISTANCE0_WEBGL),t.clipDistance1&&i.enable(y.CLIP_DISTANCE1_WEBGL),t.clipDistance2&&i.enable(y.CLIP_DISTANCE2_WEBGL),t.clipDistance3&&i.enable(y.CLIP_DISTANCE3_WEBGL),t.clipDistance4&&i.enable(y.CLIP_DISTANCE4_WEBGL),t.clipDistance5&&i.enable(y.CLIP_DISTANCE5_WEBGL),t.clipDistance6&&i.enable(y.CLIP_DISTANCE6_WEBGL),t.clipDistance7&&i.enable(y.CLIP_DISTANCE7_WEBGL)),void 0!==t.depthWriteEnabled&&i.depthMask(t.depthWriteEnabled),t.depthCompare&&("always"!==t.depthCompare?i.enable(y.DEPTH_TEST):i.disable(y.DEPTH_TEST),i.depthFunc(Ke("depthCompare",t.depthCompare))),t.stencilWriteMask){const e=t.stencilWriteMask;i.stencilMaskSeparate(y.FRONT,e),i.stencilMaskSeparate(y.BACK,e)}if(t.stencilReadMask&&d.R.warn("stencilReadMask not supported under WebGL"),t.stencilCompare){const e=t.stencilReadMask||4294967295,n=Ke("depthCompare",t.stencilCompare);"always"!==t.stencilCompare?i.enable(y.STENCIL_TEST):i.disable(y.STENCIL_TEST),i.stencilFuncSeparate(y.FRONT,n,0,e),i.stencilFuncSeparate(y.BACK,n,0,e)}if(t.stencilPassOperation&&t.stencilFailOperation&&t.stencilDepthFailOperation){const e=ze("stencilPassOperation",t.stencilPassOperation),n=ze("stencilFailOperation",t.stencilFailOperation),r=ze("stencilDepthFailOperation",t.stencilDepthFailOperation);i.stencilOpSeparate(y.FRONT,n,r,e),i.stencilOpSeparate(y.BACK,n,r,e)}if(t.blendColorOperation||t.blendAlphaOperation){i.enable(y.BLEND);const e=Ye("blendColorOperation",t.blendColorOperation||"add"),n=Ye("blendAlphaOperation",t.blendAlphaOperation||"add");i.blendEquationSeparate(e,n);const r=je("blendColorSrcFactor",t.blendColorSrcFactor||"one"),o=je("blendColorDstFactor",t.blendColorDstFactor||"zero"),s=je("blendAlphaSrcFactor",t.blendAlphaSrcFactor||"one"),a=je("blendAlphaDstFactor",t.blendAlphaDstFactor||"zero");i.blendFuncSeparate(r,o,s,a)}}function Ke(e,t){return Qe(e,t,{never:y.NEVER,less:y.LESS,equal:y.EQUAL,"less-equal":y.LEQUAL,greater:y.GREATER,"not-equal":y.NOTEQUAL,"greater-equal":y.GEQUAL,always:y.ALWAYS})}function ze(e,t){return Qe(e,t,{keep:y.KEEP,zero:y.ZERO,replace:y.REPLACE,invert:y.INVERT,"increment-clamp":y.INCR,"decrement-clamp":y.DECR,"increment-wrap":y.INCR_WRAP,"decrement-wrap":y.DECR_WRAP})}function Ye(e,t){return Qe(e,t,{add:y.FUNC_ADD,subtract:y.FUNC_SUBTRACT,"reverse-subtract":y.FUNC_REVERSE_SUBTRACT,min:y.MIN,max:y.MAX})}function je(e,t){return Qe(e,t,{one:y.ONE,zero:y.ZERO,"src-color":y.SRC_COLOR,"one-minus-src-color":y.ONE_MINUS_SRC_COLOR,"dst-color":y.DST_COLOR,"one-minus-dst-color":y.ONE_MINUS_DST_COLOR,"src-alpha":y.SRC_ALPHA,"one-minus-src-alpha":y.ONE_MINUS_SRC_ALPHA,"dst-alpha":y.DST_ALPHA,"one-minus-dst-alpha":y.ONE_MINUS_DST_ALPHA,"src-alpha-saturated":y.SRC_ALPHA_SATURATE,"constant-color":y.CONSTANT_COLOR,"one-minus-constant-color":y.ONE_MINUS_CONSTANT_COLOR,"constant-alpha":y.CONSTANT_ALPHA,"one-minus-constant-alpha":y.ONE_MINUS_CONSTANT_ALPHA})}function Qe(e,t,n){if(!(t in n))throw new Error(function(e,t){return"Illegal parameter "+t+" for "+e}(e,t));return n[t]}function Ze(e){let t=!0;for(const n in e){t=!1;break}return t}function qe(e){const t={};return e.addressModeU&&(t[y.TEXTURE_WRAP_S]=Je(e.addressModeU)),e.addressModeV&&(t[y.TEXTURE_WRAP_T]=Je(e.addressModeV)),e.addressModeW&&(t[y.TEXTURE_WRAP_R]=Je(e.addressModeW)),e.magFilter&&(t[y.TEXTURE_MAG_FILTER]=$e(e.magFilter)),(e.minFilter||e.mipmapFilter)&&(t[y.TEXTURE_MIN_FILTER]=function(e,t){if(!t)return $e(e);switch(e){case"nearest":return"nearest"===t?y.NEAREST_MIPMAP_NEAREST:y.NEAREST_MIPMAP_LINEAR;case"linear":return"nearest"===t?y.LINEAR_MIPMAP_NEAREST:y.LINEAR_MIPMAP_LINEAR}}(e.minFilter||"linear",e.mipmapFilter)),void 0!==e.lodMinClamp&&(t[y.TEXTURE_MIN_LOD]=e.lodMinClamp),void 0!==e.lodMaxClamp&&(t[y.TEXTURE_MAX_LOD]=e.lodMaxClamp),"comparison-sampler"===e.type&&(t[y.TEXTURE_COMPARE_MODE]=y.COMPARE_REF_TO_TEXTURE),e.compare&&(t[y.TEXTURE_COMPARE_FUNC]=Ke("compare",e.compare)),e.maxAnisotropy&&(t[y.TEXTURE_MAX_ANISOTROPY_EXT]=e.maxAnisotropy),t}function Je(e){switch(e){case"clamp-to-edge":return y.CLAMP_TO_EDGE;case"repeat":return y.REPEAT;case"mirror-repeat":return y.MIRRORED_REPEAT}}function $e(e){switch(e){case"nearest":return y.NEAREST;case"linear":return y.LINEAR}}Xe.defaultProps={...Ge.F.defaultProps,width:1,height:1,colorAttachments:[],depthStencilAttachment:null};var et=n(5768);class tt extends et.L{constructor(e,t){super(e,t),this.device=e,this.parameters=qe(t),this.handle=this.handle||this.device.gl.createSampler(),this._setSamplerParameters(this.parameters)}destroy(){this.handle&&(this.device.gl.deleteSampler(this.handle),this.handle=void 0)}toString(){return"Sampler("+this.id+","+JSON.stringify(this.props)+")"}_setSamplerParameters(e){for(const[t,n]of Object.entries(e)){const e=Number(t);switch(e){case y.TEXTURE_MIN_LOD:case y.TEXTURE_MAX_LOD:this.device.gl.samplerParameterf(this.handle,e,n);break;default:this.device.gl.samplerParameteri(this.handle,e,n)}}}}var nt=n(4353);class it extends nt.X{constructor(e,t){super(e,{...He.g.defaultProps,...t}),this.device=e,this.gl=this.device.gl,this.handle=null,this.texture=t.texture}}function rt(e,t,n){const{dimension:i,width:r,height:o,depth:s=0,level:a=0,byteOffset:l=0}=n,{x:c=0,y:u=0,z:d=0}=n,{glFormat:h,glType:_,compressed:f}=n,p=ot(n.glTarget,i,s);switch(i){case"2d-array":case"3d":f?e.compressedTexSubImage3D(p,a,c,u,d,r,o,s,h,t,l):e.texSubImage3D(p,a,c,u,d,r,o,s,h,_,t,l);break;case"2d":case"cube":f?e.compressedTexSubImage2D(p,a,c,u,r,o,h,t,l):e.texSubImage2D(p,a,c,u,r,o,h,_,t,l);break;default:throw new Error(i)}}function ot(e,t,n){return"cube"===t?y.TEXTURE_CUBE_MAP_POSITIVE_X+n:e}class st extends He.g{constructor(e,t){super(e,{...He.g.defaultProps,...t,data:void 0}),this.sampler=void 0,this.view=void 0,this.mipmaps=!1,this.textureUnit=0,this._video=null,this.device=e,this.gl=this.device.gl,this.glTarget=function(e){switch(e){case"1d":case"cube-array":break;case"2d":return y.TEXTURE_2D;case"3d":return y.TEXTURE_3D;case"cube":return y.TEXTURE_CUBE_MAP;case"2d-array":return y.TEXTURE_2D_ARRAY}throw new Error(e)}(this.props.dimension);const n=De(this.props.format);if(this.glInternalFormat=n.internalFormat,this.glFormat=n.format,this.glType=n.type,this.compressed=n.compressed,"undefined"!=typeof HTMLVideoElement&&t.data instanceof HTMLVideoElement&&t.data.readyState<HTMLVideoElement.HAVE_METADATA){const e=t.data;this._video=null,e.addEventListener("loadeddata",(()=>this.initialize(t)))}this.initialize({...this.props,data:t.data}),Object.seal(this)}initialize(e){void 0===e&&(e={}),this.handle=this.props.handle||this.gl.createTexture(),this.device.setSpectorMetadata(this.handle,{...this.props,data:typeof this.props.data});const t=e.data;let{width:n,height:i}=e;if(!n||!i){const e=this.getTextureDataSize(t);n=(null==e?void 0:e.width)||1,i=(null==e?void 0:e.height)||1}if(this.width=n,this.height=i,this.depth=e.depth,this.setSampler(e.sampler),this.view=new it(this.device,{...this.props,texture:this}),this.bind(),this.props.data||function(e,t,n){const{dimension:i,width:r,height:o,depth:s=0}=n,{glInternalFormat:a}=n,l=n.glTarget;switch(i){case"2d-array":case"3d":e.texStorage3D(l,t,a,r,o,s);break;default:e.texStorage2D(l,t,a,r,o)}}(this.gl,this.mipLevels,this),e.data)switch(e.dimension){case"1d":this.setTexture1DData(e.data);break;case"2d":this.setTexture2DData(e.data);break;case"3d":this.setTexture3DData(e.data);break;case"cube":this.setTextureCubeData(e.data);break;case"2d-array":this.setTextureArrayData(e.data);break;case"cube-array":this.setTextureCubeArrayData(e.data);break;default:throw new Error(e.dimension)}this.mipmaps=Boolean(e.mipmaps),this.mipmaps&&this.generateMipmap()}destroy(){this.handle&&(this.gl.deleteTexture(this.handle),this.removeStats(),this.trackDeallocatedMemory("Texture"),this.destroyed=!0)}toString(){return"Texture("+this.id+","+this.width+"x"+this.height+")"}createView(e){return new it(this.device,{...e,texture:this})}setSampler(e){let t;void 0===e&&(e={}),e instanceof tt?(this.sampler=e,t=e.props):(this.sampler=new tt(this.device,e),t=e);const n=qe(t);this._setSamplerParameters(n)}update(){d.R.warn("Texture.update() not implemented")}generateMipmap(e){void 0===e&&(e={}),this.props.data&&(this.mipmaps=!0,this.gl.bindTexture(this.glTarget,this.handle),ke(this.gl,e,(()=>{this.gl.generateMipmap(this.glTarget)})),this.gl.bindTexture(this.glTarget,null))}setTexture1DData(e){throw new Error("setTexture1DData not supported in WebGL.")}setTexture2DData(e,t,n){void 0===t&&(t=0),void 0===n&&(n=this.glTarget),this.bind();const i=function(e,t){let n;return n=ArrayBuffer.isView(e)?[{data:e,width:t.width,height:t.height}]:Array.isArray(e)?e:[e],n}(e,this);i.length>1&&!1!==this.props.mipmaps&&d.R.warn("Texture "+this.id+" mipmap and multiple LODs.")();for(let r=0;r<i.length;r++){const e=i[r];this._setMipLevel(t,r,e)}this.unbind()}setTexture3DData(e){if("3d"!==this.props.dimension)throw new Error(this.id);ArrayBuffer.isView(e)&&rt(this.device.gl,e,this)}setTextureCubeData(e,t){if(void 0===t&&(t=0),"cube"!==this.props.dimension)throw new Error(this.id)}setTextureArrayData(e){if("2d-array"!==this.props.dimension)throw new Error(this.id);throw new Error("setTextureArrayData not implemented.")}setTextureCubeArrayData(e){throw new Error("setTextureCubeArrayData not supported in WebGL2.")}setTextureCubeFaceData(e,t,n){void 0===n&&(n=0),Array.isArray(e)&&e.length>1&&!1!==this.props.mipmaps&&d.R.warn(this.id+" has mipmap and multiple LODs.")(),this.bind(),this.unbind()}setImageDataForFace(e){const{face:t,width:n,height:i,pixels:r,data:o,format:s=y.RGBA,type:a=y.UNSIGNED_BYTE}=e,{gl:l}=this,c=r||o;this.bind(),c instanceof Promise?c.then((n=>this.setImageDataForFace(Object.assign({},e,{face:t,data:n,pixels:n})))):this.width||this.height?l.texImage2D(t,0,s,n,i,0,s,a,c):l.texImage2D(t,0,s,s,a,c)}_getImageDataMap(e){for(let t=0;t<He.g.CubeFaces.length;++t){const n=He.g.CubeFaces[t];e[n]&&(e[y.TEXTURE_CUBE_MAP_POSITIVE_X+t]=e[n],delete e[n])}return e}_setSamplerParameters(e){d.R.log(1,"texture sampler parameters",e)(),this.gl.bindTexture(this.glTarget,this.handle);for(const[t,n]of Object.entries(e)){const e=Number(t),i=n;switch(e){case y.TEXTURE_MIN_LOD:case y.TEXTURE_MAX_LOD:this.gl.texParameterf(this.glTarget,e,i);break;case y.TEXTURE_MIN_FILTER:case y.TEXTURE_WRAP_S:case y.TEXTURE_WRAP_T:this.gl.texParameteri(this.glTarget,e,i);break;case y.TEXTURE_MAX_ANISOTROPY_EXT:this.device.features.has("texture-filterable-anisotropic-webgl")&&this.gl.texParameteri(this.glTarget,e,i);break;default:this.gl.texParameteri(this.glTarget,e,i)}}this.gl.bindTexture(this.glTarget,null)}_setMipLevel(e,t,n,i){if(void 0===i&&(i=0),He.g.isExternalImage(n))!function(e,t,n){const{dimension:i,width:r,height:o,depth:s=0,level:a=0}=n,{x:l=0,y:c=0,z:u=0}=n,{glFormat:d,glType:h}=n,_=ot(n.glTarget,i,s);switch(i){case"2d-array":case"3d":e.texSubImage3D(_,a,l,c,u,r,o,s,d,h,t);break;case"2d":case"cube":e.texSubImage2D(_,a,l,c,r,o,d,h,t);break;default:throw new Error(i)}}(this.device.gl,n,{...this,depth:e,level:t});else{if(!this.isTextureLevelData(n))throw new Error("Texture: invalid image data");rt(this.device.gl,n.data,{...this,depth:e,level:t})}}getActiveUnit(){return this.gl.getParameter(y.ACTIVE_TEXTURE)-y.TEXTURE0}bind(e){const{gl:t}=this;return void 0!==e&&(this.textureUnit=e,t.activeTexture(t.TEXTURE0+e)),t.bindTexture(this.glTarget,this.handle),e}unbind(e){const{gl:t}=this;return void 0!==e&&(this.textureUnit=e,t.activeTexture(t.TEXTURE0+e)),t.bindTexture(this.glTarget,null),e}}class at extends Xe{constructor(e,t){super(e,t),this.colorAttachments=[],this.depthStencilAttachment=null;const n=null===t.handle;if(this.device=e,this.gl=e.gl,this.handle=this.props.handle||n?this.props.handle:this.gl.createFramebuffer(),!n){e.setSpectorMetadata(this.handle,{id:this.props.id,props:this.props}),this.autoCreateAttachmentTextures();const n=this.gl.bindFramebuffer(y.FRAMEBUFFER,this.handle);for(let e=0;e<this.colorAttachments.length;++e){const t=this.colorAttachments[e],n=y.COLOR_ATTACHMENT0+e;t&&this._attachTexture(n,t)}if(this.depthStencilAttachment&&this._attachTexture(function(e){const t=Oe[e];if(null==t||!t.attachment)throw new Error(e+" is not a depth stencil format");return t.attachment}(this.depthStencilAttachment.props.format),this.depthStencilAttachment),!1!==t.check){const e=this.gl.checkFramebufferStatus(y.FRAMEBUFFER);if(e!==y.FRAMEBUFFER_COMPLETE)throw new Error("Framebuffer "+function(e){switch(e){case y.FRAMEBUFFER_COMPLETE:return"success";case y.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"Mismatched attachments";case y.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"No attachments";case y.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"Height/width mismatch";case y.FRAMEBUFFER_UNSUPPORTED:return"Unsupported or split attachments";case y.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:return"Samples mismatch";default:return""+e}}(e))}this.gl.bindFramebuffer(y.FRAMEBUFFER,n)}}destroy(){super.destroy(),this.destroyed||null===this.handle||this.gl.deleteFramebuffer(this.handle)}createDepthStencilTexture(e){return new st(this.device,{id:this.id+"-depth-stencil",format:e,width:this.width,height:this.height,mipmaps:!1})}_attachTexture(e,t){this._attachTextureView(e,t)}_attachTextureView(e,t){const{gl:n}=this.device,{texture:i}=t,r=t.props.baseMipLevel,o=t.props.baseArrayLayer;switch(n.bindTexture(i.glTarget,i.handle),i.glTarget){case y.TEXTURE_2D_ARRAY:case y.TEXTURE_3D:n.framebufferTextureLayer(y.FRAMEBUFFER,e,i.glTarget,r,o);break;case y.TEXTURE_CUBE_MAP:const t=function(e){return e<y.TEXTURE_CUBE_MAP_POSITIVE_X?e+y.TEXTURE_CUBE_MAP_POSITIVE_X:e}(o);n.framebufferTexture2D(y.FRAMEBUFFER,e,t,i.handle,r);break;case y.TEXTURE_2D:n.framebufferTexture2D(y.FRAMEBUFFER,e,y.TEXTURE_2D,i.handle,r);break;default:throw new Error("Illegal texture type")}n.bindTexture(i.glTarget,null)}}class lt extends F{constructor(e,t){super(t),this.format="rgba8unorm",this.depthStencilFormat="depth24plus",this._framebuffer=null,this.device=e,this.presentationSize=[-1,-1],this._setAutoCreatedCanvasId(this.device.id+"-canvas"),this.update()}getCurrentFramebuffer(){return this.update(),this._framebuffer=this._framebuffer||new at(this.device,{handle:null}),this._framebuffer}update(){const e=this.getPixelSize();(e[0]!==this.presentationSize[0]||e[1]!==this.presentationSize[1])&&(this.presentationSize=e,this.resize())}resize(e){if(this.device.gl)if(this.canvas){const t=this.getDevicePixelRatio(null==e?void 0:e.useDevicePixels);this.setDevicePixelRatio(t,e)}else;}commit(){}}async function ct(e,t){const n=document.getElementsByTagName("head")[0];if(!n)throw new Error("loadScript");const i=document.createElement("script");return i.setAttribute("type","text/javascript"),i.setAttribute("src",e),t&&(i.id=t),new Promise(((t,r)=>{i.onload=t,i.onerror=t=>r(new Error("Unable to load script '"+e+"': "+t)),n.appendChild(i)}))}const ut={spector:d.R.get("spector")||d.R.get("inspect")};let dt=null,ht=!1;function _t(e){return e.luma=e.luma||{},e.luma}function ft(e,t){return void 0===t&&(t={}),t.debug?function(e,t){if(!globalThis.WebGLDebugUtils)return d.R.warn("webgl-debug not loaded")(),e;const n=_t(e);if(n.debugContext)return n.debugContext;globalThis.WebGLDebugUtils.init({...y,...e});const i=globalThis.WebGLDebugUtils.makeDebugContext(e,Et.bind(null,t),gt.bind(null,t));for(const s in y)s in i||"number"!=typeof y[s]||(i[s]=y[s]);class r{}Object.setPrototypeOf(i,Object.getPrototypeOf(e)),Object.setPrototypeOf(r,i);const o=Object.create(r);return n.realContext=e,n.debugContext=o,o.debug=!0,o}(e,t):function(e){const t=_t(e);return t.realContext?t.realContext:e}(e)}function pt(e,t){t=Array.from(t).map((e=>void 0===e?"undefined":e));let n=globalThis.WebGLDebugUtils.glFunctionArgsToString(e,t);return n=n.slice(0,100)+(n.length>100?"...":""),"gl."+e+"("+n+")"}function Et(e,t,n,i){i=Array.from(i).map((e=>void 0===e?"undefined":e));const r=globalThis.WebGLDebugUtils.glEnumToString(t)+" in gl."+n+"("+globalThis.WebGLDebugUtils.glFunctionArgsToString(n,i)+")";if(d.R.error(r)(),e.throwOnError)throw new Error(r)}function gt(e,t,n){let i="";if(d.R.level>=1&&(i=pt(t,n),d.R.log(1,i)()),e.break&&e.break.length>0){i=i||pt(t,n);e.break.every((e=>-1!==i.indexOf(e)))}for(const r of n)if(void 0===r){if(i=i||pt(t,n),e.throwOnError)throw new Error("Undefined argument: "+i);d.R.error("Undefined argument: "+i)()}}class mt extends E.h{constructor(e,t){void 0===t&&(t={}),super(e,t),this.glIndexType=y.UNSIGNED_SHORT,this.device=e,this.gl=this.device.gl;const n="object"==typeof t?t.handle:void 0;this.handle=n||this.gl.createBuffer(),e.setSpectorMetadata(this.handle,{...this.props,data:typeof this.props.data}),this.glTarget=function(e){if(e&E.h.INDEX)return y.ELEMENT_ARRAY_BUFFER;if(e&E.h.VERTEX)return y.ARRAY_BUFFER;if(e&E.h.UNIFORM)return y.UNIFORM_BUFFER;return y.ARRAY_BUFFER}(this.props.usage),this.glUsage=function(e){if(e&E.h.INDEX)return y.STATIC_DRAW;if(e&E.h.VERTEX)return y.STATIC_DRAW;if(e&E.h.UNIFORM)return y.DYNAMIC_DRAW;return y.STATIC_DRAW}(this.props.usage),this.glIndexType="uint32"===this.props.indexType?y.UNSIGNED_INT:y.UNSIGNED_SHORT,t.data?this._initWithData(t.data,t.byteOffset,t.byteLength):this._initWithByteLength(t.byteLength||0)}_initWithData(e,t,n){void 0===t&&(t=0),void 0===n&&(n=e.byteLength+t);const i=this.glTarget;this.gl.bindBuffer(i,this.handle),this.gl.bufferData(i,n,this.glUsage),this.gl.bufferSubData(i,t,e),this.gl.bindBuffer(i,null),this.bytesUsed=n,this.byteLength=n,this._setDebugData(e,t,n),this.trackAllocatedMemory(n)}_initWithByteLength(e){let t=e;0===e&&(t=new Float32Array(0));const n=this.glTarget;return this.gl.bindBuffer(n,this.handle),this.gl.bufferData(n,t,this.glUsage),this.gl.bindBuffer(n,null),this.bytesUsed=e,this.byteLength=e,this._setDebugData(null,0,e),this.trackAllocatedMemory(e),this}destroy(){!this.destroyed&&this.handle&&(this.removeStats(),this.trackDeallocatedMemory(),this.gl.deleteBuffer(this.handle),this.destroyed=!0,this.handle=null)}write(e,t){void 0===t&&(t=0);const n=y.COPY_WRITE_BUFFER;this.gl.bindBuffer(n,this.handle),this.gl.bufferSubData(n,t,e),this.gl.bindBuffer(n,null),this._setDebugData(e,t,e.byteLength)}async readAsync(e,t){return void 0===e&&(e=0),this.readSyncWebGL(e,t)}readSyncWebGL(e,t){var n;void 0===e&&(e=0),t=null!=(n=t)?n:this.byteLength-e;const i=new Uint8Array(t);return this.gl.bindBuffer(y.COPY_READ_BUFFER,this.handle),this.gl.getBufferSubData(y.COPY_READ_BUFFER,e,i,0,t),this.gl.bindBuffer(y.COPY_READ_BUFFER,null),this._setDebugData(i,e,t),i}}var Rt=n(7468);function At(e){const t=e.toLowerCase();return["warning","error","info"].includes(t)?t:"info"}class Tt extends Rt.M{constructor(e,t){switch(super(e,t),this.device=e,this.props.stage){case"vertex":this.handle=this.props.handle||this.device.gl.createShader(y.VERTEX_SHADER);break;case"fragment":this.handle=this.props.handle||this.device.gl.createShader(y.FRAGMENT_SHADER);break;default:throw new Error(this.props.stage)}this._compile(this.source)}destroy(){this.handle&&(this.removeStats(),this.device.gl.deleteShader(this.handle),this.destroyed=!0)}async getCompilationInfo(){return await this._waitForCompilationComplete(),this.getCompilationInfoSync()}getCompilationInfoSync(){const e=this.device.gl.getShaderInfoLog(this.handle);return e?function(e){const t=e.split(/\r?\n/),n=[];for(const i of t){if(i.length<=1)continue;const e=i.split(":");if(2===e.length){const[t,i]=e;n.push({message:i.trim(),type:At(t),lineNum:0,linePos:0});continue}const[t,r,o,...s]=e;let a=parseInt(o,10);isNaN(a)&&(a=0);let l=parseInt(r,10);isNaN(l)&&(l=0),n.push({message:s.join(":").trim(),type:At(t),lineNum:a,linePos:l})}return n}(e):[]}getTranslatedSource(){const e=this.device.getExtension("WEBGL_debug_shaders").WEBGL_debug_shaders;return(null==e?void 0:e.getTranslatedShaderSource(this.handle))||null}async _compile(e){e=(e=>e.startsWith("#version ")?e:"#version 100\n"+e)(e);const{gl:t}=this.device;if(t.shaderSource(this.handle,e),t.compileShader(this.handle),0!==d.R.level){if(this.device.features.has("compilation-status-async-webgl"))d.R.once(1,"Shader compilation is asynchronous")(),await this._waitForCompilationComplete(),d.R.info(2,"Shader "+this.id+" - async compilation complete: "+this.compilationStatus)(),this._getCompilationStatus(),this.debugShader();else if(this._getCompilationStatus(),this.debugShader(),"error"===this.compilationStatus)throw new Error("GLSL compilation errors in "+this.props.stage+" shader "+this.props.id)}else this.compilationStatus="pending"}async _waitForCompilationComplete(){const e=async e=>await new Promise((t=>setTimeout(t,e)));if(!this.device.features.has("compilation-status-async-webgl"))return void await e(10);const{gl:t}=this.device;for(;;){if(t.getShaderParameter(this.handle,y.COMPLETION_STATUS_KHR))return;await e(10)}}_getCompilationStatus(){this.compilationStatus=this.device.gl.getShaderParameter(this.handle,y.COMPILE_STATUS)?"success":"error"}}let vt;vt=Symbol.toStringTag;class St extends Ge.F{get[vt](){return"RenderPass"}constructor(e,t){super(e,t,St.defaultProps)}}St.defaultProps={...Ge.F.defaultProps,framebuffer:null,parameters:void 0,clearColor:[0,0,0,0],clearDepth:1,clearStencil:0,depthReadOnly:!1,stencilReadOnly:!1,discard:!1,occlusionQuerySet:void 0,timestampQuerySet:void 0,beginTimestampIndex:void 0,endTimestampIndex:void 0};const Ct=6144,bt=[1,2,4,8];class It extends St{constructor(e,t){super(e,t),this.device=e,ne(this.device.gl),this.setParameters(this.props.parameters),this.clear()}end(){ie(this.device.gl)}pushDebugGroup(e){}popDebugGroup(){}insertDebugMarker(e){}setParameters(e){void 0===e&&(e={});const t={...this.glParameters};t.framebuffer=this.props.framebuffer||null,this.props.depthReadOnly&&(t.depthMask=!this.props.depthReadOnly),t.stencilMask=this.props.stencilReadOnly?0:1,t[y.RASTERIZER_DISCARD]=this.props.discard,e.viewport&&(e.viewport.length>=6?(t.viewport=e.viewport.slice(0,4),t.depthRange=[e.viewport[4],e.viewport[5]]):t.viewport=e.viewport),e.scissorRect&&(t.scissorTest=!0,t.scissor=e.scissorRect),e.blendConstant&&(t.blendColor=e.blendConstant),e.stencilReference&&(console.warn("RenderPassParameters.stencilReference not yet implemented in WebGL"),e[y.STENCIL_REF]=e.stencilReference),e.colorMask&&(t.colorMask=bt.map((t=>Boolean(t&e.colorMask)))),this.glParameters=t,Z(this.device.gl,t)}beginOcclusionQuery(e){const t=this.props.occlusionQuerySet;null==t||t.beginOcclusionQuery()}endOcclusionQuery(){const e=this.props.occlusionQuerySet;null==e||e.endOcclusionQuery()}clear(){const e={...this.glParameters};let t=0;!1!==this.props.clearColor&&(t|=16384,e.clearColor=this.props.clearColor),!1!==this.props.clearDepth&&(t|=256,e.clearDepth=this.props.clearDepth),!1!==this.props.clearStencil&&(t|=1024,e.clearStencil=this.props.clearStencil),0!==t&&ke(this.device.gl,e,(()=>{this.device.gl.clear(t)}))}clearColorBuffer(e,t){void 0===e&&(e=0),void 0===t&&(t=[0,0,0,0]),ke(this.device.gl,{framebuffer:this.props.framebuffer},(()=>{switch(t.constructor){case Int32Array:this.device.gl.clearBufferiv(Ct,e,t);break;case Uint32Array:this.device.gl.clearBufferuiv(Ct,e,t);break;case Float32Array:default:this.device.gl.clearBufferfv(Ct,e,t)}}))}}var Nt=n(3145);const Lt="Failed to deduce GL constant from typed array";function Pt(e,t){const{clamped:n=!0}=t||{};switch(e){case y.FLOAT:return Float32Array;case y.UNSIGNED_SHORT:case y.UNSIGNED_SHORT_5_6_5:case y.UNSIGNED_SHORT_4_4_4_4:case y.UNSIGNED_SHORT_5_5_5_1:return Uint16Array;case y.UNSIGNED_INT:return Uint32Array;case y.UNSIGNED_BYTE:return n?Uint8ClampedArray:Uint8Array;case y.BYTE:return Int8Array;case y.SHORT:return Int16Array;case y.INT:return Int32Array;default:throw new Error("Failed to deduce typed array type from GL constant")}}const Mt={offset:0,stride:0,type:y.FLOAT,size:1,divisor:0,normalized:!1,integer:!1};class Ot{static getBytesPerElement(e){return Pt(e.type||y.FLOAT).BYTES_PER_ELEMENT}static getBytesPerVertex(e){return Pt(e.type||y.FLOAT).BYTES_PER_ELEMENT*e.size}static resolve(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return new Ot(...[Mt,...t])}constructor(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];t.forEach((e=>this._assign(e))),Object.freeze(this)}toString(){return JSON.stringify(this)}get BYTES_PER_ELEMENT(){return Ot.getBytesPerElement(this)}get BYTES_PER_VERTEX(){return Ot.getBytesPerVertex(this)}_assign(e){return void 0===e&&(e={}),void 0!==e.type&&(this.type=e.type,e.type!==y.INT&&e.type!==y.UNSIGNED_INT||(this.integer=!0)),void 0!==e.size&&(this.size=e.size),void 0!==e.offset&&(this.offset=e.offset),void 0!==e.stride&&(this.stride=e.stride),void 0!==e.normalize&&(this.normalized=e.normalize),void 0!==e.normalized&&(this.normalized=e.normalized),void 0!==e.integer&&(this.integer=e.integer),void 0!==e.divisor&&(this.divisor=e.divisor),void 0!==e.buffer&&(this.buffer=e.buffer),void 0!==e.index&&("boolean"==typeof e.index?this.index=e.index?1:0:this.index=e.index),void 0!==e.instanced&&(this.divisor=e.instanced?1:0),void 0!==e.isInstanced&&(this.divisor=e.isInstanced?1:0),void 0===this.offset&&delete this.offset,void 0===this.stride&&delete this.stride,void 0===this.type&&delete this.type,void 0===this.size&&delete this.size,void 0===this.divisor&&delete this.divisor,void 0===this.normalized&&delete this.normalized,void 0===this.integer&&delete this.integer,void 0===this.buffer&&delete this.buffer,void 0===this.index&&delete this.index,this}}const Ft=[y.SAMPLER_2D,y.SAMPLER_CUBE,y.SAMPLER_3D,y.SAMPLER_2D_SHADOW,y.SAMPLER_2D_ARRAY,y.SAMPLER_2D_ARRAY_SHADOW,y.SAMPLER_CUBE_SHADOW,y.INT_SAMPLER_2D,y.INT_SAMPLER_3D,y.INT_SAMPLER_CUBE,y.INT_SAMPLER_2D_ARRAY,y.UNSIGNED_INT_SAMPLER_2D,y.UNSIGNED_INT_SAMPLER_3D,y.UNSIGNED_INT_SAMPLER_CUBE,y.UNSIGNED_INT_SAMPLER_2D_ARRAY],Dt={[y.FLOAT]:[y.FLOAT,1,"float","f32","float32"],[y.FLOAT_VEC2]:[y.FLOAT,2,"vec2","vec2<f32>","float32x2"],[y.FLOAT_VEC3]:[y.FLOAT,3,"vec3","vec3<f32>","float32x3"],[y.FLOAT_VEC4]:[y.FLOAT,4,"vec4","vec4<f32>","float32x4"],[y.INT]:[y.INT,1,"int","i32","sint32"],[y.INT_VEC2]:[y.INT,2,"ivec2","vec2<i32>","sint32x2"],[y.INT_VEC3]:[y.INT,3,"ivec3","vec3<i32>","sint32x3"],[y.INT_VEC4]:[y.INT,4,"ivec4","vec4<i32>","sint32x4"],[y.UNSIGNED_INT]:[y.UNSIGNED_INT,1,"uint","u32","uint32"],[y.UNSIGNED_INT_VEC2]:[y.UNSIGNED_INT,2,"uvec2","vec2<u32>","uint32x2"],[y.UNSIGNED_INT_VEC3]:[y.UNSIGNED_INT,3,"uvec3","vec3<u32>","uint32x3"],[y.UNSIGNED_INT_VEC4]:[y.UNSIGNED_INT,4,"uvec4","vec4<u32>","uint32x4"],[y.BOOL]:[y.FLOAT,1,"bool","f32","float32"],[y.BOOL_VEC2]:[y.FLOAT,2,"bvec2","vec2<f32>","float32x2"],[y.BOOL_VEC3]:[y.FLOAT,3,"bvec3","vec3<f32>","float32x3"],[y.BOOL_VEC4]:[y.FLOAT,4,"bvec4","vec4<f32>","float32x4"],[y.FLOAT_MAT2]:[y.FLOAT,8,"mat2","mat2x2<f32>"],[y.FLOAT_MAT2x3]:[y.FLOAT,8,"mat2x3","mat2x3<f32>"],[y.FLOAT_MAT2x4]:[y.FLOAT,8,"mat2x4","mat2x4<f32>"],[y.FLOAT_MAT3x2]:[y.FLOAT,12,"mat3x2","mat3x2<f32>"],[y.FLOAT_MAT3]:[y.FLOAT,12,"mat3","mat3x3<f32>"],[y.FLOAT_MAT3x4]:[y.FLOAT,12,"mat3x4","mat3x4<f32>"],[y.FLOAT_MAT4x2]:[y.FLOAT,16,"mat4x2","mat4x2<f32>"],[y.FLOAT_MAT4x3]:[y.FLOAT,16,"mat4x3","mat4x3<f32>"],[y.FLOAT_MAT4]:[y.FLOAT,16,"mat4","mat4x4<f32>"]};function Bt(e){const t=Dt[e];if(!t)throw new Error("uniform");const[n,i,,r]=t;return{format:r,components:i,glType:n}}function yt(e){const t=Dt[e];if(!t)throw new Error("attribute");const[,n,,i,r]=t;return{attributeType:i,vertexFormat:r,components:n}}function xt(e,t){const n={attributes:[],bindings:[]};n.attributes=function(e,t){const n=[],i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const i=e.getActiveAttrib(t,r);if(!i)throw new Error("activeInfo");const{name:o,type:s}=i,a=e.getAttribLocation(t,o);if(a>=0){const{attributeType:e}=yt(s),t=/instance/i.test(o)?"instance":"vertex";n.push({name:o,location:a,stepMode:t,type:e})}}return n.sort(((e,t)=>e.location-t.location)),n}(e,t);const i=function(e,t){const n=(n,i)=>e.getActiveUniformBlockParameter(t,n,i),i=[],r=e.getProgramParameter(t,y.ACTIVE_UNIFORM_BLOCKS);for(let o=0;o<r;o++){const r={name:e.getActiveUniformBlockName(t,o)||"",location:n(o,y.UNIFORM_BLOCK_BINDING),byteLength:n(o,y.UNIFORM_BLOCK_DATA_SIZE),vertex:n(o,y.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),fragment:n(o,y.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),uniformCount:n(o,y.UNIFORM_BLOCK_ACTIVE_UNIFORMS),uniforms:[]},s=n(o,y.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)||[],a=e.getActiveUniforms(t,s,y.UNIFORM_TYPE),l=e.getActiveUniforms(t,s,y.UNIFORM_SIZE),c=e.getActiveUniforms(t,s,y.UNIFORM_OFFSET),u=e.getActiveUniforms(t,s,y.UNIFORM_ARRAY_STRIDE);for(let n=0;n<r.uniformCount;++n){const i=e.getActiveUniform(t,s[n]);if(!i)throw new Error("activeInfo");r.uniforms.push({name:i.name,format:Bt(a[n]).format,type:a[n],arrayLength:l[n],byteOffset:c[n],byteStride:u[n]})}i.push(r)}return i.sort(((e,t)=>e.location-t.location)),i}(e,t);for(const l of i){const e=l.uniforms.map((e=>({name:e.name,format:e.format,byteOffset:e.byteOffset,byteStride:e.byteStride,arrayLength:e.arrayLength})));n.bindings.push({type:"uniform",name:l.name,location:l.location,visibility:(l.vertex?1:0)&(l.fragment?2:0),minBindingSize:l.byteLength,uniforms:e})}const r=function(e,t){const n=[],i=e.getProgramParameter(t,y.ACTIVE_UNIFORMS);for(let r=0;r<i;r++){const i=e.getActiveUniform(t,r);if(!i)throw new Error("activeInfo");const{name:o,size:s,type:a}=i,{name:l,isArray:c}=Gt(o);let u=e.getUniformLocation(t,l);const d={location:u,name:l,size:s,type:a,isArray:c};if(n.push(d),d.size>1)for(let r=0;r<d.size;r++){const i=l+"["+r+"]";u=e.getUniformLocation(t,i);const o={...d,name:i,location:u};n.push(o)}}return n}(e,t);let o=0;for(const l of r)if(s=l.type,Ft.includes(s)){const{viewDimension:e,sampleType:t}=wt(l.type);n.bindings.push({type:"texture",name:l.name,location:o,viewDimension:e,sampleType:t}),l.textureUnit=o,o+=1}var s;r.length&&(n.uniforms=r);const a=function(e,t){const n=[],i=e.getProgramParameter(t,y.TRANSFORM_FEEDBACK_VARYINGS);for(let r=0;r<i;r++){const i=e.getTransformFeedbackVarying(t,r);if(!i)throw new Error("activeInfo");const{name:o,type:s,size:a}=i,{glType:l,components:c}=Bt(s),u={location:r,name:o,accessor:new Ot({type:l,size:a*c})};n.push(u)}return n.sort(((e,t)=>e.location-t.location)),n}(e,t);return null!=a&&a.length&&(n.varyings=a),n}const Ut={[y.SAMPLER_2D]:["2d","float"],[y.SAMPLER_CUBE]:["cube","float"],[y.SAMPLER_3D]:["3d","float"],[y.SAMPLER_2D_SHADOW]:["3d","depth"],[y.SAMPLER_2D_ARRAY]:["2d-array","float"],[y.SAMPLER_2D_ARRAY_SHADOW]:["2d-array","depth"],[y.SAMPLER_CUBE_SHADOW]:["cube","float"],[y.INT_SAMPLER_2D]:["2d","sint"],[y.INT_SAMPLER_3D]:["3d","sint"],[y.INT_SAMPLER_CUBE]:["cube","sint"],[y.INT_SAMPLER_2D_ARRAY]:["2d-array","uint"],[y.UNSIGNED_INT_SAMPLER_2D]:["2d","uint"],[y.UNSIGNED_INT_SAMPLER_3D]:["3d","uint"],[y.UNSIGNED_INT_SAMPLER_CUBE]:["cube","uint"],[y.UNSIGNED_INT_SAMPLER_2D_ARRAY]:["2d-array","uint"]};function wt(e){const t=Ut[e];if(!t)throw new Error("sampler");const[n,i]=t;return{viewDimension:n,sampleType:i}}function Gt(e){if("]"!==e[e.length-1])return{name:e,length:1,isArray:!1};const t=/([^[]*)(\[[0-9]+\])?/.exec(e);if(!t||t.length<2)throw new Error("Failed to parse GLSL uniform name "+e);return{name:t[1],length:t[2]?1:0,isArray:Boolean(t[2])}}function Ht(e,t,n,i){const r=e;let o=i;!0===o&&(o=1),!1===o&&(o=0);const s="number"==typeof o?[o]:o;switch(n){case y.SAMPLER_2D:case y.SAMPLER_CUBE:case y.SAMPLER_3D:case y.SAMPLER_2D_SHADOW:case y.SAMPLER_2D_ARRAY:case y.SAMPLER_2D_ARRAY_SHADOW:case y.SAMPLER_CUBE_SHADOW:case y.INT_SAMPLER_2D:case y.INT_SAMPLER_3D:case y.INT_SAMPLER_CUBE:case y.INT_SAMPLER_2D_ARRAY:case y.UNSIGNED_INT_SAMPLER_2D:case y.UNSIGNED_INT_SAMPLER_3D:case y.UNSIGNED_INT_SAMPLER_CUBE:case y.UNSIGNED_INT_SAMPLER_2D_ARRAY:if("number"!=typeof i)throw new Error("samplers must be set to integers");return e.uniform1i(t,i);case y.FLOAT:return e.uniform1fv(t,s);case y.FLOAT_VEC2:return e.uniform2fv(t,s);case y.FLOAT_VEC3:return e.uniform3fv(t,s);case y.FLOAT_VEC4:return e.uniform4fv(t,s);case y.INT:return e.uniform1iv(t,s);case y.INT_VEC2:return e.uniform2iv(t,s);case y.INT_VEC3:return e.uniform3iv(t,s);case y.INT_VEC4:return e.uniform4iv(t,s);case y.BOOL:return e.uniform1iv(t,s);case y.BOOL_VEC2:return e.uniform2iv(t,s);case y.BOOL_VEC3:return e.uniform3iv(t,s);case y.BOOL_VEC4:return e.uniform4iv(t,s);case y.UNSIGNED_INT:return r.uniform1uiv(t,s,1);case y.UNSIGNED_INT_VEC2:return r.uniform2uiv(t,s,2);case y.UNSIGNED_INT_VEC3:return r.uniform3uiv(t,s,3);case y.UNSIGNED_INT_VEC4:return r.uniform4uiv(t,s,4);case y.FLOAT_MAT2:return e.uniformMatrix2fv(t,!1,s);case y.FLOAT_MAT3:return e.uniformMatrix3fv(t,!1,s);case y.FLOAT_MAT4:return e.uniformMatrix4fv(t,!1,s);case y.FLOAT_MAT2x3:return r.uniformMatrix2x3fv(t,!1,s);case y.FLOAT_MAT2x4:return r.uniformMatrix2x4fv(t,!1,s);case y.FLOAT_MAT3x2:return r.uniformMatrix3x2fv(t,!1,s);case y.FLOAT_MAT3x4:return r.uniformMatrix3x4fv(t,!1,s);case y.FLOAT_MAT4x2:return r.uniformMatrix4x2fv(t,!1,s);case y.FLOAT_MAT4x3:return r.uniformMatrix4x3fv(t,!1,s)}throw new Error("Illegal uniform")}var Vt=n(6282);function Xt(e){const t={bindings:{},uniforms:{}};return Object.keys(e).forEach((n=>{const i=e[n];var r;r=i,null!==(0,Vt.H)(r)||"number"==typeof r||"boolean"==typeof r?t.uniforms[n]=i:t.bindings[n]=i})),t}class kt extends Nt.r{constructor(e,t){super(e,t),this.uniforms={},this.bindings={},this.varyings=null,this._uniformCount=0,this._uniformSetters={},this.device=e,this.handle=this.props.handle||this.device.gl.createProgram(),this.device.setSpectorMetadata(this.handle,{id:this.props.id}),this.vs=t.vs,this.fs=t.fs;const{varyings:n,bufferMode:i=y.SEPARATE_ATTRIBS}=t;n&&n.length>0&&(this.varyings=n,this.device.gl.transformFeedbackVaryings(this.handle,n,i)),this._linkShaders(),d.R.time(1,"RenderPipeline "+this.id+" - shaderLayout introspection")(),this.introspectedLayout=xt(this.device.gl,this.handle),d.R.timeEnd(1,"RenderPipeline "+this.id+" - shaderLayout introspection")(),this.shaderLayout=function(e,t){const n={...e,attributes:e.attributes.map((e=>({...e})))};for(const i of(null==t?void 0:t.attributes)||[]){const e=n.attributes.find((e=>e.name===i.name));e?(e.type=i.type||e.type,e.stepMode=i.stepMode||e.stepMode):d.R.warn("shader layout attribute "+i.name+" not present in shader")}return n}(this.introspectedLayout,t.shaderLayout)}destroy(){this.handle&&(this.device.gl.deleteProgram(this.handle),this.destroyed=!0)}setBindings(e,t){for(const[n,i]of Object.entries(e)){const e=this.shaderLayout.bindings.find((e=>e.name===n))||this.shaderLayout.bindings.find((e=>e.name===n+"Uniforms"));if(e){switch(i||d.R.warn('Unsetting binding "'+n+'" in render pipeline "'+this.id+'"')(),e.type){case"uniform":if(!(i instanceof mt||i.buffer instanceof mt))throw new Error("buffer value");break;case"texture":if(!(i instanceof it||i instanceof st||i instanceof at))throw new Error("texture value");break;case"sampler":d.R.warn("Ignoring sampler "+n)();break;default:throw new Error(e.type)}this.bindings[n]=i}else{const e=this.shaderLayout.bindings.map((e=>'"'+e.name+'"')).join(", ");null!=t&&t.disableWarnings||d.R.warn('Unknown binding "'+n+'" in render pipeline "'+this.id+'", expected one of '+e)()}}}draw(e){var t;const{renderPass:n,parameters:i=this.props.parameters,topology:r=this.props.topology,vertexArray:o,vertexCount:s,instanceCount:a,isInstanced:l=!1,firstVertex:c=0,transformFeedback:u}=e,h=function(e){switch(e){case"point-list":return y.POINTS;case"line-list":return y.LINES;case"line-strip":return y.LINE_STRIP;case"triangle-list":return y.TRIANGLES;case"triangle-strip":return y.TRIANGLE_STRIP;default:throw new Error(e)}}(r),_=Boolean(o.indexBuffer),f=null==(t=o.indexBuffer)?void 0:t.glIndexType;if("success"!==this.linkStatus)return d.R.info(2,"RenderPipeline:"+this.id+".draw() aborted - waiting for shader linking")(),!1;if(!this._areTexturesRenderable())return d.R.info(2,"RenderPipeline:"+this.id+".draw() aborted - textures not yet loaded")(),!1;this.device.gl.useProgram(this.handle),o.bindBeforeRender(n),u&&u.begin(this.props.topology),this._applyBindings(),this._applyUniforms();const p=n;return function(e,t,n,i){if(Ze(t))return i(e);const r=e;ne(r.gl);try{return We(e,t),Z(r.gl,n),i(e)}finally{ie(r.gl)}}(this.device,i,p.glParameters,(()=>{_&&l?this.device.gl.drawElementsInstanced(h,s||0,f,c,a||0):_?this.device.gl.drawElements(h,s||0,f,c):l?this.device.gl.drawArraysInstanced(h,c,s||0,a||0):this.device.gl.drawArrays(h,c,s||0),u&&u.end()})),o.unbindAfterRender(n),!0}setUniformsWebGL(e){const{bindings:t}=Xt(e);Object.keys(t).forEach((e=>{d.R.warn('Unsupported value "'+JSON.stringify(t[e])+'" used in setUniforms() for key '+e+". Use setBindings() instead?")()})),Object.assign(this.uniforms,e)}async _linkShaders(){const{gl:e}=this.device;if(e.attachShader(this.handle,this.vs.handle),e.attachShader(this.handle,this.fs.handle),d.R.time(4,"linkProgram for "+this.id)(),e.linkProgram(this.handle),d.R.timeEnd(4,"linkProgram for "+this.id)(),d.R.level,!this.device.features.has("compilation-status-async-webgl")){const e=this._getLinkStatus();return void this._reportLinkStatus(e)}d.R.once(1,"RenderPipeline linking is asynchronous")(),await this._waitForLinkComplete(),d.R.info(2,"RenderPipeline "+this.id+" - async linking complete: "+this.linkStatus)();const t=this._getLinkStatus();this._reportLinkStatus(t)}_reportLinkStatus(e){var t;if("success"!==e){if("error"===this.vs.compilationStatus)throw this.vs.debugShader(),new Error("Error during compilation of shader "+this.vs.id);if("error"===(null==(t=this.fs)?void 0:t.compilationStatus))throw this.fs.debugShader(),new Error("Error during compilation of shader "+this.fs.id);throw new Error("Error during "+e+": "+this.device.gl.getProgramInfoLog(this.handle))}}_getLinkStatus(){const{gl:e}=this.device;if(!e.getProgramParameter(this.handle,e.LINK_STATUS))return this.linkStatus="error","linking";e.validateProgram(this.handle);return e.getProgramParameter(this.handle,e.VALIDATE_STATUS)?(this.linkStatus="success","success"):(this.linkStatus="error","validation")}async _waitForLinkComplete(){const e=async e=>await new Promise((t=>setTimeout(t,e)));if(!this.device.features.has("compilation-status-async-webgl"))return void await e(10);const{gl:t}=this.device;for(;;){if(t.getProgramParameter(this.handle,y.COMPLETION_STATUS_KHR))return;await e(10)}}_areTexturesRenderable(){let e=!0;for(const t of this.shaderLayout.bindings)this.bindings[t.name]||this.bindings[t.name.replace(/Uniforms$/,"")]||(d.R.warn("Binding "+t.name+" not found in "+this.id)(),e=!1);for(const[,t]of Object.entries(this.bindings))t instanceof st&&t.update();return e}_applyBindings(){if("success"!==this.linkStatus)return;const{gl:e}=this.device;e.useProgram(this.handle);let t=0,n=0;for(const i of this.shaderLayout.bindings){const r=this.bindings[i.name]||this.bindings[i.name.replace(/Uniforms$/,"")];if(!r)throw new Error("No value for binding "+i.name+" in "+this.id);switch(i.type){case"uniform":const{name:o}=i,s=e.getUniformBlockIndex(this.handle,o);if(s===y.INVALID_INDEX)throw new Error("Invalid uniform block name "+o);e.uniformBlockBinding(this.handle,n,s),r instanceof mt?e.bindBufferBase(y.UNIFORM_BUFFER,n,r.handle):e.bindBufferRange(y.UNIFORM_BUFFER,n,r.buffer.handle,r.offset||0,r.size||r.buffer.byteLength-r.offset),n+=1;break;case"texture":if(!(r instanceof it||r instanceof st||r instanceof at))throw new Error("texture");let a;if(r instanceof it)a=r.texture;else if(r instanceof st)a=r;else{if(!(r instanceof at&&r.colorAttachments[0]instanceof it))throw new Error("No texture");d.R.warn("Passing framebuffer in texture binding may be deprecated. Use fbo.colorAttachments[0] instead")(),a=r.colorAttachments[0].texture}e.activeTexture(y.TEXTURE0+t),e.bindTexture(a.glTarget,a.handle),t+=1;break;case"sampler":break;case"storage":case"read-only-storage":throw new Error("binding type '"+i.type+"' not supported in WebGL")}}}_applyUniforms(){for(const t of this.shaderLayout.uniforms||[]){var e;const{name:n,location:i,type:r,textureUnit:o}=t,s=null!=(e=this.uniforms[n])?e:o;void 0!==s&&Ht(this.device.gl,i,r,s)}}}let Wt,Kt;Wt=Symbol.toStringTag;class zt extends Ge.F{get[Wt](){return"CommandEncoder"}constructor(e,t){super(e,t,zt.defaultProps)}}zt.defaultProps={...Ge.F.defaultProps,measureExecutionTime:void 0},Kt=Symbol.toStringTag;class Yt extends Ge.F{get[Kt](){return"CommandBuffer"}constructor(e,t){super(e,t,Yt.defaultProps)}}Yt.defaultProps={...Ge.F.defaultProps};class jt extends Yt{constructor(e){super(e,{}),this.commands=[],this.device=e}submitCommands(e){void 0===e&&(e=this.commands);for(const t of e)switch(t.name){case"copy-buffer-to-buffer":Qt(this.device,t.options);break;case"copy-buffer-to-texture":Zt(this.device,t.options);break;case"copy-texture-to-buffer":qt(this.device,t.options);break;case"copy-texture-to-texture":Jt(this.device,t.options)}}}function Qt(e,t){var n,i;const r=t.source,o=t.destination;e.gl.bindBuffer(y.COPY_READ_BUFFER,r.handle),e.gl.bindBuffer(y.COPY_WRITE_BUFFER,o.handle),e.gl.copyBufferSubData(y.COPY_READ_BUFFER,y.COPY_WRITE_BUFFER,null!=(n=t.sourceOffset)?n:0,null!=(i=t.destinationOffset)?i:0,t.size),e.gl.bindBuffer(y.COPY_READ_BUFFER,null),e.gl.bindBuffer(y.COPY_WRITE_BUFFER,null)}function Zt(e,t){throw new Error("Not implemented")}function qt(e,t){const{source:n,mipLevel:i=0,aspect:r="all",width:o=t.source.width,height:s=t.source.height,depthOrArrayLayers:a=0,origin:l=[0,0],destination:c,byteOffset:u=0,bytesPerRow:d,rowsPerImage:h}=t;if("all"!==r)throw new Error("not supported");if(0!==i||0!==a||d||h)throw new Error("not implemented");const{framebuffer:_,destroyFramebuffer:f}=$t(n);let p;try{const t=c,n=o||_.width,i=s||_.height,r=De(_.colorAttachments[0].texture.props.format),a=r.format,d=r.type;e.gl.bindBuffer(y.PIXEL_PACK_BUFFER,t.handle),p=e.gl.bindFramebuffer(y.FRAMEBUFFER,_.handle),e.gl.readPixels(l[0],l[1],n,i,a,d,u)}finally{e.gl.bindBuffer(y.PIXEL_PACK_BUFFER,null),void 0!==p&&e.gl.bindFramebuffer(y.FRAMEBUFFER,p),f&&_.destroy()}}function Jt(e,t){const{source:n,destinationMipLevel:i=0,origin:r=[0,0],destinationOrigin:o=[0,0],destination:s}=t;let{width:a=t.destination.width,height:l=t.destination.height}=t;const{framebuffer:c,destroyFramebuffer:u}=$t(n),[d,h]=r,[_,f,p]=o,E=e.gl.bindFramebuffer(y.FRAMEBUFFER,c.handle);let g,m=null;if(!(s instanceof st))throw new Error("invalid destination");switch(m=s,a=Number.isFinite(a)?a:m.width,l=Number.isFinite(l)?l:m.height,m.bind(0),g=m.glTarget,g){case y.TEXTURE_2D:case y.TEXTURE_CUBE_MAP:e.gl.copyTexSubImage2D(g,i,_,f,d,h,a,l);break;case y.TEXTURE_2D_ARRAY:case y.TEXTURE_3D:e.gl.copyTexSubImage3D(g,i,_,f,p,d,h,a,l)}m&&m.unbind(),e.gl.bindFramebuffer(y.FRAMEBUFFER,E),u&&c.destroy()}function $t(e){if(e instanceof He.g){const{width:t,height:n,id:i}=e;return{framebuffer:e.device.createFramebuffer({id:"framebuffer-for-"+i,width:t,height:n,colorAttachments:[e]}),destroyFramebuffer:!0}}return{framebuffer:e,destroyFramebuffer:!1}}class en extends zt{constructor(e,t){super(e,t),this.device=e,this.commandBuffer=new jt(e)}destroy(){}finish(){this.commandBuffer.submitCommands()}copyBufferToBuffer(e){this.commandBuffer.commands.push({name:"copy-buffer-to-buffer",options:e})}copyBufferToTexture(e){this.commandBuffer.commands.push({name:"copy-buffer-to-texture",options:e})}copyTextureToBuffer(e){this.commandBuffer.commands.push({name:"copy-texture-to-buffer",options:e})}copyTextureToTexture(e){this.commandBuffer.commands.push({name:"copy-texture-to-texture",options:e})}pushDebugGroup(e){}popDebugGroup(){}insertDebugMarker(e){}resolveQuerySet(e,t,n){}}var tn=n(7959);let nn;nn=Symbol.toStringTag;class rn extends Ge.F{get[nn](){return"VertexArray"}constructor(e,t){super(e,t,rn.defaultProps),this.indexBuffer=null,this.maxVertexAttributes=e.limits.maxVertexAttributes,this.attributes=new Array(this.maxVertexAttributes).fill(null);const{shaderLayout:n,bufferLayout:i}=t.renderPipeline||{};if(!n||!i)throw new Error("VertexArray");this.attributeInfos=(0,tn.M)(n,i,this.maxVertexAttributes)}setConstantWebGL(e,t){throw new Error("constant attributes not supported")}}rn.defaultProps={...Ge.F.defaultProps,renderPipeline:null};var on=n(1649),sn=n(7651);let an,ln,cn,un;an=Symbol.toStringTag;class dn extends rn{get[an](){return"VertexArray"}static isConstantAttributeZeroSupported(e){return"Chrome"===(0,sn.X)()}constructor(e,t){super(e,t),this.buffer=null,this.bufferValue=null,this.device=e,this.handle=this.device.gl.createVertexArray()}destroy(){var e;(super.destroy(),this.buffer)&&(null==(e=this.buffer)||e.destroy());this.handle&&(this.device.gl.deleteVertexArray(this.handle),this.handle=void 0)}setIndexBuffer(e){const t=e;if(t&&t.glTarget!==y.ELEMENT_ARRAY_BUFFER)throw new Error("Use .setBuffer()");this.device.gl.bindVertexArray(this.handle),this.device.gl.bindBuffer(y.ELEMENT_ARRAY_BUFFER,t?t.handle:null),this.indexBuffer=t,this.device.gl.bindVertexArray(null)}setBuffer(e,t){const n=t;if(n.glTarget===y.ELEMENT_ARRAY_BUFFER)throw new Error("Use .setIndexBuffer()");const{size:i,type:r,stride:o,offset:s,normalized:a,integer:l,divisor:c}=this._getAccessor(e);this.device.gl.bindVertexArray(this.handle),this.device.gl.bindBuffer(y.ARRAY_BUFFER,n.handle),l?this.device.gl.vertexAttribIPointer(e,i,r,o,s):this.device.gl.vertexAttribPointer(e,i,r,a,o,s),this.device.gl.bindBuffer(y.ARRAY_BUFFER,null),this.device.gl.enableVertexAttribArray(e),this.device.gl.vertexAttribDivisor(e,c||0),this.attributes[e]=n,this.device.gl.bindVertexArray(null)}setConstantWebGL(e,t){this._enable(e,!1),this.attributes[e]=t}bindBeforeRender(){this.device.gl.bindVertexArray(this.handle),this._applyConstantAttributes()}unbindAfterRender(){this.device.gl.bindVertexArray(null)}_applyConstantAttributes(){for(let e=0;e<this.maxVertexAttributes;++e){const t=this.attributes[e];ArrayBuffer.isView(t)&&this.device.setConstantAttributeWebGL(e,t)}}_getAccessor(e){const t=this.attributeInfos[e];if(!t)throw new Error("Unknown attribute location "+e);const n=ue(t.bufferDataType);return{size:t.bufferComponents,type:n,stride:t.byteStride,offset:t.byteOffset,normalized:t.normalized,integer:t.integer,divisor:"instance"===t.stepMode?1:0}}_enable(e,t){void 0===t&&(t=!0);const n=dn.isConstantAttributeZeroSupported(this.device);(t||(n||0!==e))&&(e=Number(e),this.device.gl.bindVertexArray(this.handle),t?this.device.gl.enableVertexAttribArray(e):this.device.gl.disableVertexAttribArray(e),this.device.gl.bindVertexArray(null))}getConstantBuffer(e,t){const n=function(e){if(Array.isArray(e))return new Float32Array(e);return e}(t),i=n.byteLength*e,r=n.length*e;if(this.buffer&&i!==this.buffer.byteLength)throw new Error("Buffer size is immutable, byte length "+i+" !== "+this.buffer.byteLength+".");let o=!this.buffer;if(this.buffer=this.buffer||this.device.createBuffer({byteLength:i}),o=o||!function(e,t){if(!e||!t||e.length!==t.length||e.constructor!==t.constructor)return!1;for(let n=0;n<e.length;++n)if(e[n]!==t[n])return!1;return!0}(n,this.bufferValue),o){const e=(0,on.X)(t.constructor,r);!function(e){const{target:t,source:n,start:i=0,count:r=1}=e,o=n.length,s=r*o;let a=0;for(let l=i;a<o;a++)t[l++]=n[a];for(;a<s;)a<s-a?(t.copyWithin(i+a,i,i+a),a*=2):(t.copyWithin(i+a,i,i+s-a),a=s);e.target}({target:e,source:n,start:0,count:r}),this.buffer.write(e),this.bufferValue=t}return this.buffer}}ln=Symbol.toStringTag;class hn extends Ge.F{get[ln](){return"TransformFeedback"}constructor(e,t){super(e,t,hn.defaultProps)}}hn.defaultProps={...Ge.F.defaultProps,layout:void 0,buffers:{}};class _n extends hn{constructor(e,t){super(e,t),this.buffers={},this.unusedBuffers={},this.bindOnUse=!0,this._bound=!1,this.device=e,this.gl=e.gl,this.handle=this.props.handle||this.gl.createTransformFeedback(),this.layout=this.props.layout,t.buffers&&this.setBuffers(t.buffers),Object.seal(this)}destroy(){this.gl.deleteTransformFeedback(this.handle),super.destroy()}begin(e){void 0===e&&(e="point-list"),this.gl.bindTransformFeedback(y.TRANSFORM_FEEDBACK,this.handle),this.bindOnUse&&this._bindBuffers(),this.gl.beginTransformFeedback(function(e){switch(e){case"point-list":return y.POINTS;case"line-list":case"line-strip":return y.LINES;case"triangle-list":case"triangle-strip":return y.TRIANGLES;default:throw new Error(e)}}(e))}end(){this.gl.endTransformFeedback(),this.bindOnUse&&this._unbindBuffers(),this.gl.bindTransformFeedback(y.TRANSFORM_FEEDBACK,null)}setBuffers(e){this.buffers={},this.unusedBuffers={},this.bind((()=>{for(const t in e)this.setBuffer(t,e[t])}))}setBuffer(e,t){const n=this._getVaryingIndex(e),{buffer:i,byteLength:r,byteOffset:o}=this._getBufferRange(t);if(n<0)return this.unusedBuffers[e]=i,void d.R.warn(this.id+" unusedBuffers varying buffer "+e)();this.buffers[n]={buffer:i,byteLength:r,byteOffset:o},this.bindOnUse||this._bindBuffer(n,i,o,r)}getBuffer(e){if(fn(e))return this.buffers[e]||null;const t=this._getVaryingIndex(e);return t>=0?this.buffers[t]:null}bind(e){if(void 0===e&&(e=this.handle),"function"!=typeof e)return this.gl.bindTransformFeedback(y.TRANSFORM_FEEDBACK,e),this;let t;return this._bound?t=e():(this.gl.bindTransformFeedback(y.TRANSFORM_FEEDBACK,this.handle),this._bound=!0,t=e(),this._bound=!1,this.gl.bindTransformFeedback(y.TRANSFORM_FEEDBACK,null)),t}unbind(){this.bind(null)}_getBufferRange(e){if(e instanceof mt)return{buffer:e,byteOffset:0,byteLength:e.byteLength};const{buffer:t,byteOffset:n=0,byteLength:i=e.buffer.byteLength}=e;return{buffer:t,byteOffset:n,byteLength:i}}_getVaryingIndex(e){if(fn(e))return Number(e);for(const t of this.layout.varyings)if(e===t.name)return t.location;return-1}_bindBuffers(){for(const e in this.buffers){const{buffer:t,byteLength:n,byteOffset:i}=this._getBufferRange(this.buffers[e]);this._bindBuffer(Number(e),t,i,n)}}_unbindBuffers(){for(const e in this.buffers)this.gl.bindBufferBase(y.TRANSFORM_FEEDBACK_BUFFER,Number(e),null)}_bindBuffer(e,t,n,i){void 0===n&&(n=0);const r=t&&t.handle;r&&void 0!==i?this.gl.bindBufferRange(y.TRANSFORM_FEEDBACK_BUFFER,e,r,n,i):this.gl.bindBufferBase(y.TRANSFORM_FEEDBACK_BUFFER,e,r)}}function fn(e){return"number"==typeof e?Number.isInteger(e):/^\d+$/.test(e)}cn=Symbol.toStringTag;class pn extends Ge.F{get[cn](){return"QuerySet"}constructor(e,t){super(e,t,pn.defaultProps)}}pn.defaultProps={...Ge.F.defaultProps,type:void 0,count:void 0},un=Symbol.toStringTag;class En extends pn{get[un](){return"Query"}constructor(e,t){if(super(e,t),this.target=null,this._queryPending=!1,this._pollingPromise=null,this.device=e,t.count>1)throw new Error("WebGL QuerySet can only have one value");this.handle=this.device.gl.createQuery(),Object.seal(this)}destroy(){this.device.gl.deleteQuery(this.handle)}beginTimestampQuery(){return this._begin(y.TIME_ELAPSED_EXT)}endTimestampQuery(){this._end()}beginOcclusionQuery(e){return this._begin(null!=e&&e.conservative?y.ANY_SAMPLES_PASSED_CONSERVATIVE:y.ANY_SAMPLES_PASSED)}endOcclusionQuery(){this._end()}beginTransformFeedbackQuery(){return this._begin(y.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN)}endTransformFeedbackQuery(){this._end()}async resolveQuery(){return[await this.pollQuery()]}_begin(e){this._queryPending||(this.target=e,this.device.gl.beginQuery(this.target,this.handle))}_end(){this._queryPending||this.target&&(this.device.gl.endQuery(this.target),this.target=null,this._queryPending=!0)}isResultAvailable(){if(!this._queryPending)return!1;const e=this.device.gl.getQueryParameter(this.handle,y.QUERY_RESULT_AVAILABLE);return e&&(this._queryPending=!1),e}isTimerDisjoint(){return this.device.gl.getParameter(y.GPU_DISJOINT_EXT)}getResult(){return this.device.gl.getQueryParameter(this.handle,y.QUERY_RESULT)}getTimerMilliseconds(){return this.getResult()/1e6}pollQuery(e){if(void 0===e&&(e=Number.POSITIVE_INFINITY),this._pollingPromise)return this._pollingPromise;let t=0;return this._pollingPromise=new Promise(((n,i)=>{const r=()=>{this.isResultAvailable()?(n(this.getResult()),this._pollingPromise=null):t++>e?(i("Timed out"),this._pollingPromise=null):requestAnimationFrame(r)};requestAnimationFrame(r)})),this._pollingPromise}}function gn(e){switch(e){case y.ALPHA:case y.R32F:case y.RED:return 1;case y.RG32F:case y.RG:return 2;case y.RGB:case y.RGB32F:return 3;case y.RGBA:case y.RGBA32F:return 4;default:return 0}}function mn(e,t){var n;const{sourceX:i=0,sourceY:r=0,sourceFormat:o=y.RGBA,sourceAttachment:s=y.COLOR_ATTACHMENT0}=t||{};let{target:a=null,sourceWidth:l,sourceHeight:c,sourceType:u}=t||{};const{framebuffer:d,deleteFramebuffer:h}=An(e),{gl:_,handle:f}=d;l=l||d.width,c=c||d.height;const p=s-y.COLOR_ATTACHMENT0;u=u||(null==(n=d.colorAttachments[p])||null==(n=n.texture)?void 0:n.glType)||y.UNSIGNED_BYTE,a=function(e,t,n,i,r){if(e)return e;const o=Pt(t=t||y.UNSIGNED_BYTE,{clamped:!1}),s=gn(n);return new o(i*r*s)}(a,u,o,l,c),u=u||function(e){switch(ArrayBuffer.isView(e)?e.constructor:e){case Float32Array:return y.FLOAT;case Uint16Array:return y.UNSIGNED_SHORT;case Uint32Array:return y.UNSIGNED_INT;case Uint8Array:case Uint8ClampedArray:return y.UNSIGNED_BYTE;case Int8Array:return y.BYTE;case Int16Array:return y.SHORT;case Int32Array:return y.INT;default:throw new Error(Lt)}}(a);const E=_.bindFramebuffer(y.FRAMEBUFFER,f);return _.readPixels(i,r,l,c,o,u,a),_.bindFramebuffer(y.FRAMEBUFFER,E||null),h&&d.destroy(),a}function Rn(e,t){const{target:n,sourceX:i=0,sourceY:r=0,sourceFormat:o=y.RGBA,targetByteOffset:s=0}=t||{};let{sourceWidth:a,sourceHeight:l,sourceType:c}=t||{};const{framebuffer:u,deleteFramebuffer:d}=An(e);a=a||u.width,l=l||u.height;const h=u;c=c||y.UNSIGNED_BYTE;let _=n;if(!_){const e=s+a*l*gn(o)*function(e){switch(e){case y.UNSIGNED_BYTE:return 1;case y.UNSIGNED_SHORT_5_6_5:case y.UNSIGNED_SHORT_4_4_4_4:case y.UNSIGNED_SHORT_5_5_5_1:return 2;case y.FLOAT:return 4;default:return 0}}(c);_=h.device.createBuffer({byteLength:e})}const f=e.device.createCommandEncoder();return f.copyTextureToBuffer({source:e,width:a,height:l,origin:[i,r],destination:_,byteOffset:s}),f.destroy(),d&&u.destroy(),_}function An(e){return e instanceof Xe?{framebuffer:e,deleteFramebuffer:!1}:{framebuffer:Tn(e),deleteFramebuffer:!0}}function Tn(e,t){const{device:n,width:i,height:r,id:o}=e;return n.createFramebuffer({...t,id:"framebuffer-for-"+o,width:i,height:r,colorAttachments:[e]})}class vn extends b{static isSupported(){return"undefined"!=typeof WebGL2RenderingContext}static attach(e){if(e instanceof vn)return e;if((null==e?void 0:e.device)instanceof b)return e.device;if(!function(e){if("undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext)return!0;return Boolean(e&&Number.isFinite(e._version))}(e))throw new Error("Invalid WebGL2RenderingContext");return new vn({gl:e})}static async create(e){var t;void 0===e&&(e={}),d.R.groupCollapsed(1,"WebGLDevice created")();const n=[];e.debug&&n.push(async function(){(0,u.B)()&&!globalThis.WebGLDebugUtils&&(globalThis.global=globalThis.global||globalThis,globalThis.global.module={},await ct("https://unpkg.com/webgl-debug@2.0.1/index.js"))}()),e.spector&&n.push(async function(e){if(!globalThis.SPECTOR)try{await ct("https://spectorcdn.babylonjs.com/spector.bundle.js")}catch(t){d.R.warn(String(t))}}()),"string"==typeof e.canvas&&n.push(F.pageLoaded);const i=await Promise.allSettled(n);for(const s of i)"rejected"===s.status&&d.R.error("Failed to initialize debug libraries "+s.reason)();if(d.R.probe(2,"DOM is loaded")(),null!=(t=e.gl)&&t.device)return d.R.warn("reattaching existing device")(),vn.attach(e.gl);const r=new vn(e),o="Created "+r.type+(r.debug?" debug":"")+" context: "+r.info.vendor+", "+r.info.renderer+" for canvas: "+r.canvasContext.id;return d.R.probe(1,o)(),d.R.table(1,r.info)(),d.R.groupEnd(1)(),r}constructor(e){var t,n;super({...e,id:e.id||"webgl-device"}),this.type="webgl",this.renderPass=null,this.debug=!1,this._canvasSizeInfo={clientWidth:0,clientHeight:0,devicePixelRatio:1},this._extensions={},this._polyfilled=!1;const i=null==(t=e.gl)?void 0:t.device;if(i)throw new Error("WebGL context already attached to device "+i.id);const r=(null==(n=e.gl)?void 0:n.canvas)||e.canvas;this.canvasContext=new lt(this,{...e,canvas:r}),this.lost=new Promise((e=>{this._resolveContextLost=e}));let o=e.gl||null;if(o||(o=function(e,t){t={...se,...t};let n=null;const i=e=>n=e.statusMessage||n;e.addEventListener("webglcontextcreationerror",i,!1);let r=null;if(r||(r=e.getContext("webgl2",t)),e.removeEventListener("webglcontextcreationerror",i,!1),!r)throw new Error("Failed to create WebGL context: "+(n||"Unknown error"));if(t.onContextLost){const{onContextLost:n}=t;e.addEventListener("webglcontextlost",(e=>n(e)),!1)}if(t.onContextRestored){const{onContextRestored:n}=t;e.addEventListener("webglcontextrestored",(e=>n(e)),!1)}return r}(this.canvasContext.canvas,{...e,onContextLost:e=>{var t;return null==(t=this._resolveContextLost)?void 0:t.call(this,{reason:"destroyed",message:"Entered sleep mode, or too many apps or browser tabs are using the GPU."})}})),!o)throw new Error("WebGL context creation failed");this.handle=o,this.gl=o,this.gl.device=this,this.gl._version=2,this.info=le(this.gl,this._extensions),this.limits=new we(this.gl),this.features=new Ue(this.gl,this._extensions,this.props.disabledFeatures),this.props.initalizeFeatures&&this.features.initializeFeatures(),this.canvasContext.resize();const{enable:s=!0,copyState:a=!1}=e;te(this.gl,{enable:s,copyState:a,log:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return d.R.log(1,...t)()}}),e.debug&&(this.gl=ft(this.gl,{...e,throwOnError:!0}),this.debug=!0,d.R.level=Math.max(d.R.level,1),d.R.warn("WebGL debug mode activated. Performance reduced.")()),e.spector&&(this.spectorJS=function(e){var t,n,i,r;if(null==(t=e={...ut,...e})||!t.spector)return null;if(!dt&&globalThis.SPECTOR&&(d.R.probe(1,"SPECTOR found and initialized")(),dt=new globalThis.SPECTOR.Spector,globalThis.luma&&(globalThis.luma.spector=dt)),!dt)return null;if(ht||(ht=!0,dt.spyCanvases(),null==(i=dt)||i.onCaptureStarted.add((e=>d.R.info("Spector capture started:",e)())),null==(r=dt)||r.onCapture.add((e=>{var t,n,i;d.R.info("Spector capture complete:",e)(),null==(t=dt)||t.getResultUI(),null==(n=dt)||n.resultView.display(),null==(i=dt)||i.resultView.addCapture(e)}))),null!=(n=e)&&n.canvas){var o,s;if("string"==typeof e.spector&&e.spector!==e.canvas.id)return dt;null==(o=dt)||o.startCapture(null==(s=e)?void 0:s.canvas,500),new Promise((e=>setTimeout(e,2e3))).then((e=>{var t;d.R.info("Spector capture stopped after 2 seconds")(),null==(t=dt)||t.stopCapture()}))}return dt}({...this.props,canvas:this.handle.canvas}))}destroy(){}get isLost(){return this.gl.isContextLost()}getSize(){return[this.gl.drawingBufferWidth,this.gl.drawingBufferHeight]}isTextureFormatSupported(e){return Fe(this.gl,e,this._extensions)}isTextureFormatFilterable(e){return function(e,t,n){if(!Fe(e,t,n))return!1;if(t.startsWith("depth")||t.startsWith("stencil"))return!1;try{if(A(t).signed)return!1}catch{return!1}return t.endsWith("32float")?Boolean(ae(e,"OES_texture_float_linear, extensions",n)):!t.endsWith("16float")||Boolean(ae(e,"OES_texture_half_float_linear, extensions",n))}(this.gl,e,this._extensions)}isTextureFormatRenderable(e){return function(e,t,n){return!!Fe(e,t,n)&&"number"!=typeof t}(this.gl,e,this._extensions)}createCanvasContext(e){throw new Error("WebGL only supports a single canvas")}createBuffer(e){const t=this._getBufferProps(e);return new mt(this,t)}_createTexture(e){return new st(this,e)}createExternalTexture(e){throw new Error("createExternalTexture() not implemented")}createSampler(e){return new tt(this,e)}createShader(e){return new Tt(this,e)}createFramebuffer(e){return new at(this,e)}createVertexArray(e){return new dn(this,e)}createTransformFeedback(e){return new _n(this,e)}createQuerySet(e){return new En(this,e)}createRenderPipeline(e){return new kt(this,e)}beginRenderPass(e){return new It(this,e)}createComputePipeline(e){throw new Error("ComputePipeline not supported in WebGL")}beginComputePass(e){throw new Error("ComputePass not supported in WebGL")}createCommandEncoder(e){return void 0===e&&(e={}),new en(this,e)}submit(){var e;null==(e=this.renderPass)||e.end(),this.renderPass=null}readPixelsToArrayWebGL(e,t){return mn(e,t)}readPixelsToBufferWebGL(e,t){return Rn(e,t)}setParametersWebGL(e){Z(this.gl,e)}getParametersWebGL(e){return q(this.gl,e)}withParametersWebGL(e,t){return ke(this.gl,e,t)}clearWebGL(e){!function(e,t){const{framebuffer:n=null,color:i=null,depth:r=null,stencil:o=null}=t||{},s={};n&&(s.framebuffer=n);let a=0;i&&(a|=16384,!0!==i&&(s.clearColor=i)),r&&(a|=256,!0!==r&&(s.clearDepth=r)),o&&(a|=1024,!0!==r&&(s.clearStencil=r));const l=e.gl;ke(l,s,(()=>{l.clear(a)}))}(this,e)}resetWebGL(){d.R.warn("WebGLDevice.resetWebGL is deprecated, use only for debugging")(),Z(this.gl,x)}loseDevice(){var e;let t=!1;const n=this.getExtension("WEBGL_lose_context").WEBGL_lose_context;return n&&(t=!0,n.loseContext()),null==(e=this._resolveContextLost)||e.call(this,{reason:"destroyed",message:"Application triggered context loss"}),t}pushState(){ne(this.gl)}popState(){ie(this.gl)}setSpectorMetadata(e,t){e.__SPECTOR_Metadata=t}getGLKey(e,t){t=t||this.gl2||this.gl;const n=Number(e);for(const i in t)if(t[i]===n)return"GL."+i;return String(e)}setConstantAttributeWebGL(e,t){const n=this.limits.maxVertexAttributes;this._constants=this._constants||new Array(n).fill(null);const i=this._constants[e];switch(i&&function(e,t){if(!e||!t||e.length!==t.length||e.constructor!==t.constructor)return!1;for(let n=0;n<e.length;++n)if(e[n]!==t[n])return!1;return!0}(i,t)&&d.R.info(1,"setConstantAttributeWebGL("+e+") could have been skipped, value unchanged")(),this._constants[e]=t,t.constructor){case Float32Array:!function(e,t,n){switch(n.length){case 1:e.gl.vertexAttrib1fv(t,n);break;case 2:e.gl.vertexAttrib2fv(t,n);break;case 3:e.gl.vertexAttrib3fv(t,n);break;case 4:e.gl.vertexAttrib4fv(t,n)}}(this,e,t);break;case Int32Array:!function(e,t,n){e.gl.vertexAttribI4iv(t,n)}(this,e,t);break;case Uint32Array:!function(e,t,n){e.gl.vertexAttribI4uiv(t,n)}(this,e,t);break;default:throw new Error("constant")}}getExtension(e){return ae(this.gl,e,this._extensions),this._extensions}}vn.type="webgl";class Sn extends E.h{constructor(e,t){super(e,t),this.device=e,this.byteLength=function(e){var t;return e.byteLength||(null==(t=e.data)?void 0:t.byteLength)||0}(t);const n=Boolean(t.data),i=4*Math.ceil(this.byteLength/4);this.handle=this.props.handle||this.device.handle.createBuffer({size:i,usage:this.props.usage||GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,mappedAtCreation:this.props.mappedAtCreation||n,label:this.props.id}),t.data&&this._writeMapped(t.data),n&&!t.mappedAtCreation&&this.handle.unmap()}destroy(){var e;null==(e=this.handle)||e.destroy(),this.handle=null}write(e,t){void 0===t&&(t=0),this.device.handle.queue.writeBuffer(this.handle,t,e.buffer,e.byteOffset,e.byteLength)}async readAsync(e,t){void 0===e&&(e=0),void 0===t&&(t=this.byteLength);const n=new Sn(this.device,{usage:E.h.MAP_READ|E.h.COPY_DST,byteLength:t}),i=this.device.handle.createCommandEncoder();i.copyBufferToBuffer(this.handle,e,n.handle,0,t),this.device.handle.queue.submit([i.finish()]),await n.handle.mapAsync(GPUMapMode.READ,e,t);const r=n.handle.getMappedRange().slice(0);return n.handle.unmap(),n.destroy(),new Uint8Array(r)}_writeMapped(e){const t=this.handle.getMappedRange();new e.constructor(t).set(e)}mapAsync(e,t,n){return void 0===t&&(t=0),this.handle.mapAsync(e,t,n)}getMappedRange(e,t){return void 0===e&&(e=0),this.handle.getMappedRange(e,t)}unmap(){this.handle.unmap()}}function Cn(e){if(e.includes("webgl"))throw new Error("webgl-only format");return e}class bn extends et.L{constructor(e,t){super(e,t),this.device=e;const n={...this.props};"comparison-sampler"!==n.type&&delete n.compare,this.handle=this.handle||this.device.handle.createSampler(n),this.handle.label=this.props.id}destroy(){this.handle=null}}class In extends nt.X{constructor(e,t){super(e,t),this.device=e,this.texture=t.texture,this.handle=this.handle||this.texture.handle.createView({format:t.format||this.texture.format,dimension:t.dimension||this.texture.dimension,aspect:t.aspect,baseMipLevel:t.baseMipLevel,mipLevelCount:t.mipLevelCount,baseArrayLayer:t.baseArrayLayer,arrayLayerCount:t.arrayLayerCount}),this.handle.label=this.props.id}destroy(){this.handle=null}}const Nn={"1d":"1d","2d":"2d","2d-array":"2d",cube:"2d","cube-array":"2d","3d":"3d"};class Ln extends He.g{constructor(e,t){super(e,t),this.height=1,this.width=1,this.device=e,t.data instanceof Promise?t.data.then((e=>{this.props={...this.props,data:e},this.initialize(this.props)})):this.initialize(t)}destroy(){var e;null==(e=this.handle)||e.destroy(),this.handle=null}createView(e){return new In(this.device,{...e,texture:this})}initialize(e){var t;this.handle=this.props.handle||this.createHandle(),(t=this.handle).label||(t.label=this.id),this.props.data&&this.setData({data:this.props.data}),this.width=this.handle.width,this.height=this.handle.height,this.sampler=e.sampler instanceof bn?e.sampler:new bn(this.device,e.sampler||{}),this.view=new In(this.device,{...this.props,texture:this})}createHandle(){var e,t;const n=this.props.width||(null==(e=this.props.data)?void 0:e.width)||1,i=this.props.height||(null==(t=this.props.data)?void 0:t.height)||1;return this.device.handle.createTexture({label:this.id,size:{width:n,height:i,depthOrArrayLayers:this.depth},usage:this.props.usage||He.g.TEXTURE|He.g.COPY_DST,dimension:Nn[this.dimension],format:Cn(this.format),mipLevelCount:this.mipLevels,sampleCount:this.props.samples})}createGPUTextureView(){return this.handle.createView({label:this.id})}setSampler(e){return this.sampler=e instanceof bn?e:new bn(this.device,e),this}setTexture1DData(e){throw new Error("not implemented")}setTexture2DData(e,t,n){throw new Error("not implemented")}setTexture3DData(e,t,n){throw new Error("not implemented")}setTextureCubeData(e,t){throw new Error("not implemented")}setTextureArrayData(e){throw new Error("not implemented")}setTextureCubeArrayData(e){throw new Error("not implemented")}setData(e){return this.setImage({source:e.data})}setImage(e){const{source:t,width:n=e.source.width,height:i=e.source.height,depth:r=1,sourceX:o=0,sourceY:s=0,mipLevel:a=0,x:l=0,y:c=0,z:u=0,aspect:d="all",colorSpace:h="srgb",premultipliedAlpha:_=!1}=e;return this.device.handle.queue.copyExternalImageToTexture({source:t,origin:[o,s]},{texture:this.handle,origin:[l,c,u],mipLevel:a,aspect:d,colorSpace:h,premultipliedAlpha:_},[n,i,r]),{width:n,height:i}}}let Pn;Pn=Symbol.toStringTag;class Mn extends Ge.F{get[Pn](){return"ExternalTexture"}constructor(e,t){super(e,t,Mn.defaultProps)}}Mn.defaultProps={...Ge.F.defaultProps,source:void 0,colorSpace:"srgb"};class On extends Mn{constructor(e,t){super(e,t),this.device=e,this.handle=this.props.handle||this.device.handle.importExternalTexture({source:t.source,colorSpace:t.colorSpace}),this.sampler=null}destroy(){this.handle=null}setSampler(e){return this.sampler=e instanceof bn?e:new bn(this.device,e),this}}class Fn extends Rt.M{constructor(e,t){super(e,t),this.device=e,this.device.handle.pushErrorScope("validation"),this.handle=this.props.handle||this.createHandle(),this.handle.label=this.props.id,this._checkCompilationError(this.device.handle.popErrorScope())}async _checkCompilationError(e){const t=await e;if(t){this.debugShader();const e=await this.getCompilationInfo();throw d.R.error("Shader compilation error: "+t.message,e)(),new Error("Shader compilation error: "+t.message)}}destroy(){this.handle=null}async getCompilationInfo(){return(await this.handle.getCompilationInfo()).messages}createHandle(){const{source:e}=this.props,t=e.includes("#version");if("glsl"===this.props.language||t)throw new Error("GLSL shaders are not supported in WebGPU");return this.device.handle.createShaderModule({code:e})}}function Dn(e){return e.depthStencil=e.depthStencil||{format:"depth24plus",stencilFront:{},stencilBack:{},depthWriteEnabled:!1,depthCompare:"less-equal"},e.depthStencil}function Bn(e){return Dn(e).stencilFront}function yn(e){return Dn(e).stencilBack}const xn={cullMode:(e,t,n)=>{n.primitive=n.primitive||{},n.primitive.cullMode=t},frontFace:(e,t,n)=>{n.primitive=n.primitive||{},n.primitive.frontFace=t},depthWriteEnabled:(e,t,n)=>{Dn(n).depthWriteEnabled=t},depthCompare:(e,t,n)=>{Dn(n).depthCompare=t},depthFormat:(e,t,n)=>{Dn(n).format=t},depthBias:(e,t,n)=>{Dn(n).depthBias=t},depthBiasSlopeScale:(e,t,n)=>{Dn(n).depthBiasSlopeScale=t},depthBiasClamp:(e,t,n)=>{Dn(n).depthBiasClamp=t},stencilReadMask:(e,t,n)=>{Dn(n).stencilReadMask=t},stencilWriteMask:(e,t,n)=>{Dn(n).stencilWriteMask=t},stencilCompare:(e,t,n)=>{const i=Bn(n),r=yn(n);i.compare=t,r.compare=t},stencilPassOperation:(e,t,n)=>{const i=Bn(n),r=yn(n);i.passOp=t,r.passOp=t},stencilFailOperation:(e,t,n)=>{const i=Bn(n),r=yn(n);i.failOp=t,r.failOp=t},stencilDepthFailOperation:(e,t,n)=>{const i=Bn(n),r=yn(n);i.depthFailOp=t,r.depthFailOp=t},sampleCount:(e,t,n)=>{n.multisample=n.multisample||{},n.multisample.count=t},sampleMask:(e,t,n)=>{n.multisample=n.multisample||{},n.multisample.mask=t},sampleAlphaToCoverageEnabled:(e,t,n)=>{n.multisample=n.multisample||{},n.multisample.alphaToCoverageEnabled=t},colorMask:(e,t,n)=>{Gn(n)[0].writeMask=t},blendColorOperation:(e,t,n)=>{Gn(n)}},Un={primitive:{cullMode:"back",topology:"triangle-list"},vertex:{module:void 0,entryPoint:"main"},fragment:{module:void 0,entryPoint:"main",targets:[]},layout:"auto"};function wn(e,t){void 0===t&&(t={}),Object.assign(e,{...Un,...e}),function(e,t){for(const[n,i]of Object.entries(t)){const t=xn[n];if(!t)throw new Error("Illegal parameter "+n);t(n,i,e)}}(e,t)}function Gn(e){var t,n,i,r,o;if(e.fragment.targets=(null==(t=e.fragment)?void 0:t.targets)||[],!Array.isArray(null==(n=e.fragment)?void 0:n.targets))throw new Error("colorstate");0===(null==(i=e.fragment)||null==(i=i.targets)?void 0:i.length)&&(null==(o=e.fragment.targets)||o.push({}));return null==(r=e.fragment)?void 0:r.targets}function Hn(e,t,n,i){const r=function(e,t){const n=[];for(const[i,r]of Object.entries(e)){const e=Vn(t,i);e&&n.push(Xn(r,e.location))}return n}(i,n);return e.createBindGroup({layout:t,entries:r})}function Vn(e,t){const n=e.bindings.find((e=>e.name===t||e.name+"uniforms"===t.toLocaleLowerCase()));return n||d.R.warn("Binding "+t+" not set: Not found in shader layout.")(),n||null}function Xn(e,t){if(e instanceof E.h)return{binding:t,resource:{buffer:e.handle}};if(e instanceof et.L)return{binding:t,resource:e.handle};if(e instanceof He.g)return{binding:t,resource:e.handle.createView({label:"bind-group-auto-created"})};throw new Error("invalid binding")}var kn=n(7621);function Wn(e){if(e.endsWith("-webgl"))throw new Error("WebGPU does not support vertex format "+e);return e}function Kn(e,t){const n=[],i=new Set;for(const r of t){const t=[];let o="vertex",s=0;const a=r.format;if(r.attributes)for(const n of r.attributes){const l=zn(e,n.attribute,i),c=null==l?void 0:l.location;o=(null==l?void 0:l.stepMode)||(null!=l&&l.name.startsWith("instance")?"instance":"vertex"),t.push({format:Wn(n.format||r.format),offset:n.byteOffset,shaderLocation:c}),s+=(0,kn.w)(a).byteLength}else{const n=zn(e,r.name,i);if(!n)continue;s=(0,kn.w)(a).byteLength,o=n.stepMode||(n.name.startsWith("instance")?"instance":"vertex"),t.push({format:Wn(a),offset:0,shaderLocation:n.location})}n.push({arrayStride:r.byteStride||s,stepMode:o,attributes:t})}for(const r of e.attributes)i.has(r.name)||n.push({arrayStride:(0,kn.w)("float32x3").byteLength,stepMode:r.stepMode||(r.name.startsWith("instance")?"instance":"vertex"),attributes:[{format:Wn("float32x3"),offset:0,shaderLocation:r.location}]});return n}function zn(e,t,n){const i=e.attributes.find((e=>e.name===t));if(!i)return d.R.warn("Unknown attribute "+t)(),null;if(n.has(t))throw new Error("Duplicate attribute "+t);return n.add(t),i}class Yn extends Nt.r{constructor(e,t){if(super(e,t),this.fs=null,this._bindGroupLayout=null,this._bindGroup=null,this.device=e,this.handle=this.props.handle,!this.handle){const e=this._getRenderPipelineDescriptor();d.R.groupCollapsed(1,"new WebGPURenderPipeline("+this.id+")")(),d.R.probe(1,JSON.stringify(e,null,2))(),d.R.groupEnd(1)(),this.handle=this.device.handle.createRenderPipeline(e)}this.handle.label=this.props.id,this.vs=t.vs,this.fs=t.fs,this._bindings={...this.props.bindings}}destroy(){this.handle=null}setBindings(e){Object.assign(this._bindings,e)}draw(e){const t=e.renderPass;t.handle.setPipeline(this.handle);const n=this._getBindGroup();return n&&t.handle.setBindGroup(0,n),e.vertexArray.bindBeforeRender(e.renderPass),e.indexCount?t.handle.drawIndexed(e.indexCount,e.instanceCount,e.firstIndex,e.baseVertex,e.firstInstance):t.handle.draw(e.vertexCount||0,e.instanceCount||1,e.firstInstance),e.vertexArray.unbindAfterRender(e.renderPass),!0}_getBindGroup(){return 0===this.shaderLayout.bindings.length?null:(this._bindGroupLayout=this._bindGroupLayout||this.handle.getBindGroupLayout(0),this._bindGroup=this._bindGroup||Hn(this.device.handle,this._bindGroupLayout,this.shaderLayout,this._bindings),this._bindGroup)}_getRenderPipelineDescriptor(){const e={vertex:{module:this.props.vs.handle,entryPoint:this.props.vertexEntryPoint||"main",buffers:Kn(this.shaderLayout,this.props.bufferLayout)},fragment:{module:this.props.fs.handle,entryPoint:this.props.fragmentEntryPoint||"main",targets:[{format:Cn(this.device.getCanvasContext().format)}]},primitive:{topology:this.props.topology},layout:"auto"};return wn(e,this.props.parameters),e}}class jn extends Xe{constructor(e,t){super(e,t),this.colorAttachments=[],this.depthStencilAttachment=null,this.device=e,this.autoCreateAttachmentTextures()}}var Qn=n(9316);class Zn extends Qn.C{constructor(e,t){super(e,t),this._bindGroupLayout=null,this._bindGroup=null,this._bindings={},this.device=e;const n=this.props.shader;this.handle=this.props.handle||this.device.handle.createComputePipeline({label:this.props.id,compute:{module:n.handle,entryPoint:this.props.entryPoint,constants:this.props.constants},layout:"auto"})}setBindings(e){Object.assign(this._bindings,e)}_getBindGroup(){return this._bindGroupLayout=this._bindGroupLayout||this.handle.getBindGroupLayout(0),this._bindGroup=this._bindGroup||Hn(this.device.handle,this._bindGroupLayout,this.shaderLayout,this._bindings),this._bindGroup}}class qn extends St{constructor(e,t){void 0===t&&(t={}),super(e,t),this.pipeline=null,this.device=e;const n=t.framebuffer||e.getCanvasContext().getCurrentFramebuffer(),i=this.getRenderPassDescriptor(n),r=t.timestampQuerySet;if(r&&(i.occlusionQuerySet=r.handle),e.features.has("timestamp-query")){const e=t.timestampQuerySet;i.timestampWrites=e?{querySet:e.handle,beginningOfPassWriteIndex:t.beginTimestampIndex,endOfPassWriteIndex:t.endTimestampIndex}:void 0}if(!e.commandEncoder)throw new Error("commandEncoder not available");this.handle=this.props.handle||e.commandEncoder.beginRenderPass(i),this.handle.label=this.props.id,d.R.groupCollapsed(3,"new WebGPURenderPass("+this.id+")")(),d.R.probe(3,JSON.stringify(i,null,2))(),d.R.groupEnd(3)()}destroy(){}end(){this.handle.end()}setPipeline(e){this.pipeline=e,this.handle.setPipeline(this.pipeline.handle)}setBindings(e){var t,n;null==(t=this.pipeline)||t.setBindings(e);const i=null==(n=this.pipeline)?void 0:n._getBindGroup();i&&this.handle.setBindGroup(0,i)}setIndexBuffer(e,t,n,i){void 0===n&&(n=0),this.handle.setIndexBuffer(e.handle,t,n,i)}setVertexBuffer(e,t,n){void 0===n&&(n=0),this.handle.setVertexBuffer(e,t.handle,n)}draw(e){e.indexCount?this.handle.drawIndexed(e.indexCount,e.instanceCount,e.firstIndex,e.baseVertex,e.firstInstance):this.handle.draw(e.vertexCount||0,e.instanceCount||1,e.firstIndex,e.firstInstance)}drawIndirect(){}setParameters(e){const{blendConstant:t,stencilReference:n,scissorRect:i,viewport:r}=e;t&&this.handle.setBlendConstant(t),n&&this.handle.setStencilReference(n),i&&this.handle.setScissorRect(i[0],i[1],i[2],i[3]),r&&this.handle.setViewport(r[0],r[1],r[2],r[3],r[4],r[5])}pushDebugGroup(e){this.handle.pushDebugGroup(e)}popDebugGroup(){this.handle.popDebugGroup()}insertDebugMarker(e){this.handle.insertDebugMarker(e)}beginOcclusionQuery(e){this.handle.beginOcclusionQuery(e)}endOcclusionQuery(){this.handle.endOcclusionQuery()}getRenderPassDescriptor(e){const t={colorAttachments:[]};if(t.colorAttachments=e.colorAttachments.map((e=>({loadOp:!1!==this.props.clearColor?"clear":"load",colorClearValue:this.props.clearColor||[0,0,0,0],storeOp:this.props.discard?"discard":"store",view:e.handle}))),e.depthStencilAttachment){t.depthStencilAttachment={view:e.depthStencilAttachment.handle};const{depthStencilAttachment:n}=t;this.props.depthReadOnly&&(n.depthReadOnly=!0),n.depthClearValue=this.props.clearDepth||0;!0&&(n.depthLoadOp=!1!==this.props.clearDepth?"clear":"load",n.depthStoreOp="store");!1&&(n.stencilLoadOp=!1!==this.props.clearStencil?"clear":"load",n.stencilStoreOp="store")}return t}}let Jn;Jn=Symbol.toStringTag;class $n extends Ge.F{get[Jn](){return"ComputePass"}constructor(e,t){super(e,t,$n.defaultProps)}}$n.defaultProps={...Ge.F.defaultProps,timestampQuerySet:void 0,beginTimestampIndex:void 0,endTimestampIndex:void 0};class ei extends $n{constructor(e,t){var n;let i;if(super(e,t),this._webgpuPipeline=null,this.device=e,e.features.has("timestamp-query")){const e=t.timestampQuerySet;e&&(i={querySet:e.handle,beginningOfPassWriteIndex:t.beginTimestampIndex,endOfPassWriteIndex:t.endTimestampIndex})}this.handle=this.props.handle||(null==(n=e.commandEncoder)?void 0:n.beginComputePass({label:this.props.id,timestampWrites:i}))}destroy(){}end(){this.handle.end()}setPipeline(e){const t=e;this.handle.setPipeline(t.handle),this._webgpuPipeline=t,this.setBindings([])}setBindings(e){const t=this._webgpuPipeline._getBindGroup();this.handle.setBindGroup(0,t)}dispatch(e,t,n){this.handle.dispatchWorkgroups(e,t,n)}dispatchIndirect(e,t){void 0===t&&(t=0);const n=e;this.handle.dispatchWorkgroupsIndirect(n.handle,t)}pushDebugGroup(e){this.handle.pushDebugGroup(e)}popDebugGroup(){this.handle.popDebugGroup()}insertDebugMarker(e){this.handle.insertDebugMarker(e)}}class ti extends rn{get[Symbol.toStringTag](){return"WebGPUVertexArray"}constructor(e,t){super(e,t),this.device=e}destroy(){}setIndexBuffer(e){this.indexBuffer=e}setBuffer(e,t){this.attributes[e]=t}bindBeforeRender(e,t,n){const i=e,r=this.indexBuffer;null!=r&&r.handle&&(d.R.warn("setting index buffer",null==r?void 0:r.handle,null==r?void 0:r.indexType)(),i.handle.setIndexBuffer(null==r?void 0:r.handle,null==r?void 0:r.indexType));for(let o=0;o<this.maxVertexAttributes;o++){const e=this.attributes[o];null!=e&&e.handle&&(d.R.warn("setting vertex buffer "+o,null==e?void 0:e.handle)(),i.handle.setVertexBuffer(o,null==e?void 0:e.handle))}}unbindAfterRender(e){}static isConstantAttributeZeroSupported(e){return"Chrome"===(0,sn.X)()}}class ni extends F{constructor(e,t,n){super(n),this.format=navigator.gpu.getPreferredCanvasFormat(),this.depthStencilFormat="depth24plus",this.depthStencilAttachment=null,this.device=e,this.width=-1,this.height=-1,this._setAutoCreatedCanvasId(this.device.id+"-canvas"),this.gpuCanvasContext=this.canvas.getContext("webgpu"),this.format="bgra8unorm"}destroy(){this.gpuCanvasContext.unconfigure()}getCurrentFramebuffer(){this.update();const e=this.getCurrentTexture();return this.width=e.width,this.height=e.height,this._createDepthStencilAttachment(),new jn(this.device,{colorAttachments:[e],depthStencilAttachment:this.depthStencilAttachment})}update(){const[e,t]=this.getPixelSize();(e!==this.width||t!==this.height)&&(this.width=e,this.height=t,this.depthStencilAttachment&&(this.depthStencilAttachment.destroy(),this.depthStencilAttachment=null),this.gpuCanvasContext.configure({device:this.device.handle,format:Cn(this.format),colorSpace:this.props.colorSpace,alphaMode:this.props.alphaMode}),d.R.log(1,"Resized to "+this.width+"x"+this.height+"px")())}resize(e){this.update()}getCurrentTexture(){return this.device._createTexture({id:this.id+"#color-texture",handle:this.gpuCanvasContext.getCurrentTexture(),format:this.format})}_createDepthStencilAttachment(){return this.depthStencilAttachment||(this.depthStencilAttachment=this.device.createTexture({id:this.id+"#depth-stencil-texture",format:this.depthStencilFormat,width:this.width,height:this.height,usage:GPUTextureUsage.RENDER_ATTACHMENT})),this.depthStencilAttachment}}class ii extends pn{constructor(e,t){super(e,t),this.device=e,this.handle=this.props.handle||this.device.handle.createQuerySet({type:this.props.type,count:this.props.count}),this.handle.label=this.props.id}destroy(){var e;null==(e=this.handle)||e.destroy(),this.handle=null}}class ri extends b{static isSupported(){return Boolean("undefined"!=typeof navigator&&navigator.gpu)}static async create(e){if(!navigator.gpu)throw new Error("WebGPU not available. Open in Chrome Canary and turn on chrome://flags/#enable-unsafe-webgpu");d.R.groupCollapsed(1,"WebGPUDevice created")();const t=await navigator.gpu.requestAdapter({powerPreference:"high-performance"});if(!t)throw new Error("Failed to request WebGPU adapter");const n=await t.requestAdapterInfo();d.R.probe(2,"Adapter available",n)();const i=[],r={};if(e.requestMaxLimits){i.push(...Array.from(t.features));const e=Object.keys(t.limits).filter((e=>!["minSubgroupSize","maxSubgroupSize"].includes(e)));for(const n of e){const e=n,i=t.limits[e];"number"==typeof i&&(r[e]=i)}}const o=await t.requestDevice({requiredFeatures:i,requiredLimits:r});d.R.probe(1,"GPUDevice available")(),"string"==typeof e.canvas&&(await F.pageLoaded,d.R.probe(1,"DOM is loaded")());const s=new ri(o,t,n,e);return d.R.probe(1,"Device created. For more info, set chrome://flags/#enable-webgpu-developer-features")(),d.R.table(1,s.info)(),d.R.groupEnd(1)(),s}constructor(e,t,n,i){super({...i,id:i.id||"webgpu-device"}),this.type="webgpu",this.canvasContext=null,this._isLost=!1,this.commandEncoder=null,this.renderPass=null,this.handle=e,this.adapter=t,this.adapterInfo=n,this.info=this._getInfo(),this.features=this._getFeatures(),this.limits=this.handle.limits,e.addEventListener("uncapturederror",(e=>{const t=e instanceof GPUUncapturedErrorEvent?e.error.message:"Unknown error";this.error(new Error(t))})),this.lost=new Promise((async e=>{const t=await this.handle.lost;this._isLost=!0,e({reason:"destroyed",message:t.message})})),this.canvasContext=new ni(this,this.adapter,{canvas:i.canvas,height:i.height,width:i.width,container:i.container})}destroy(){this.handle.destroy()}isTextureFormatSupported(e){return!e.includes("webgl")}isTextureFormatFilterable(e){return this.isTextureFormatSupported(e)&&!e.startsWith("depth")&&!e.startsWith("stencil")}isTextureFormatRenderable(e){return this.isTextureFormatSupported(e)}get isLost(){return this._isLost}createBuffer(e){const t=this._getBufferProps(e);return new Sn(this,t)}_createTexture(e){return new Ln(this,e)}createExternalTexture(e){return new On(this,e)}createShader(e){return new Fn(this,e)}createSampler(e){return new bn(this,e)}createRenderPipeline(e){return new Yn(this,e)}createFramebuffer(e){return new jn(this,e)}createComputePipeline(e){return new Zn(this,e)}createVertexArray(e){return new ti(this,e)}beginRenderPass(e){return this.commandEncoder=this.commandEncoder||this.handle.createCommandEncoder(),new qn(this,e)}beginComputePass(e){return this.commandEncoder=this.commandEncoder||this.handle.createCommandEncoder(),new ei(this,e)}createTransformFeedback(e){throw new Error("Transform feedback not supported in WebGPU")}createQuerySet(e){return new ii(this,e)}createCanvasContext(e){return new ni(this,this.adapter,e)}submit(){var e;const t=null==(e=this.commandEncoder)?void 0:e.finish();t&&this.handle.queue.submit([t]),this.commandEncoder=null}_getInfo(){const[e,t]=(this.adapterInfo.driver||"").split(" Version "),n=this.adapterInfo.vendor||this.adapter.__brand||"unknown",i=e||"",r=t||"",o="apple"===n?"apple":"unknown",s=this.adapterInfo.architecture||"unknown",a=this.adapterInfo.backend||"unknown";return{type:"webgpu",vendor:n,renderer:i,version:r,gpu:o,gpuType:(this.adapterInfo.type||"").split(" ")[0].toLowerCase()||"unknown",gpuBackend:a,gpuArchitecture:s,shadingLanguage:"wgsl",shadingLanguageVersion:100}}_getFeatures(){const e=new Set(this.handle.features);e.has("depth-clamping")&&(e.delete("depth-clamping"),e.add("depth-clip-control")),e.has("texture-compression-bc")&&e.add("texture-compression-bc5-webgl");const t=["timer-query-webgl","compilation-status-async-webgl","float32-renderable-webgl","float16-renderable-webgl","norm16-renderable-webgl","texture-filterable-anisotropic-webgl","shader-noperspective-interpolation-webgl"];for(const n of t)e.add(n);return new C(Array.from(e),this.props.disabledFeatures)}copyExternalImageToTexture(e){var t;const{source:n,sourceX:i=0,sourceY:r=0,texture:o,mipLevel:s=0,aspect:a="all",colorSpace:l="display-p3",premultipliedAlpha:c=!1,width:u=o.width,height:d=o.height,depth:h=1}=e,_=o;null==(t=this.handle)||t.queue.copyExternalImageToTexture({source:n,origin:[i,r]},{texture:_.handle,origin:[0,0,0],mipLevel:s,aspect:a,colorSpace:l,premultipliedAlpha:c},[u,d,h])}}ri.type="webgpu",N.registerDevices([vn,ri]);let oi,si={};const ai=(0,c.vt)((e=>({deviceType:void 0,deviceError:void 0,device:void 0,setDeviceType:async t=>{let n,i;try{i=await async function(e){return si[e]=si[e]||N.createDevice({type:e,height:0,container:(oi||(oi=document.createElement("div"),oi.style.display="none",document.body.appendChild(oi)),oi)}),await si[e]}(t)}catch(r){n=r.message}return e((e=>({deviceType:t,deviceError:n,device:i})))}})));ai.getState().setDeviceType("webgl");var li,ci,ui=n(6065);function di(e,t){return t||(t=e.slice(0)),e.raw=t,e}const hi=ui.Ay.div(li||(li=di(["\n  display: flex;\n  flex-direction: row;\n\n  & > * + * {\n    margin-left: 2px;\n  }\n"]))),_i=ui.Ay.div((e=>"\n  cursor: pointer;\n  padding: 10px 20px;\n  font-weight: bold;\n  &:hover {\n    background-color: #eeefef;\n  }\n  "+(e.isSelected?"\n    color: #276EF1;\n    border-bottom: 4px solid #276EF1;\n  ":"")+"\n")),fi=ui.Ay.div(ci||(ci=di(["\n  background-color: rgb(250, 248, 245);\n"]))),pi=e=>{var t,n;const{children:r}=e,o=i.Children.toArray(r),[s,a]=(0,i.useState)((null==(t=o[0])?void 0:t.props.tag)||(null==(n=o[0])?void 0:n.props.title));let l=void 0!==e.selectedItem?e.selectedItem:s;const c=void 0!==e.setSelectedItem?e.setSelectedItem:a;return o.some((e=>(e.props.tag||e.props.title)===l))||(l=s),i.createElement(i.Fragment,null,i.createElement(hi,null,o.map((e=>i.createElement(_i,{key:e.props.title,isSelected:(e.props.tag||e.props.title)===l,onClick:()=>c(e.props.tag||e.props.title)},e.props.title)))),i.createElement(fi,null,o.find((e=>(e.props.tag||e.props.title)===l))))},Ei=e=>{const{children:t}=e;return i.createElement(i.Fragment,null,t)};var gi=n(9813);const mi={devices:["webgl2","webgpu"]},Ri=e=>{e={...mi,...e};const t=ai((e=>e.deviceType)),n=ai((e=>e.deviceError)),r=ai((e=>e.setDeviceType));return i.createElement(pi,{selectedItem:t,setSelectedItem:r},e.devices.includes("webgl2")&&i.createElement(Ei,{key:"WebGL2",title:"WebGL2",tag:"webgl"},n),e.devices.includes("webgpu")&&i.createElement(Ei,{key:"WebGPU",title:"WebGPU",tag:"webgpu"},n))},Ai=e=>i.createElement(gi.A,null,(()=>i.createElement(Ri,e)));const Ti=e=>{let{f:t}=e;const n=ai((e=>e.device)),r=n?n.info[t]:"N/A";return i.createElement("code",{style:{color:"darkgreen"}},r)},vi=e=>{let{f:t}=e;const n=ai((e=>e.device));return i.createElement("code",{style:{color:"darkgreen"}},function(e,t){return e?e.limits[t]?String(e.limits[t]):"0 \u274c":"N/A"}(n,t))},Si=e=>{let{f:t}=e;const n=ai((e=>e.device));return i.createElement("span",null,function(e,t){return e?e.features.has(t)?"\u2705":"\u274c":"N/A"}(n,t))},Ci=e=>{let{f:t}=e;const n=ai((e=>e.device));return i.createElement("span",{key:t},function(e,t){const n=e&&e.isTextureFormatSupported(t);return e?n?"\u2705":"\u274c":"N/A"}(n,t))},bi=e=>{let{f:t}=e;const n=ai((e=>e.device));return i.createElement("span",null,function(e,t){const n=e&&e.isTextureFormatSupported(t)&&e.isTextureFormatFilterable(t);return e?n?"\u2705":"\u274c":"N/A"}(n,t))},Ii=e=>{let{f:t}=e;const n=ai((e=>e.device)),i=t,r=n&&n.isTextureFormatSupported(i)&&n.isTextureFormatRenderable(i);return n?r?"\u2705":"\u274c":"N/A"};let Ni=0;const Li={device:null,onAddHTML:()=>"",onInitialize:async()=>null,onRender:()=>{},onFinalize:()=>{},onError:e=>console.error(e),stats:N.stats.get("animation-loop-"+Ni++),useDevicePixels:!0,autoResizeViewport:!1,autoResizeDrawingBuffer:!1};class Pi{constructor(e){if(this.device=null,this.canvas=null,this.animationProps=null,this.timeline=null,this.needsRedraw="initialized",this._initialized=!1,this._running=!1,this._animationFrameId=null,this._nextFramePromise=null,this._resolveNextFrame=null,this._cpuStartTime=0,this.props={...Li,...e},!(e=this.props).device)throw new Error("No device provided");const{useDevicePixels:t=!0}=this.props;this.stats=e.stats||new h.A({id:"animation-loop-stats"}),this.cpuTime=this.stats.get("CPU Time"),this.gpuTime=this.stats.get("GPU Time"),this.frameRate=this.stats.get("Frame Rate"),this.setProps({autoResizeViewport:e.autoResizeViewport,autoResizeDrawingBuffer:e.autoResizeDrawingBuffer,useDevicePixels:t}),this.start=this.start.bind(this),this.stop=this.stop.bind(this),this._onMousemove=this._onMousemove.bind(this),this._onMouseleave=this._onMouseleave.bind(this)}destroy(){this.stop(),this._setDisplay(null)}delete(){this.destroy()}setNeedsRedraw(e){return this.needsRedraw=this.needsRedraw||e,this}setProps(e){return"autoResizeViewport"in e&&(this.props.autoResizeViewport=e.autoResizeViewport||!1),"autoResizeDrawingBuffer"in e&&(this.props.autoResizeDrawingBuffer=e.autoResizeDrawingBuffer||!1),"useDevicePixels"in e&&(this.props.useDevicePixels=e.useDevicePixels||!1),this}async start(){if(this._running)return this;this._running=!0;try{let e;return this._initialized||(this._initialized=!0,await this._initDevice(),this._initialize(),await this.props.onInitialize(this._getAnimationProps())),this._running?(!1!==e&&(this._cancelAnimationFrame(),this._requestAnimationFrame()),this):null}catch(e){const t=e instanceof Error?e:new Error("Unknown error");throw this.props.onError(t),t}}stop(){return this._running&&(this.animationProps&&this.props.onFinalize(this.animationProps),this._cancelAnimationFrame(),this._nextFramePromise=null,this._resolveNextFrame=null,this._running=!1),this}redraw(){var e;return null!=(e=this.device)&&e.isLost||(this._beginFrameTimers(),this._setupFrame(),this._updateAnimationProps(),this._renderFrame(this._getAnimationProps()),this._clearNeedsRedraw(),this._resolveNextFrame&&(this._resolveNextFrame(this),this._nextFramePromise=null,this._resolveNextFrame=null),this._endFrameTimers()),this}attachTimeline(e){return this.timeline=e,this.timeline}detachTimeline(){this.timeline=null}waitForRender(){return this.setNeedsRedraw("waitForRender"),this._nextFramePromise||(this._nextFramePromise=new Promise((e=>{this._resolveNextFrame=e}))),this._nextFramePromise}async toDataURL(){if(this.setNeedsRedraw("toDataURL"),await this.waitForRender(),this.canvas instanceof HTMLCanvasElement)return this.canvas.toDataURL();throw new Error("OffscreenCanvas")}_initialize(){this._startEventHandling(),this._initializeAnimationProps(),this._updateAnimationProps(),this._resizeCanvasDrawingBuffer(),this._resizeViewport()}_setDisplay(e){this.display&&(this.display.destroy(),this.display.animationLoop=null),e&&(e.animationLoop=this),this.display=e}_requestAnimationFrame(){var e;this._running&&(this._animationFrameId=(e=this._animationFrame.bind(this),"undefined"!=typeof window&&window.requestAnimationFrame?window.requestAnimationFrame(e):setTimeout(e,1e3/60)))}_cancelAnimationFrame(){var e;null!==this._animationFrameId&&(e=this._animationFrameId,"undefined"!=typeof window&&window.cancelAnimationFrame?window.cancelAnimationFrame(e):clearTimeout(e),this._animationFrameId=null)}_animationFrame(){this._running&&(this.redraw(),this._requestAnimationFrame())}_renderFrame(e){var t;this.display?this.display._renderFrame(e):(this.props.onRender(this._getAnimationProps()),null==(t=this.device)||t.submit())}_clearNeedsRedraw(){this.needsRedraw=!1}_setupFrame(){this._resizeCanvasDrawingBuffer(),this._resizeViewport()}_initializeAnimationProps(){var e;const t=null==(e=this.device)||null==(e=e.canvasContext)?void 0:e.canvas;if(!this.device||!t)throw new Error("loop");this.animationProps={animationLoop:this,device:this.device,canvas:t,timeline:this.timeline,useDevicePixels:this.props.useDevicePixels,needsRedraw:!1,width:1,height:1,aspect:1,time:0,startTime:Date.now(),engineTime:0,tick:0,tock:0,_mousePosition:null}}_getAnimationProps(){if(!this.animationProps)throw new Error("animationProps");return this.animationProps}_updateAnimationProps(){if(!this.animationProps)return;const{width:e,height:t,aspect:n}=this._getSizeAndAspect();e===this.animationProps.width&&t===this.animationProps.height||this.setNeedsRedraw("drawing buffer resized"),n!==this.animationProps.aspect&&this.setNeedsRedraw("drawing buffer aspect changed"),this.animationProps.width=e,this.animationProps.height=t,this.animationProps.aspect=n,this.animationProps.needsRedraw=this.needsRedraw,this.animationProps.engineTime=Date.now()-this.animationProps.startTime,this.timeline&&this.timeline.update(this.animationProps.engineTime),this.animationProps.tick=Math.floor(this.animationProps.time/1e3*60),this.animationProps.tock++,this.animationProps.time=this.timeline?this.timeline.getTime():this.animationProps.engineTime}async _initDevice(){var e;if(this.device=await this.props.device,!this.device)throw new Error("No device provided");this.canvas=(null==(e=this.device.canvasContext)?void 0:e.canvas)||null}_createInfoDiv(){if(this.canvas&&this.props.onAddHTML){const e=document.createElement("div");document.body.appendChild(e),e.style.position="relative";const t=document.createElement("div");t.style.position="absolute",t.style.left="10px",t.style.bottom="10px",t.style.width="300px",t.style.background="white",this.canvas instanceof HTMLCanvasElement&&e.appendChild(this.canvas),e.appendChild(t);const n=this.props.onAddHTML(t);n&&(t.innerHTML=n)}}_getSizeAndAspect(){var e,t;if(!this.device)return{width:1,height:1,aspect:1};const[n,i]=(null==(e=this.device)||null==(e=e.canvasContext)?void 0:e.getPixelSize())||[1,1];let r=1;const o=null==(t=this.device)||null==(t=t.canvasContext)?void 0:t.canvas;return o&&o.clientHeight?r=o.clientWidth/o.clientHeight:n>0&&i>0&&(r=n/i),{width:n,height:i,aspect:r}}_resizeViewport(){this.props.autoResizeViewport&&this.device.gl&&this.device.gl.viewport(0,0,this.device.gl.drawingBufferWidth,this.device.gl.drawingBufferHeight)}_resizeCanvasDrawingBuffer(){var e;this.props.autoResizeDrawingBuffer&&(null==(e=this.device)||null==(e=e.canvasContext)||e.resize({useDevicePixels:this.props.useDevicePixels}))}_beginFrameTimers(){this.frameRate.timeEnd(),this.frameRate.timeStart(),this.cpuTime.timeStart()}_endFrameTimers(){this.cpuTime.timeEnd()}_startEventHandling(){this.canvas&&(this.canvas.addEventListener("mousemove",this._onMousemove.bind(this)),this.canvas.addEventListener("mouseleave",this._onMouseleave.bind(this)))}_onMousemove(e){e instanceof MouseEvent&&(this._getAnimationProps()._mousePosition=[e.offsetX,e.offsetY])}_onMouseleave(e){this._getAnimationProps()._mousePosition=null}}var Mi=n(4327);"undefined"!=typeof window&&(window.website=!0);const Oi=e=>{let t="ssr";const[n,r]=(0,i.useState)(null),o=(0,i.useRef)(new WeakMap),s=(0,i.useRef)(null),a=ai((e=>e.deviceType));return t=e.container||"luma-example-container-"+a,(0,i.useEffect)((()=>{if(!n||o.current.get(n))return;o.current.set(n,!0);let i=null,r=null;const l=async()=>{var o;n.style.width="100%",n.style.height="100%",r=await N.createDevice({type:a,canvas:n,container:t}),i=function(e,t){let n=null;const i=(null==t?void 0:t.device)||N.createDevice(),r=new Pi({...t,device:i,async onInitialize(t){var i;return n=new e(t),await(null==(i=n)?void 0:i.onInitialize(t))},onRender:e=>{var t;return null==(t=n)?void 0:t.onRender(e)},onFinalize:e=>{var t;return null==(t=n)?void 0:t.onFinalize(e)}});return r.getInfo=()=>this.AnimationLoopTemplateCtor.info,r}(e.template,{device:r,autoResizeViewport:!0,autoResizeDrawingBuffer:!0}),null==(o=i)||o.start();const s="https://raw.githubusercontent.com/visgl/luma.gl/master";e.directory?(0,Mi.Qj)(s+"/examples/"+e.directory+"/"+e.id+"/"):(0,Mi.Qj)(s+"/website/static/images/")};return s.current=Promise.resolve(s.current).then((()=>{l().catch((e=>{console.error("start "+a+" failed",e)}))})),()=>{s.current=Promise.resolve(s.current).then((()=>{i&&(i.destroy(),i=null),r&&r.destroy()})).catch((e=>{console.error("unmounting "+a+" failed",e)}))}}),[a,n]),i.createElement("canvas",{key:a,ref:r})}},1020:(e,t,n)=>{var i=n(6540),r=Symbol.for("react.element"),o=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,a=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,n){var i,o={},c=null,u=null;for(i in void 0!==n&&(c=""+n),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(u=t.ref),t)s.call(t,i)&&!l.hasOwnProperty(i)&&(o[i]=t[i]);if(e&&e.defaultProps)for(i in t=e.defaultProps)void 0===o[i]&&(o[i]=t[i]);return{$$typeof:r,type:e,key:c,ref:u,props:o,_owner:a.current}}t.Fragment=o,t.jsx=c,t.jsxs=c},4848:(e,t,n)=>{e.exports=n(1020)},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(6540);const r={},o=i.createContext(r);function s(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);