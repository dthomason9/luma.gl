/*! For license information please see b3bb311d.7771f14b.js.LICENSE.txt */
(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[3181],{1538:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>_,frontMatter:()=>a,metadata:()=>c,toc:()=>h});var i=n(4848),r=n(8453),s=n(6254),o=n(3101);const a={},l="Instanced Cubes",c={id:"tutorials/instanced-cubes",title:"Instanced Cubes",description:"",source:"@site/content/examples/tutorials/instanced-cubes.mdx",sourceDirName:"tutorials",slug:"/tutorials/instanced-cubes",permalink:"/examples/tutorials/instanced-cubes",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"examplesSidebar",previous:{title:"Two Cubes",permalink:"/examples/tutorials/two-cubes"},next:{title:"Hello Instancing",permalink:"/examples/tutorials/hello-instancing"}},u={},h=[];function d(e){const t={h1:"h1",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"instanced-cubes",children:"Instanced Cubes"}),"\n",(0,i.jsx)(s.xN,{}),"\n",(0,i.jsx)(o.y3,{})]})}function _(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},7959:(e,t,n)=>{"use strict";n.d(t,{M:()=>l,P:()=>a});var i=n(3522);const r={f32:["f32",1],"vec2<f32>":["f32",2],"vec3<f32>":["f32",3],"vec4<f32>":["f32",4],f16:["f16",1],"vec2<f16>":["f16",2],"vec3<f16>":["f16",3],"vec4<f16>":["f16",4],i32:["i32",1],"vec2<i32>":["i32",2],"vec3<i32>":["i32",3],"vec4<i32>":["i32",4],u32:["u32",1],"vec2<u32>":["u32",2],"vec3<u32>":["u32",3],"vec4<u32>":["u32",4]},s={f32:4,f16:2,i32:4,u32:4};var o=n(7621);function a(e,t){const n={};for(const i of e.attributes){const r=c(e,t,i.name);r&&(n[i.name]=r)}return n}function l(e,t,n){void 0===n&&(n=16);const i=a(e,t),r=new Array(n).fill(null);for(const s of Object.values(i))r[s.location]=s;return r}function c(e,t,n){const a=function(e,t){const n=e.attributes.find((e=>e.name===t));n||i.R.warn('shader layout attribute "'+t+'" not present in shader');return n||null}(e,n),l=function(e,t){u(e);let n=function(e,t){for(const n of e)if(n.format&&n.name===t)return{attributeName:n.name,bufferName:t,stepMode:n.stepMode,vertexFormat:n.format,byteOffset:0,byteStride:n.byteStride||0};return null}(e,t);if(n)return n;if(n=function(e,t){for(const i of e){var n;let e=i.byteStride;if("number"!=typeof i.byteStride)for(const t of i.attributes||[]){e+=(0,o.w)(t.format).byteLength}const r=null==(n=i.attributes)?void 0:n.find((e=>e.attribute===t));if(r)return{attributeName:r.attribute,bufferName:i.name,stepMode:i.stepMode,vertexFormat:r.format,byteOffset:r.byteOffset,byteStride:e}}return null}(e,t),n)return n;return i.R.warn('layout for attribute "'+t+'" not present in buffer layout'),null}(t,n);if(!a)return null;const c=function(e){const[t,n]=r[e],i="i32"===t||"u32"===t,o="u32"!==t,a=s[t]*n,l=function(e,t){let n;switch(e){case"f32":n="float32";break;case"i32":n="sint32";break;case"u32":n="uint32";break;case"f16":return t<=2?"float16x2":"float16x4"}return 1===t?n:n+"x"+t}(t,n);return{dataType:t,components:n,defaultVertexFormat:l,byteLength:a,integer:i,signed:o}}(a.type),h=(null==l?void 0:l.vertexFormat)||c.defaultVertexFormat,d=(0,o.w)(h);return{attributeName:(null==l?void 0:l.attributeName)||a.name,bufferName:(null==l?void 0:l.bufferName)||a.name,location:a.location,shaderType:a.type,shaderDataType:c.dataType,shaderComponents:c.components,vertexFormat:h,bufferDataType:d.type,bufferComponents:d.components,normalized:d.normalized,integer:c.integer,stepMode:(null==l?void 0:l.stepMode)||a.stepMode||"vertex",byteOffset:(null==l?void 0:l.byteOffset)||0,byteStride:(null==l?void 0:l.byteStride)||0}}function u(e){for(const t of e)(t.attributes&&t.format||!t.attributes&&!t.format)&&i.R.warn("BufferLayout "+name+" must have either 'attributes' or 'format' field")}},5056:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var i=n(7862);let r;r=Symbol.toStringTag;class s extends i.F{get[r](){return"Buffer"}constructor(e,t){const n={...t};(t.usage||0)&s.INDEX&&!t.indexType&&(t.data instanceof Uint32Array?n.indexType="uint32":t.data instanceof Uint16Array&&(n.indexType="uint16")),super(e,n,s.defaultProps),this.debugData=new ArrayBuffer(0),this.usage=t.usage||0,this.indexType=n.indexType,this.updateTimestamp=e.incrementTimestamp()}readSyncWebGL(e,t){throw new Error("not implemented")}_setDebugData(e,t,n){const i=ArrayBuffer.isView(e)?e.buffer:e,r=Math.min(e?e.byteLength:n,s.DEBUG_DATA_MAX_LENGTH);null===i?this.debugData=new ArrayBuffer(r):0===t&&n===i.byteLength?this.debugData=i.slice(0,r):this.debugData=i.slice(t,t+r)}}s.defaultProps={...i.F.defaultProps,usage:0,byteLength:0,byteOffset:0,data:null,indexType:"uint16",mappedAtCreation:!1},s.MAP_READ=1,s.MAP_WRITE=2,s.COPY_SRC=4,s.COPY_DST=8,s.INDEX=16,s.VERTEX=32,s.UNIFORM=64,s.STORAGE=128,s.INDIRECT=256,s.QUERY_RESOLVE=512,s.DEBUG_DATA_MAX_LENGTH=32},9316:(e,t,n)=>{"use strict";n.d(t,{C:()=>s});var i=n(7862);let r;r=Symbol.toStringTag;class s extends i.F{get[r](){return"ComputePipeline"}constructor(e,t){super(e,t,s.defaultProps),this.hash="",this.shaderLayout=t.shaderLayout}}s.defaultProps={...i.F.defaultProps,shader:void 0,entryPoint:void 0,constants:{},shaderLayout:void 0}},3145:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var i=n(7862);let r;r=Symbol.toStringTag;class s extends i.F{get[r](){return"RenderPipeline"}constructor(e,t){super(e,t,s.defaultProps),this.linkStatus="pending",this.hash="",this.shaderLayout=this.props.shaderLayout,this.bufferLayout=this.props.bufferLayout||[]}setUniformsWebGL(e){throw new Error("Use uniform blocks")}}s.defaultProps={...i.F.defaultProps,vs:null,vertexEntryPoint:"vertexMain",vsConstants:{},fs:null,fragmentEntryPoint:"fragmentMain",fsConstants:{},shaderLayout:null,bufferLayout:[],topology:"triangle-list",parameters:{},vertexCount:0,instanceCount:0,bindings:{},uniforms:{}}},7862:(e,t,n)=>{"use strict";n.d(t,{F:()=>r});var i=n(1166);class r{constructor(e,t,n){if(this.userData={},this.destroyed=!1,this.allocatedBytes=0,this._attachedResources=new Set,!e)throw new Error("no device");this._device=e,this.props=function(e,t){const n={...t};for(const i in e)void 0!==e[i]&&(n[i]=e[i]);return n}(t,n);const r="undefined"!==this.props.id?this.props.id:(0,i.L)(this[Symbol.toStringTag]);this.props.id=r,this.id=r,this.userData=this.props.userData||{},this.addStats()}destroy(){this.destroyResource()}delete(){return this.destroy(),this}toString(){return(this[Symbol.toStringTag]||this.constructor.name)+"("+this.id+")"}getProps(){return this.props}attachResource(e){this._attachedResources.add(e)}detachResource(e){this._attachedResources.delete(e)}destroyAttachedResource(e){this._attachedResources.delete(e)&&e.destroy()}destroyAttachedResources(){for(const e of Object.values(this._attachedResources))e.destroy();this._attachedResources=new Set}destroyResource(){this.destroyAttachedResources(),this.removeStats(),this.destroyed=!0}removeStats(){const e=this._device.statsManager.getStats("Resource Counts"),t=this[Symbol.toStringTag];e.get(t+"s Active").decrementCount()}trackAllocatedMemory(e,t){void 0===t&&(t=this[Symbol.toStringTag]);const n=this._device.statsManager.getStats("Resource Counts");n.get("GPU Memory").addCount(e),n.get(t+" Memory").addCount(e),this.allocatedBytes=e}trackDeallocatedMemory(e){void 0===e&&(e=this[Symbol.toStringTag]);const t=this._device.statsManager.getStats("Resource Counts");t.get("GPU Memory").subtractCount(this.allocatedBytes),t.get(e+" Memory").subtractCount(this.allocatedBytes),this.allocatedBytes=0}addStats(){const e=this._device.statsManager.getStats("Resource Counts"),t=this[Symbol.toStringTag];e.get("Resources Created").incrementCount(),e.get(t+"s Created").incrementCount(),e.get(t+"s Active").incrementCount()}}r.defaultProps={id:"undefined",handle:void 0,userData:void 0}},5768:(e,t,n)=>{"use strict";n.d(t,{L:()=>s});var i=n(7862);let r;r=Symbol.toStringTag;class s extends i.F{get[r](){return"Sampler"}constructor(e,t){super(e,t,s.defaultProps)}}s.defaultProps={...i.F.defaultProps,type:"color-sampler",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge",addressModeW:"clamp-to-edge",magFilter:"nearest",minFilter:"nearest",mipmapFilter:"nearest",lodMinClamp:0,lodMaxClamp:32,compare:"less-equal",maxAnisotropy:1}},7468:(e,t,n)=>{"use strict";n.d(t,{M:()=>l});var i=n(7862),r=n(1166);function s(e,t,n,i){if(null!=i&&i.inlineSource){const i=function(e,t,n){let i="";for(let r=t-2;r<=t;r++){const s=e[r-1];void 0!==s&&(i+=o(s,t,n))}return i}(t,n);return"\n"+i+(e.linePos>0?" ".repeat(e.linePos+5)+"^^^\n":"")+e.type.toUpperCase()+": "+e.message+"\n\n"}return null!=i&&i.html?"<div class='luma-compiler-log-error' style=\"color:red;\"><b> "+e.type.toUpperCase()+": "+e.message+"</b></div>":e.type.toUpperCase()+": "+e.message}function o(e,t,n){const i=null!=n&&n.html?e.replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;").replaceAll('"',"&quot;").replaceAll("'","&#039;"):e;return function(e,t){let n="";for(let i=e.length;i<t;++i)n+=" ";return n+e}(String(t),4)+": "+i+(null!=n&&n.html?"<br/>":"\n")}let a;a=Symbol.toStringTag;class l extends i.F{get[a](){return"Shader"}constructor(e,t){super(e,{id:c(t),...t},l.defaultProps),this.compilationStatus="pending",this.stage=this.props.stage,this.source=this.props.source}getCompilationInfoSync(){return null}getTranslatedSource(){return null}async debugShader(e){switch(void 0===e&&(e=this.props.debug),e){case"never":return;case"errors":if("success"===this.compilationStatus)return}const t=await this.getCompilationInfo();"warnings"===this.props.debug&&0===(null==t?void 0:t.length)||this._displayShaderLog(t)}_displayShaderLog(e){var t,n;if("undefined"==typeof document||null==(t=document)||!t.createElement)return;const i=u(this.source),r=this.stage+" "+i;let a=function(e,t,n){let i="";const r=t.split(/\r?\n/),a=e.slice().sort(((e,t)=>e.lineNum-t.lineNum));switch((null==n?void 0:n.showSourceCode)||"no"){case"all":let t=0;for(let e=1;e<=r.length;e++)for(i+=o(r[e-1],e,n);a.length>t&&a[t].lineNum===e;){const e=a[t++];i+=s(e,r,e.lineNum,{...n,inlineSource:!1})}return i;case"issues":case"no":for(const o of e)i+=s(o,r,o.lineNum,{inlineSource:"no"!==(null==n?void 0:n.showSourceCode)});return i}}(e,this.source,{showSourceCode:"all",html:!0});const l=this.getTranslatedSource();l&&(a+='<br /><br /><h1>Translated Source</h1><br /><br /><code style="user-select:text;"><pre>'+l+"</pre></code>");const c=document.createElement("Button");c.innerHTML="\n<h1>Shader Compilation Error in "+r+'</h1><br /><br />\n<code style="user-select:text;"><pre>\n'+a+"\n</pre></code>",c.style.top="10px",c.style.left="10px",c.style.position="absolute",c.style.zIndex="9999",c.style.width="100%",c.style.textAlign="left",document.body.appendChild(c);null==(n=document.getElementsByClassName("luma-compiler-log-error")[0])||n.scrollIntoView(),c.onclick=()=>{const e="data:text/plain,"+encodeURIComponent(this.source);navigator.clipboard.writeText(e)}}}function c(e){return u(e.source)||e.id||(0,r.L)("unnamed "+e.stage+"-shader")}function u(e,t){void 0===t&&(t="unnamed");const n=/#define[\s*]SHADER_NAME[\s*]([A-Za-z0-9_-]+)[\s*]/.exec(e);return n?n[1]:t}l.defaultProps={...i.F.defaultProps,language:"auto",stage:void 0,source:"",sourceMap:null,entryPoint:"main",debug:"errors"}},4353:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var i=n(7862);let r;r=Symbol.toStringTag;class s extends i.F{get[r](){return"TextureView"}constructor(e,t){super(e,t,s.defaultProps)}}s.defaultProps={...i.F.defaultProps,format:void 0,dimension:void 0,aspect:"all",baseMipLevel:0,mipLevelCount:void 0,baseArrayLayer:0,arrayLayerCount:void 0}},7083:(e,t,n)=>{"use strict";n.d(t,{g:()=>s});var i=n(7862);let r;r=Symbol.toStringTag;class s extends i.F{get[r](){return"Texture"}static isExternalImage(e){return"undefined"!=typeof ImageData&&e instanceof ImageData||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement}static getExternalImageSize(e){return"undefined"!=typeof ImageData&&e instanceof ImageData||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement?{width:e.width,height:e.height}:"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement?{width:e.naturalWidth,height:e.naturalHeight}:"undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement?{width:e.videoWidth,height:e.videoHeight}:null}isTextureLevelData(e){const t=null==e?void 0:e.data;return ArrayBuffer.isView(t)}getTextureDataSize(e){if(!e)return null;if(ArrayBuffer.isView(e))return null;if(Array.isArray(e))return this.getTextureDataSize(e[0]);if(s.isExternalImage(e))return s.getExternalImageSize(e);if(e&&"object"==typeof e&&e.constructor===Object){const t=e;return{width:t.width,height:t.height}}throw new Error("texture size deduction failed")}getMipLevelCount(e,t){return Math.floor(Math.log2(Math.max(e,t)))+1}getCubeFaceDepth(e){switch(e){case"+X":return 0;case"-X":return 1;case"+Y":return 2;case"-Y":return 3;case"+Z":return 4;case"-Z":return 5;default:throw new Error(e)}}constructor(e,t){if(super(e,t,s.defaultProps),this.dimension=this.props.dimension,this.format=this.props.format,this.width=this.props.width,this.height=this.props.height,this.depth=this.props.depth,void 0===this.props.width||void 0===this.props.height){const e=this.getTextureDataSize(this.props.data);this.width=(null==e?void 0:e.width)||1,this.height=(null==e?void 0:e.height)||1}this.props.mipmaps&&void 0===this.props.mipLevels&&(this.props.mipLevels="pyramid"),this.mipLevels="pyramid"===this.props.mipLevels?this.getMipLevelCount(this.width,this.height):this.props.mipLevels||1,this.updateTimestamp=e.incrementTimestamp()}}s.COPY_SRC=1,s.COPY_DST=2,s.TEXTURE=4,s.STORAGE=8,s.RENDER_ATTACHMENT=16,s.CubeFaces=["+X","-X","+Y","-Y","+Z","-Z"],s.defaultProps={...i.F.defaultProps,data:null,dimension:"2d",format:"rgba8unorm",width:void 0,height:void 0,depth:1,mipmaps:!1,compressed:!1,usage:0,mipLevels:void 0,samples:void 0,sampler:{},view:void 0}},2112:(e,t,n)=>{"use strict";function i(e){const t=function(e){const t=s[e];return t}(r[e]),n=e.includes("norm"),i=!n&&!e.startsWith("float"),o=e.startsWith("s");return{dataType:r[e],byteLength:t,integer:i,signed:o,normalized:n}}n.d(t,{l:()=>i});const r={uint8:"uint8",sint8:"sint8",unorm8:"uint8",snorm8:"sint8",uint16:"uint16",sint16:"sint16",unorm16:"uint16",snorm16:"sint16",float16:"float16",float32:"float32",uint32:"uint32",sint32:"sint32"},s={uint8:1,sint8:1,uint16:2,sint16:2,float16:2,float32:4,uint32:4,sint32:4}},7621:(e,t,n)=>{"use strict";n.d(t,{w:()=>r});var i=n(2112);function r(e){let t;e.endsWith("-webgl")&&(e.replace("-webgl",""),t=!0);const[n,r]=e.split("x"),s=n,o=r?parseInt(r):1,a=(0,i.l)(s),l={type:s,components:o,byteLength:a.byteLength*o,integer:a.integer,signed:a.signed,normalized:a.normalized};return t&&(l.webglOnly=!0),l}},1649:(e,t,n)=>{"use strict";let i;function r(e){return(!i||i.byteLength<e)&&(i=new ArrayBuffer(e)),i}function s(e,t){return new e(r(e.BYTES_PER_ELEMENT*t),0,t)}n.d(t,{X:()=>s,o:()=>r})},3522:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});const i=new(n(5593).t)({id:"luma.gl"})},1166:(e,t,n)=>{"use strict";n.d(t,{L:()=>r});const i={};function r(e){void 0===e&&(e="id"),i[e]=i[e]||1;return e+"-"+i[e]++}},4327:(e,t,n)=>{"use strict";n.d(t,{Dt:()=>s,Qj:()=>r,yt:()=>o});let i="";function r(e){i=e}async function s(e,t){const n=new Image;return n.crossOrigin=(null==t?void 0:t.crossOrigin)||"anonymous",n.src=e.startsWith("http")?e:i+e,await n.decode(),await createImageBitmap(n)}async function o(e,t){return await new Promise(((n,r)=>{try{const s=new Image;s.onload=()=>n(s),s.onerror=()=>r(new Error("Could not load image "+e+".")),s.crossOrigin=(null==t?void 0:t.crossOrigin)||"anonymous",s.src=e.startsWith("http")?e:i+e}catch(s){r(s)}}))}},3101:(e,t,n)=>{"use strict";n.d(t,{BA:()=>i.BA,Gk:()=>i.Gk,HH:()=>i.HH,Jh:()=>i.Jh,LL:()=>i.LL,MV:()=>i.MV,PZ:()=>i.PZ,Xb:()=>i.Xb,YE:()=>i.YE,Z5:()=>i.Z5,ZM:()=>i.ZM,_j:()=>i._j,gl:()=>i.gl,k9:()=>i.k9,rq:()=>i.rq,y3:()=>i.y3,yt:()=>i.yt,zW:()=>i.zW,zk:()=>i.zk});var i=n(2764)},2764:(e,t,n)=>{"use strict";n.d(t,{PZ:()=>Us,gl:()=>Gs,MV:()=>Xs,k9:()=>js,zW:()=>Ws,Jh:()=>Ks,zk:()=>$s,y3:()=>eo,Gk:()=>zs,LL:()=>Hs,BA:()=>Ys,_j:()=>Vs,YE:()=>qs,ZM:()=>Qs,Z5:()=>ks,Xb:()=>to,rq:()=>Js,yt:()=>Zs,HH:()=>no});var i=n(6540),r=n(6254);const s=e=>""+e;var o=n(5056),a=n(3522);function l(e){return Array.isArray(e)?0===e.length||"number"==typeof e[0]:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}(e)}class c{constructor(e){if(this.uniforms={},this.modifiedUniforms={},this.modified=!0,this.bindingLayout={},this.needsRedraw="initialized",this.name=(null==e?void 0:e.name)||"unnamed",null!=e&&e.name&&null!=e&&e.shaderLayout){var t;const n=null==e||null==(t=e.shaderLayout.bindings)?void 0:t.find((t=>"uniform"===t.type&&t.name===(null==e?void 0:e.name)));if(!n)throw new Error(null==e?void 0:e.name);const i=n;for(const e of i.uniforms||[])this.bindingLayout[e.name]=e}}setUniforms(e){for(const[t,n]of Object.entries(e))this._setUniform(t,n),this.needsRedraw||this.setNeedsRedraw(this.name+"."+t+"="+n)}setNeedsRedraw(e){this.needsRedraw=this.needsRedraw||e}getAllUniforms(){return this.modifiedUniforms={},this.needsRedraw=!1,this.uniforms||{}}_setUniform(e,t){var n;(function(e,t,n){if(void 0===n&&(n=16),e!==t)return!1;const i=e,r=t;if(!l(i))return!1;if(l(r)&&i.length===r.length)for(let s=0;s<i.length;++s)if(r[s]!==i[s])return!1;return!0})(this.uniforms[e],t)||(this.uniforms[e]=l(n=t)?n.slice():n,this.modifiedUniforms[e]=!0,this.modified=!0)}}const u={f32:{type:"f32",components:1},i32:{type:"i32",components:1},u32:{type:"u32",components:1},"vec2<f32>":{type:"f32",components:2},"vec3<f32>":{type:"f32",components:3},"vec4<f32>":{type:"f32",components:4},"vec2<i32>":{type:"i32",components:2},"vec3<i32>":{type:"i32",components:3},"vec4<i32>":{type:"i32",components:4},"vec2<u32>":{type:"u32",components:2},"vec3<u32>":{type:"u32",components:3},"vec4<u32>":{type:"u32",components:4},"mat2x2<f32>":{type:"f32",components:4},"mat2x3<f32>":{type:"f32",components:6},"mat2x4<f32>":{type:"f32",components:8},"mat3x2<f32>":{type:"f32",components:6},"mat3x3<f32>":{type:"f32",components:9},"mat3x4<f32>":{type:"f32",components:12},"mat4x2<f32>":{type:"f32",components:8},"mat4x3<f32>":{type:"f32",components:12},"mat4x4<f32>":{type:"f32",components:16}};function h(e,t){switch(t){case 1:return e;case 2:return e+e%2;default:return e+(4-e%4)%4}}var d=n(1649);class _{constructor(e){this.layout={};let t=0;for(const[i,r]of Object.entries(e)){const e=u[r],{type:n,components:s}=e;t=h(t,s);const o=t;t+=s,this.layout[i]={type:n,size:s,offset:o}}t+=(4-t%4)%4;const n=4*t;this.byteLength=Math.max(n,1024)}getData(e){const t=Math.max(this.byteLength,1024),n=(0,d.o)(t),i={i32:new Int32Array(n),u32:new Uint32Array(n),f32:new Float32Array(n),f16:new Uint16Array(n)};for(const[r,s]of Object.entries(e)){const e=this.layout[r];if(!e){a.R.warn("Supplied uniform value "+r+" not present in uniform block layout")();continue}const{type:t,size:n,offset:o}=e,c=i[t];if(1===n){if("number"!=typeof s&&"boolean"!=typeof s){a.R.warn("Supplied value for single component uniform "+r+" is not a number: "+s)();continue}c[o]=Number(s)}else{if(!l(s)){a.R.warn("Supplied value for multi component / array uniform "+r+" is not a numeric array: "+s)();continue}c.set(s,o)}}return new Uint8Array(n)}has(e){return Boolean(this.layout[e])}get(e){return this.layout[e]}}class p{constructor(e){this.uniformBlocks=new Map,this.uniformBufferLayouts=new Map,this.uniformBuffers=new Map;for(const[t,n]of Object.entries(e)){const e=t,i=new _(n.uniformTypes||{});this.uniformBufferLayouts.set(e,i);const r=new c({name:t});r.setUniforms(n.defaultUniforms||{}),this.uniformBlocks.set(e,r)}}destroy(){for(const e of this.uniformBuffers.values())e.destroy()}setUniforms(e){for(const[n,i]of Object.entries(e)){var t;null==(t=this.uniformBlocks.get(n))||t.setUniforms(i)}this.updateUniformBuffers()}getUniformBufferByteLength(e){var t;return(null==(t=this.uniformBufferLayouts.get(e))?void 0:t.byteLength)||0}getUniformBufferData(e){var t,n;const i=(null==(t=this.uniformBlocks.get(e))?void 0:t.getAllUniforms())||{};return null==(n=this.uniformBufferLayouts.get(e))?void 0:n.getData(i)}createUniformBuffer(e,t,n){n&&this.setUniforms(n);const i=this.getUniformBufferByteLength(t),r=e.createBuffer({usage:o.h.UNIFORM|o.h.COPY_DST,byteLength:i}),s=this.getUniformBufferData(t);return r.write(s),r}getManagedUniformBuffer(e,t){if(!this.uniformBuffers.get(t)){const n=this.getUniformBufferByteLength(t),i=e.createBuffer({usage:o.h.UNIFORM|o.h.COPY_DST,byteLength:n});this.uniformBuffers.set(t,i)}return this.uniformBuffers.get(t)}updateUniformBuffers(){let e=!1;for(const t of this.uniformBlocks.keys()){const n=this.updateUniformBuffer(t);e||(e=n)}return e&&a.R.log(3,"UniformStore.updateUniformBuffers(): "+e)(),e}updateUniformBuffer(e){const t=this.uniformBlocks.get(e);let n=!1;if(this.uniformBuffers.get(e)&&null!=t&&t.needsRedraw){var i;n||(n=t.needsRedraw);const r=this.getUniformBufferData(e),s=this.uniformBuffers.get(e);null==s||s.write(r);const o=null==(i=this.uniformBlocks.get(e))?void 0:i.getAllUniforms();a.R.log(4,"Writing to uniform buffer "+String(e),r,o)()}return n}}class f{constructor(e){}async onInitialize(e){return null}}let g=1,m=1;class E{constructor(){this.time=0,this.channels=new Map,this.animations=new Map,this.playing=!1,this.lastEngineTime=-1}addChannel(e){const{delay:t=0,duration:n=Number.POSITIVE_INFINITY,rate:i=1,repeat:r=1}=e,s=g++,o={time:0,delay:t,duration:n,rate:i,repeat:r};return this._setChannelTime(o,this.time),this.channels.set(s,o),s}removeChannel(e){this.channels.delete(e);for(const[t,n]of this.animations)n.channel===e&&this.detachAnimation(t)}isFinished(e){const t=this.channels.get(e);return void 0!==t&&this.time>=t.delay+t.duration*t.repeat}getTime(e){if(void 0===e)return this.time;const t=this.channels.get(e);return void 0===t?-1:t.time}setTime(e){this.time=Math.max(0,e);const t=this.channels.values();for(const i of t)this._setChannelTime(i,this.time);const n=this.animations.values();for(const i of n){const{animation:e,channel:t}=i;e.setTime(this.getTime(t))}}play(){this.playing=!0}pause(){this.playing=!1,this.lastEngineTime=-1}reset(){this.setTime(0)}attachAnimation(e,t){const n=m++;return this.animations.set(n,{animation:e,channel:t}),e.setTime(this.getTime(t)),n}detachAnimation(e){this.animations.delete(e)}update(e){this.playing&&(-1===this.lastEngineTime&&(this.lastEngineTime=e),this.setTime(this.time+(e-this.lastEngineTime)),this.lastEngineTime=e)}_setChannelTime(e,t){const n=t-e.delay;n>=e.duration*e.repeat?e.time=e.duration*e.rate:(e.time=Math.max(0,n)%e.duration,e.time*=e.rate)}}class A{constructor(e){this.startIndex=-1,this.endIndex=-1,this.factor=0,this.times=[],this.values=[],this._lastTime=-1,this.setKeyFrames(e),this.setTime(0)}setKeyFrames(e){const t=e.length;this.times.length=t,this.values.length=t;for(let n=0;n<t;++n)this.times[n]=e[n][0],this.values[n]=e[n][1];this._calculateKeys(this._lastTime)}setTime(e){(e=Math.max(0,e))!==this._lastTime&&(this._calculateKeys(e),this._lastTime=e)}getStartTime(){return this.times[this.startIndex]}getEndTime(){return this.times[this.endIndex]}getStartData(){return this.values[this.startIndex]}getEndData(){return this.values[this.endIndex]}_calculateKeys(e){let t=0;const n=this.times.length;for(t=0;t<n-2&&!(this.times[t+1]>e);++t);this.startIndex=t,this.endIndex=t+1;const i=this.times[this.startIndex],r=this.times[this.endIndex];this.factor=Math.min(Math.max(0,(e-i)/(r-i)),1)}}var R,v,T,S,b,C=n(4353),I=n(7083),N=n(5768),y=n(3145),L=n(7959);function P(e,t,n){if(!t||t>4)throw new Error("size "+t);const i=t;let r=function(e){const t=ArrayBuffer.isView(e)?e.constructor:e;switch(t){case Float32Array:return"float32";case Uint16Array:return"uint16";case Uint32Array:return"uint32";case Uint8Array:case Uint8ClampedArray:return"uint8";case Int8Array:return"sint8";case Int16Array:return"sint16";case Int32Array:return"sint32";default:throw new Error(t.constructor.name)}}(e);if("uint8"===r||"sint8"===r){if(1===i||3===i)throw new Error("size: "+t);return n&&(r=r.replace("int","norm")),r+"x"+i}if("uint16"===r||"sint16"===r){if(1===i||3===i)throw new Error("size: "+t);return n&&(r=r.replace("int","norm")),r+"x"+i}return 1===i?r:r+"x"+i}class w{constructor(){this.constants=new Map,this.aliases=new Map,this.structs=new Map}}class x{constructor(){}get isAstNode(){return!0}get astNodeType(){return""}evaluate(e){throw new Error("Cannot evaluate node")}evaluateString(e){return this.evaluate(e).toString()}}class M extends x{constructor(){super()}}class O extends M{constructor(e,t,n,i){super(),this.name=e,this.args=t,this.returnType=n,this.body=i}get astNodeType(){return"function"}}class F extends M{constructor(e){super(),this.expression=e}get astNodeType(){return"staticAssert"}}class D extends M{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"while"}}class B extends M{constructor(e){super(),this.body=e}get astNodeType(){return"continuing"}}class U extends M{constructor(e,t,n,i){super(),this.init=e,this.condition=t,this.increment=n,this.body=i}get astNodeType(){return"for"}}class G extends M{constructor(e,t,n,i,r){super(),this.name=e,this.type=t,this.storage=n,this.access=i,this.value=r}get astNodeType(){return"var"}}class k extends M{constructor(e,t,n){super(),this.name=e,this.type=t,this.value=n}get astNodeType(){return"override"}}class H extends M{constructor(e,t,n,i,r){super(),this.name=e,this.type=t,this.storage=n,this.access=i,this.value=r}get astNodeType(){return"let"}}class V extends M{constructor(e,t,n,i,r){super(),this.name=e,this.type=t,this.storage=n,this.access=i,this.value=r}get astNodeType(){return"const"}evaluate(e){return this.value.evaluate(e)}}!function(e){e.increment="++",e.decrement="--"}(R||(R={})),function(e){e.parse=function(t){const n=t;if("parse"==n)throw new Error("Invalid value for IncrementOperator");return e[n]}}(R||(R={}));class X extends M{constructor(e,t){super(),this.operator=e,this.variable=t}get astNodeType(){return"increment"}}!function(e){e.assign="=",e.addAssign="+=",e.subtractAssin="-=",e.multiplyAssign="*=",e.divideAssign="/=",e.moduloAssign="%=",e.andAssign="&=",e.orAssign="|=",e.xorAssign="^=",e.shiftLeftAssign="<<=",e.shiftRightAssign=">>="}(v||(v={})),function(e){e.parse=function(t){const n=t;if("parse"==n)throw new Error("Invalid value for AssignOperator");return e[n]}}(v||(v={}));class W extends M{constructor(e,t,n){super(),this.operator=e,this.variable=t,this.value=n}get astNodeType(){return"assign"}}class K extends M{constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return"call"}}class z extends M{constructor(e,t){super(),this.body=e,this.continuing=t}get astNodeType(){return"loop"}}class Y extends M{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"body"}}class j extends M{constructor(e,t,n,i){super(),this.condition=e,this.body=t,this.elseif=n,this.else=i}get astNodeType(){return"if"}}class q extends M{constructor(e){super(),this.value=e}get astNodeType(){return"return"}}class Q extends M{constructor(e){super(),this.name=e}get astNodeType(){return"enable"}}class Z extends M{constructor(e,t){super(),this.name=e,this.type=t}get astNodeType(){return"alias"}}class J extends M{constructor(){super()}get astNodeType(){return"discard"}}class $ extends M{constructor(){super()}get astNodeType(){return"break"}}class ee extends M{constructor(){super()}get astNodeType(){return"continue"}}class te extends M{constructor(e){super(),this.name=e}get astNodeType(){return"type"}get isStruct(){return!1}get isArray(){return!1}}class ne extends te{constructor(e,t){super(e),this.members=t}get astNodeType(){return"struct"}get isStruct(){return!0}getMemberIndex(e){for(let t=0;t<this.members.length;t++)if(this.members[t].name==e)return t;return-1}}class ie extends te{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"template"}}class re extends te{constructor(e,t,n,i){super(e),this.storage=t,this.type=n,this.access=i}get astNodeType(){return"pointer"}}class se extends te{constructor(e,t,n,i){super(e),this.attributes=t,this.format=n,this.count=i}get astNodeType(){return"array"}get isArray(){return!0}}class oe extends te{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"sampler"}}class ae extends x{constructor(){super()}}class le extends ae{constructor(e){super(),this.value=e}get astNodeType(){return"stringExpr"}toString(){return this.value}evaluateString(){return this.value}}class ce extends ae{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return"createExpr"}}class ue extends ae{constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return"callExpr"}evaluate(e){switch(this.name){case"abs":return Math.abs(this.args[0].evaluate(e));case"acos":return Math.acos(this.args[0].evaluate(e));case"acosh":return Math.acosh(this.args[0].evaluate(e));case"asin":return Math.asin(this.args[0].evaluate(e));case"asinh":return Math.asinh(this.args[0].evaluate(e));case"atan":return Math.atan(this.args[0].evaluate(e));case"atan2":return Math.atan2(this.args[0].evaluate(e),this.args[1].evaluate(e));case"atanh":return Math.atanh(this.args[0].evaluate(e));case"ceil":return Math.ceil(this.args[0].evaluate(e));case"clamp":return Math.min(Math.max(this.args[0].evaluate(e),this.args[1].evaluate(e)),this.args[2].evaluate(e));case"cos":return Math.cos(this.args[0].evaluate(e));case"degrees":return 180*this.args[0].evaluate(e)/Math.PI;case"distance":return Math.sqrt(Math.pow(this.args[0].evaluate(e)-this.args[1].evaluate(e),2));case"dot":case"exp":return Math.exp(this.args[0].evaluate(e));case"exp2":return Math.pow(2,this.args[0].evaluate(e));case"floor":return Math.floor(this.args[0].evaluate(e));case"fma":return this.args[0].evaluate(e)*this.args[1].evaluate(e)+this.args[2].evaluate(e);case"fract":case"modf":return this.args[0].evaluate(e)-Math.floor(this.args[0].evaluate(e));case"inverseSqrt":return 1/Math.sqrt(this.args[0].evaluate(e));case"log":return Math.log(this.args[0].evaluate(e));case"log2":return Math.log2(this.args[0].evaluate(e));case"max":return Math.max(this.args[0].evaluate(e),this.args[1].evaluate(e));case"min":return Math.min(this.args[0].evaluate(e),this.args[1].evaluate(e));case"mix":return this.args[0].evaluate(e)*(1-this.args[2].evaluate(e))+this.args[1].evaluate(e)*this.args[2].evaluate(e);case"pow":return Math.pow(this.args[0].evaluate(e),this.args[1].evaluate(e));case"radians":return this.args[0].evaluate(e)*Math.PI/180;case"round":return Math.round(this.args[0].evaluate(e));case"sign":return Math.sign(this.args[0].evaluate(e));case"sin":return Math.sin(this.args[0].evaluate(e));case"sinh":return Math.sinh(this.args[0].evaluate(e));case"saturate":return Math.min(Math.max(this.args[0].evaluate(e),0),1);case"smoothstep":return this.args[0].evaluate(e)*this.args[0].evaluate(e)*(3-2*this.args[0].evaluate(e));case"sqrt":return Math.sqrt(this.args[0].evaluate(e));case"step":return this.args[0].evaluate(e)<this.args[1].evaluate(e)?0:1;case"tan":return Math.tan(this.args[0].evaluate(e));case"tanh":return Math.tanh(this.args[0].evaluate(e));case"trunc":return Math.trunc(this.args[0].evaluate(e));default:throw new Error("Non const function: "+this.name)}}}class he extends ae{constructor(e){super(),this.name=e}get astNodeType(){return"varExpr"}}class de extends ae{constructor(e,t){super(),this.name=e,this.initializer=t}get astNodeType(){return"constExpr"}evaluate(e){var t,n;if(this.initializer instanceof ce){const i=null===(t=this.postfix)||void 0===t?void 0:t.evaluateString(e),r=null===(n=this.initializer.type)||void 0===n?void 0:n.name,s=e.structs.get(r),o=null==s?void 0:s.getMemberIndex(i);if(-1!=o){return this.initializer.args[o].evaluate(e)}console.log(o)}return this.initializer.evaluate(e)}}class _e extends ae{constructor(e){super(),this.value=e}get astNodeType(){return"literalExpr"}evaluate(){return this.value}}class pe extends ae{constructor(e,t){super(),this.type=e,this.value=t}get astNodeType(){return"bitcastExpr"}}class fe extends ae{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return"typecastExpr"}evaluate(e){return this.args[0].evaluate(e)}}class ge extends ae{constructor(e){super(),this.contents=e}get astNodeType(){return"groupExpr"}evaluate(e){return this.contents[0].evaluate(e)}}class me extends ae{constructor(){super()}}class Ee extends me{constructor(e,t){super(),this.operator=e,this.right=t}get astNodeType(){return"unaryOp"}evaluate(e){switch(this.operator){case"+":return this.right.evaluate(e);case"-":return-this.right.evaluate(e);case"!":return this.right.evaluate(e)?0:1;case"~":return~this.right.evaluate(e);default:throw new Error("Unknown unary operator: "+this.operator)}}}class Ae extends me{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}get astNodeType(){return"binaryOp"}evaluate(e){switch(this.operator){case"+":return this.left.evaluate(e)+this.right.evaluate(e);case"-":return this.left.evaluate(e)-this.right.evaluate(e);case"*":return this.left.evaluate(e)*this.right.evaluate(e);case"/":return this.left.evaluate(e)/this.right.evaluate(e);case"%":return this.left.evaluate(e)%this.right.evaluate(e);case"==":return this.left.evaluate(e)==this.right.evaluate(e)?1:0;case"!=":return this.left.evaluate(e)!=this.right.evaluate(e)?1:0;case"<":return this.left.evaluate(e)<this.right.evaluate(e)?1:0;case">":return this.left.evaluate(e)>this.right.evaluate(e)?1:0;case"<=":return this.left.evaluate(e)<=this.right.evaluate(e)?1:0;case">=":return this.left.evaluate(e)>=this.right.evaluate(e)?1:0;case"&&":return this.left.evaluate(e)&&this.right.evaluate(e)?1:0;case"||":return this.left.evaluate(e)||this.right.evaluate(e)?1:0;default:throw new Error("Unknown operator "+this.operator)}}}class Re extends x{constructor(){super()}}class ve extends Re{constructor(e,t){super(),this.selector=e,this.body=t}get astNodeType(){return"case"}}class Te extends Re{constructor(e){super(),this.body=e}get astNodeType(){return"default"}}class Se extends x{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"argument"}}class be extends x{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"elseif"}}class Ce extends x{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"member"}}class Ie extends x{constructor(e,t){super(),this.name=e,this.value=t}get astNodeType(){return"attribute"}}!function(e){e[e.token=0]="token",e[e.keyword=1]="keyword",e[e.reserved=2]="reserved"}(S||(S={}));class Ne{constructor(e,t,n){this.name=e,this.type=t,this.rule=n}toString(){return this.name}}class ye{}T=ye,ye.none=new Ne("",S.reserved,""),ye.eof=new Ne("EOF",S.token,""),ye.reserved={asm:new Ne("asm",S.reserved,"asm"),bf16:new Ne("bf16",S.reserved,"bf16"),do:new Ne("do",S.reserved,"do"),enum:new Ne("enum",S.reserved,"enum"),f16:new Ne("f16",S.reserved,"f16"),f64:new Ne("f64",S.reserved,"f64"),handle:new Ne("handle",S.reserved,"handle"),i8:new Ne("i8",S.reserved,"i8"),i16:new Ne("i16",S.reserved,"i16"),i64:new Ne("i64",S.reserved,"i64"),mat:new Ne("mat",S.reserved,"mat"),premerge:new Ne("premerge",S.reserved,"premerge"),regardless:new Ne("regardless",S.reserved,"regardless"),typedef:new Ne("typedef",S.reserved,"typedef"),u8:new Ne("u8",S.reserved,"u8"),u16:new Ne("u16",S.reserved,"u16"),u64:new Ne("u64",S.reserved,"u64"),unless:new Ne("unless",S.reserved,"unless"),using:new Ne("using",S.reserved,"using"),vec:new Ne("vec",S.reserved,"vec"),void:new Ne("void",S.reserved,"void")},ye.keywords={array:new Ne("array",S.keyword,"array"),atomic:new Ne("atomic",S.keyword,"atomic"),bool:new Ne("bool",S.keyword,"bool"),f32:new Ne("f32",S.keyword,"f32"),i32:new Ne("i32",S.keyword,"i32"),mat2x2:new Ne("mat2x2",S.keyword,"mat2x2"),mat2x3:new Ne("mat2x3",S.keyword,"mat2x3"),mat2x4:new Ne("mat2x4",S.keyword,"mat2x4"),mat3x2:new Ne("mat3x2",S.keyword,"mat3x2"),mat3x3:new Ne("mat3x3",S.keyword,"mat3x3"),mat3x4:new Ne("mat3x4",S.keyword,"mat3x4"),mat4x2:new Ne("mat4x2",S.keyword,"mat4x2"),mat4x3:new Ne("mat4x3",S.keyword,"mat4x3"),mat4x4:new Ne("mat4x4",S.keyword,"mat4x4"),ptr:new Ne("ptr",S.keyword,"ptr"),sampler:new Ne("sampler",S.keyword,"sampler"),sampler_comparison:new Ne("sampler_comparison",S.keyword,"sampler_comparison"),struct:new Ne("struct",S.keyword,"struct"),texture_1d:new Ne("texture_1d",S.keyword,"texture_1d"),texture_2d:new Ne("texture_2d",S.keyword,"texture_2d"),texture_2d_array:new Ne("texture_2d_array",S.keyword,"texture_2d_array"),texture_3d:new Ne("texture_3d",S.keyword,"texture_3d"),texture_cube:new Ne("texture_cube",S.keyword,"texture_cube"),texture_cube_array:new Ne("texture_cube_array",S.keyword,"texture_cube_array"),texture_multisampled_2d:new Ne("texture_multisampled_2d",S.keyword,"texture_multisampled_2d"),texture_storage_1d:new Ne("texture_storage_1d",S.keyword,"texture_storage_1d"),texture_storage_2d:new Ne("texture_storage_2d",S.keyword,"texture_storage_2d"),texture_storage_2d_array:new Ne("texture_storage_2d_array",S.keyword,"texture_storage_2d_array"),texture_storage_3d:new Ne("texture_storage_3d",S.keyword,"texture_storage_3d"),texture_depth_2d:new Ne("texture_depth_2d",S.keyword,"texture_depth_2d"),texture_depth_2d_array:new Ne("texture_depth_2d_array",S.keyword,"texture_depth_2d_array"),texture_depth_cube:new Ne("texture_depth_cube",S.keyword,"texture_depth_cube"),texture_depth_cube_array:new Ne("texture_depth_cube_array",S.keyword,"texture_depth_cube_array"),texture_depth_multisampled_2d:new Ne("texture_depth_multisampled_2d",S.keyword,"texture_depth_multisampled_2d"),texture_external:new Ne("texture_external",S.keyword,"texture_external"),u32:new Ne("u32",S.keyword,"u32"),vec2:new Ne("vec2",S.keyword,"vec2"),vec3:new Ne("vec3",S.keyword,"vec3"),vec4:new Ne("vec4",S.keyword,"vec4"),bitcast:new Ne("bitcast",S.keyword,"bitcast"),block:new Ne("block",S.keyword,"block"),break:new Ne("break",S.keyword,"break"),case:new Ne("case",S.keyword,"case"),continue:new Ne("continue",S.keyword,"continue"),continuing:new Ne("continuing",S.keyword,"continuing"),default:new Ne("default",S.keyword,"default"),discard:new Ne("discard",S.keyword,"discard"),else:new Ne("else",S.keyword,"else"),enable:new Ne("enable",S.keyword,"enable"),fallthrough:new Ne("fallthrough",S.keyword,"fallthrough"),false:new Ne("false",S.keyword,"false"),fn:new Ne("fn",S.keyword,"fn"),for:new Ne("for",S.keyword,"for"),function:new Ne("function",S.keyword,"function"),if:new Ne("if",S.keyword,"if"),let:new Ne("let",S.keyword,"let"),const:new Ne("const",S.keyword,"const"),loop:new Ne("loop",S.keyword,"loop"),while:new Ne("while",S.keyword,"while"),private:new Ne("private",S.keyword,"private"),read:new Ne("read",S.keyword,"read"),read_write:new Ne("read_write",S.keyword,"read_write"),return:new Ne("return",S.keyword,"return"),storage:new Ne("storage",S.keyword,"storage"),switch:new Ne("switch",S.keyword,"switch"),true:new Ne("true",S.keyword,"true"),alias:new Ne("alias",S.keyword,"alias"),type:new Ne("type",S.keyword,"type"),uniform:new Ne("uniform",S.keyword,"uniform"),var:new Ne("var",S.keyword,"var"),override:new Ne("override",S.keyword,"override"),workgroup:new Ne("workgroup",S.keyword,"workgroup"),write:new Ne("write",S.keyword,"write"),r8unorm:new Ne("r8unorm",S.keyword,"r8unorm"),r8snorm:new Ne("r8snorm",S.keyword,"r8snorm"),r8uint:new Ne("r8uint",S.keyword,"r8uint"),r8sint:new Ne("r8sint",S.keyword,"r8sint"),r16uint:new Ne("r16uint",S.keyword,"r16uint"),r16sint:new Ne("r16sint",S.keyword,"r16sint"),r16float:new Ne("r16float",S.keyword,"r16float"),rg8unorm:new Ne("rg8unorm",S.keyword,"rg8unorm"),rg8snorm:new Ne("rg8snorm",S.keyword,"rg8snorm"),rg8uint:new Ne("rg8uint",S.keyword,"rg8uint"),rg8sint:new Ne("rg8sint",S.keyword,"rg8sint"),r32uint:new Ne("r32uint",S.keyword,"r32uint"),r32sint:new Ne("r32sint",S.keyword,"r32sint"),r32float:new Ne("r32float",S.keyword,"r32float"),rg16uint:new Ne("rg16uint",S.keyword,"rg16uint"),rg16sint:new Ne("rg16sint",S.keyword,"rg16sint"),rg16float:new Ne("rg16float",S.keyword,"rg16float"),rgba8unorm:new Ne("rgba8unorm",S.keyword,"rgba8unorm"),rgba8unorm_srgb:new Ne("rgba8unorm_srgb",S.keyword,"rgba8unorm_srgb"),rgba8snorm:new Ne("rgba8snorm",S.keyword,"rgba8snorm"),rgba8uint:new Ne("rgba8uint",S.keyword,"rgba8uint"),rgba8sint:new Ne("rgba8sint",S.keyword,"rgba8sint"),bgra8unorm:new Ne("bgra8unorm",S.keyword,"bgra8unorm"),bgra8unorm_srgb:new Ne("bgra8unorm_srgb",S.keyword,"bgra8unorm_srgb"),rgb10a2unorm:new Ne("rgb10a2unorm",S.keyword,"rgb10a2unorm"),rg11b10float:new Ne("rg11b10float",S.keyword,"rg11b10float"),rg32uint:new Ne("rg32uint",S.keyword,"rg32uint"),rg32sint:new Ne("rg32sint",S.keyword,"rg32sint"),rg32float:new Ne("rg32float",S.keyword,"rg32float"),rgba16uint:new Ne("rgba16uint",S.keyword,"rgba16uint"),rgba16sint:new Ne("rgba16sint",S.keyword,"rgba16sint"),rgba16float:new Ne("rgba16float",S.keyword,"rgba16float"),rgba32uint:new Ne("rgba32uint",S.keyword,"rgba32uint"),rgba32sint:new Ne("rgba32sint",S.keyword,"rgba32sint"),rgba32float:new Ne("rgba32float",S.keyword,"rgba32float"),static_assert:new Ne("static_assert",S.keyword,"static_assert")},ye.tokens={decimal_float_literal:new Ne("decimal_float_literal",S.token,/((-?[0-9]*\.[0-9]+|-?[0-9]+\.[0-9]*)((e|E)(\+|-)?[0-9]+)?f?)|(-?[0-9]+(e|E)(\+|-)?[0-9]+f?)|([0-9]+f)/),hex_float_literal:new Ne("hex_float_literal",S.token,/-?0x((([0-9a-fA-F]*\.[0-9a-fA-F]+|[0-9a-fA-F]+\.[0-9a-fA-F]*)((p|P)(\+|-)?[0-9]+f?)?)|([0-9a-fA-F]+(p|P)(\+|-)?[0-9]+f?))/),int_literal:new Ne("int_literal",S.token,/-?0x[0-9a-fA-F]+|0i?|-?[1-9][0-9]*i?/),uint_literal:new Ne("uint_literal",S.token,/0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/),ident:new Ne("ident",S.token,/[a-zA-Z][0-9a-zA-Z_]*/),and:new Ne("and",S.token,"&"),and_and:new Ne("and_and",S.token,"&&"),arrow:new Ne("arrow ",S.token,"->"),attr:new Ne("attr",S.token,"@"),attr_left:new Ne("attr_left",S.token,"[["),attr_right:new Ne("attr_right",S.token,"]]"),forward_slash:new Ne("forward_slash",S.token,"/"),bang:new Ne("bang",S.token,"!"),bracket_left:new Ne("bracket_left",S.token,"["),bracket_right:new Ne("bracket_right",S.token,"]"),brace_left:new Ne("brace_left",S.token,"{"),brace_right:new Ne("brace_right",S.token,"}"),colon:new Ne("colon",S.token,":"),comma:new Ne("comma",S.token,","),equal:new Ne("equal",S.token,"="),equal_equal:new Ne("equal_equal",S.token,"=="),not_equal:new Ne("not_equal",S.token,"!="),greater_than:new Ne("greater_than",S.token,">"),greater_than_equal:new Ne("greater_than_equal",S.token,">="),shift_right:new Ne("shift_right",S.token,">>"),less_than:new Ne("less_than",S.token,"<"),less_than_equal:new Ne("less_than_equal",S.token,"<="),shift_left:new Ne("shift_left",S.token,"<<"),modulo:new Ne("modulo",S.token,"%"),minus:new Ne("minus",S.token,"-"),minus_minus:new Ne("minus_minus",S.token,"--"),period:new Ne("period",S.token,"."),plus:new Ne("plus",S.token,"+"),plus_plus:new Ne("plus_plus",S.token,"++"),or:new Ne("or",S.token,"|"),or_or:new Ne("or_or",S.token,"||"),paren_left:new Ne("paren_left",S.token,"("),paren_right:new Ne("paren_right",S.token,")"),semicolon:new Ne("semicolon",S.token,";"),star:new Ne("star",S.token,"*"),tilde:new Ne("tilde",S.token,"~"),underscore:new Ne("underscore",S.token,"_"),xor:new Ne("xor",S.token,"^"),plus_equal:new Ne("plus_equal",S.token,"+="),minus_equal:new Ne("minus_equal",S.token,"-="),times_equal:new Ne("times_equal",S.token,"*="),division_equal:new Ne("division_equal",S.token,"/="),modulo_equal:new Ne("modulo_equal",S.token,"%="),and_equal:new Ne("and_equal",S.token,"&="),or_equal:new Ne("or_equal",S.token,"|="),xor_equal:new Ne("xor_equal",S.token,"^="),shift_right_equal:new Ne("shift_right_equal",S.token,">>="),shift_left_equal:new Ne("shift_left_equal",S.token,"<<=")},ye.storage_class=[T.keywords.function,T.keywords.private,T.keywords.workgroup,T.keywords.uniform,T.keywords.storage],ye.access_mode=[T.keywords.read,T.keywords.write,T.keywords.read_write],ye.sampler_type=[T.keywords.sampler,T.keywords.sampler_comparison],ye.sampled_texture_type=[T.keywords.texture_1d,T.keywords.texture_2d,T.keywords.texture_2d_array,T.keywords.texture_3d,T.keywords.texture_cube,T.keywords.texture_cube_array],ye.multisampled_texture_type=[T.keywords.texture_multisampled_2d],ye.storage_texture_type=[T.keywords.texture_storage_1d,T.keywords.texture_storage_2d,T.keywords.texture_storage_2d_array,T.keywords.texture_storage_3d],ye.depth_texture_type=[T.keywords.texture_depth_2d,T.keywords.texture_depth_2d_array,T.keywords.texture_depth_cube,T.keywords.texture_depth_cube_array,T.keywords.texture_depth_multisampled_2d],ye.texture_external_type=[T.keywords.texture_external],ye.any_texture_type=[...T.sampled_texture_type,...T.multisampled_texture_type,...T.storage_texture_type,...T.depth_texture_type,...T.texture_external_type],ye.texel_format=[T.keywords.r8unorm,T.keywords.r8snorm,T.keywords.r8uint,T.keywords.r8sint,T.keywords.r16uint,T.keywords.r16sint,T.keywords.r16float,T.keywords.rg8unorm,T.keywords.rg8snorm,T.keywords.rg8uint,T.keywords.rg8sint,T.keywords.r32uint,T.keywords.r32sint,T.keywords.r32float,T.keywords.rg16uint,T.keywords.rg16sint,T.keywords.rg16float,T.keywords.rgba8unorm,T.keywords.rgba8unorm_srgb,T.keywords.rgba8snorm,T.keywords.rgba8uint,T.keywords.rgba8sint,T.keywords.bgra8unorm,T.keywords.bgra8unorm_srgb,T.keywords.rgb10a2unorm,T.keywords.rg11b10float,T.keywords.rg32uint,T.keywords.rg32sint,T.keywords.rg32float,T.keywords.rgba16uint,T.keywords.rgba16sint,T.keywords.rgba16float,T.keywords.rgba32uint,T.keywords.rgba32sint,T.keywords.rgba32float],ye.const_literal=[T.tokens.int_literal,T.tokens.uint_literal,T.tokens.decimal_float_literal,T.tokens.hex_float_literal,T.keywords.true,T.keywords.false],ye.literal_or_ident=[T.tokens.ident,T.tokens.int_literal,T.tokens.uint_literal,T.tokens.decimal_float_literal,T.tokens.hex_float_literal],ye.element_count_expression=[T.tokens.int_literal,T.tokens.uint_literal,T.tokens.ident],ye.template_types=[T.keywords.vec2,T.keywords.vec3,T.keywords.vec4,T.keywords.mat2x2,T.keywords.mat2x3,T.keywords.mat2x4,T.keywords.mat3x2,T.keywords.mat3x3,T.keywords.mat3x4,T.keywords.mat4x2,T.keywords.mat4x3,T.keywords.mat4x4,T.keywords.atomic,T.keywords.bitcast,...T.any_texture_type],ye.attribute_name=[T.tokens.ident,T.keywords.block],ye.assignment_operators=[T.tokens.equal,T.tokens.plus_equal,T.tokens.minus_equal,T.tokens.times_equal,T.tokens.division_equal,T.tokens.modulo_equal,T.tokens.and_equal,T.tokens.or_equal,T.tokens.xor_equal,T.tokens.shift_right_equal,T.tokens.shift_left_equal],ye.increment_operators=[T.tokens.plus_plus,T.tokens.minus_minus];class Le{constructor(e,t,n){this.type=e,this.lexeme=t,this.line=n}toString(){return this.lexeme}isTemplateType(){return-1!=ye.template_types.indexOf(this.type)}isArrayType(){return this.type==ye.keywords.array}isArrayOrTemplateType(){return this.isArrayType()||this.isTemplateType()}}class Pe{constructor(e){this._tokens=[],this._start=0,this._current=0,this._line=1,this._source=null!=e?e:""}scanTokens(){for(;!this._isAtEnd();)if(this._start=this._current,!this.scanToken())throw"Invalid syntax at line "+this._line;return this._tokens.push(new Le(ye.eof,"",this._line)),this._tokens}scanToken(){let e=this._advance();if("\n"==e)return this._line++,!0;if(this._isWhitespace(e))return!0;if("/"==e){if("/"==this._peekAhead()){for(;"\n"!=e;){if(this._isAtEnd())return!0;e=this._advance()}return this._line++,!0}if("*"==this._peekAhead()){this._advance();let t=1;for(;t>0;){if(this._isAtEnd())return!0;if(e=this._advance(),"\n"==e)this._line++;else if("*"==e){if("/"==this._peekAhead()&&(this._advance(),t--,0==t))return!0}else"/"==e&&"*"==this._peekAhead()&&(this._advance(),t++)}return!0}}let t=ye.none;for(;;){let n=this._findType(e);const i=this._peekAhead();if(">"==e&&(">"==i||"="==i)){let e=!1,t=this._tokens.length-1;for(let n=0;n<5&&t>=0;++n,--t)if(this._tokens[t].type===ye.tokens.less_than){t>0&&this._tokens[t-1].isArrayOrTemplateType()&&(e=!0);break}if(e)return this._addToken(n),!0}if(n===ye.none){let i=e,r=0;const s=2;for(let e=0;e<s;++e)if(i+=this._peekAhead(e),n=this._findType(i),n!==ye.none){r=e;break}if(n===ye.none)return t!==ye.none&&(this._current--,this._addToken(t),!0);e=i,this._current+=r+1}if(t=n,this._isAtEnd())break;e+=this._advance()}return t!==ye.none&&(this._addToken(t),!0)}_findType(e){for(const t in ye.keywords){const n=ye.keywords[t];if(this._match(e,n.rule))return n}for(const t in ye.tokens){const n=ye.tokens[t];if(this._match(e,n.rule))return n}return ye.none}_match(e,t){if("string"==typeof t){if(t==e)return!0}else{const n=t.exec(e);if(n&&0==n.index&&n[0]==e)return!0}return!1}_isAtEnd(){return this._current>=this._source.length}_isWhitespace(e){return" "==e||"\t"==e||"\r"==e}_advance(e){void 0===e&&(e=0);let t=this._source[this._current];return e=e||0,e++,this._current+=e,t}_peekAhead(e){return void 0===e&&(e=0),e=e||0,this._current+e>=this._source.length?"\0":this._source[this._current+e]}_addToken(e){const t=this._source.substring(this._start,this._current);this._tokens.push(new Le(e,t,this._line))}}class we{constructor(){this._tokens=[],this._current=0,this._context=new w}parse(e){this._initialize(e);let t=[];for(;!this._isAtEnd();){const e=this._global_decl_or_directive();if(!e)break;t.push(e)}return t}_initialize(e){if(e)if("string"==typeof e){const t=new Pe(e);this._tokens=t.scanTokens()}else this._tokens=e;else this._tokens=[];this._current=0}_error(e,t){return console.error(e,t),{token:e,message:t,toString:function(){return""+t}}}_isAtEnd(){return this._current>=this._tokens.length||this._peek().type==ye.eof}_match(e){if(e instanceof Ne)return!!this._check(e)&&(this._advance(),!0);for(let t=0,n=e.length;t<n;++t){const n=e[t];if(this._check(n))return this._advance(),!0}return!1}_consume(e,t){if(this._check(e))return this._advance();throw this._error(this._peek(),t)}_check(e){if(this._isAtEnd())return!1;const t=this._peek();if(e instanceof Array){let n=t.type;return-1!=e.indexOf(n)}return t.type==e}_advance(){return this._isAtEnd()||this._current++,this._previous()}_peek(){return this._tokens[this._current]}_previous(){return this._tokens[this._current-1]}_global_decl_or_directive(){for(;this._match(ye.tokens.semicolon)&&!this._isAtEnd(););if(this._match(ye.keywords.alias)){const e=this._type_alias();return this._consume(ye.tokens.semicolon,"Expected ';'"),e}if(this._match(ye.keywords.enable)){const e=this._enable_directive();return this._consume(ye.tokens.semicolon,"Expected ';'"),e}const e=this._attribute();if(this._check(ye.keywords.var)){const t=this._global_variable_decl();return null!=t&&(t.attributes=e),this._consume(ye.tokens.semicolon,"Expected ';'."),t}if(this._check(ye.keywords.override)){const t=this._override_variable_decl();return null!=t&&(t.attributes=e),this._consume(ye.tokens.semicolon,"Expected ';'."),t}if(this._check(ye.keywords.let)){const t=this._global_let_decl();return null!=t&&(t.attributes=e),this._consume(ye.tokens.semicolon,"Expected ';'."),t}if(this._check(ye.keywords.const)){const t=this._global_const_decl();return null!=t&&(t.attributes=e),this._consume(ye.tokens.semicolon,"Expected ';'."),t}if(this._check(ye.keywords.struct)){const t=this._struct_decl();return null!=t&&(t.attributes=e),t}if(this._check(ye.keywords.fn)){const t=this._function_decl();return null!=t&&(t.attributes=e),t}return null}_function_decl(){if(!this._match(ye.keywords.fn))return null;const e=this._consume(ye.tokens.ident,"Expected function name.").toString();this._consume(ye.tokens.paren_left,"Expected '(' for function arguments.");const t=[];if(!this._check(ye.tokens.paren_right))do{if(this._check(ye.tokens.paren_right))break;const e=this._attribute(),n=this._consume(ye.tokens.ident,"Expected argument name.").toString();this._consume(ye.tokens.colon,"Expected ':' for argument type.");const i=this._attribute(),r=this._type_decl();null!=r&&(r.attributes=i,t.push(new Se(n,r,e)))}while(this._match(ye.tokens.comma));this._consume(ye.tokens.paren_right,"Expected ')' after function arguments.");let n=null;if(this._match(ye.tokens.arrow)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}const i=this._compound_statement();return new O(e,t,n,i)}_compound_statement(){const e=[];for(this._consume(ye.tokens.brace_left,"Expected '{' for block.");!this._check(ye.tokens.brace_right);){const t=this._statement();null!==t&&e.push(t)}return this._consume(ye.tokens.brace_right,"Expected '}' for block."),e}_statement(){for(;this._match(ye.tokens.semicolon)&&!this._isAtEnd(););if(this._check(ye.keywords.if))return this._if_statement();if(this._check(ye.keywords.switch))return this._switch_statement();if(this._check(ye.keywords.loop))return this._loop_statement();if(this._check(ye.keywords.for))return this._for_statement();if(this._check(ye.keywords.while))return this._while_statement();if(this._check(ye.keywords.continuing))return this._continuing_statement();if(this._check(ye.keywords.static_assert))return this._static_assert_statement();if(this._check(ye.tokens.brace_left))return this._compound_statement();let e=null;return e=this._check(ye.keywords.return)?this._return_statement():this._check([ye.keywords.var,ye.keywords.let,ye.keywords.const])?this._variable_statement():this._match(ye.keywords.discard)?new J:this._match(ye.keywords.break)?new $:this._match(ye.keywords.continue)?new ee:this._increment_decrement_statement()||this._func_call_statement()||this._assignment_statement(),null!=e&&this._consume(ye.tokens.semicolon,"Expected ';' after statement."),e}_static_assert_statement(){if(!this._match(ye.keywords.static_assert))return null;let e=this._optional_paren_expression();return new F(e)}_while_statement(){if(!this._match(ye.keywords.while))return null;let e=this._optional_paren_expression();const t=this._compound_statement();return new D(e,t)}_continuing_statement(){if(!this._match(ye.keywords.continuing))return null;const e=this._compound_statement();return new B(e)}_for_statement(){if(!this._match(ye.keywords.for))return null;this._consume(ye.tokens.paren_left,"Expected '('.");const e=this._check(ye.tokens.semicolon)?null:this._for_init();this._consume(ye.tokens.semicolon,"Expected ';'.");const t=this._check(ye.tokens.semicolon)?null:this._short_circuit_or_expression();this._consume(ye.tokens.semicolon,"Expected ';'.");const n=this._check(ye.tokens.paren_right)?null:this._for_increment();this._consume(ye.tokens.paren_right,"Expected ')'.");const i=this._compound_statement();return new U(e,t,n,i)}_for_init(){return this._variable_statement()||this._func_call_statement()||this._assignment_statement()}_for_increment(){return this._func_call_statement()||this._increment_decrement_statement()||this._assignment_statement()}_variable_statement(){if(this._check(ye.keywords.var)){const e=this._variable_decl();if(null===e)throw this._error(this._peek(),"Variable declaration expected.");let t=null;return this._match(ye.tokens.equal)&&(t=this._short_circuit_or_expression()),new G(e.name,e.type,e.storage,e.access,t)}if(this._match(ye.keywords.let)){const e=this._consume(ye.tokens.ident,"Expected name for let.").toString();let t=null;if(this._match(ye.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}this._consume(ye.tokens.equal,"Expected '=' for let.");const n=this._short_circuit_or_expression();return new H(e,t,null,null,n)}if(this._match(ye.keywords.const)){const e=this._consume(ye.tokens.ident,"Expected name for const.").toString();let t=null;if(this._match(ye.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}this._consume(ye.tokens.equal,"Expected '=' for const.");const n=this._short_circuit_or_expression();return new V(e,t,null,null,n)}return null}_increment_decrement_statement(){const e=this._current,t=this._unary_expression();if(null==t)return null;if(!this._check(ye.increment_operators))return this._current=e,null;const n=this._consume(ye.increment_operators,"Expected increment operator");return new X(n.type===ye.tokens.plus_plus?R.increment:R.decrement,t)}_assignment_statement(){let e=null;if(this._check(ye.tokens.brace_right))return null;let t=this._match(ye.tokens.underscore);if(t||(e=this._unary_expression()),!t&&null==e)return null;const n=this._consume(ye.assignment_operators,"Expected assignment operator."),i=this._short_circuit_or_expression();return new W(v.parse(n.lexeme),e,i)}_func_call_statement(){if(!this._check(ye.tokens.ident))return null;const e=this._current,t=this._consume(ye.tokens.ident,"Expected function name."),n=this._argument_expression_list();return null===n?(this._current=e,null):new K(t.lexeme,n)}_loop_statement(){if(!this._match(ye.keywords.loop))return null;this._consume(ye.tokens.brace_left,"Expected '{' for loop.");const e=[];let t=this._statement();for(;null!==t;){if(Array.isArray(t))for(let n of t)e.push(n);else e.push(t);t=this._statement()}let n=null;return this._match(ye.keywords.continuing)&&(n=this._compound_statement()),this._consume(ye.tokens.brace_right,"Expected '}' for loop."),new z(e,n)}_switch_statement(){if(!this._match(ye.keywords.switch))return null;const e=this._optional_paren_expression();this._consume(ye.tokens.brace_left,"Expected '{' for switch.");const t=this._switch_body();if(null==t||0==t.length)throw this._error(this._previous(),"Expected 'case' or 'default'.");return this._consume(ye.tokens.brace_right,"Expected '}' for switch."),new Y(e,t)}_switch_body(){const e=[];if(this._match(ye.keywords.case)){const t=this._case_selectors();this._match(ye.tokens.colon),this._consume(ye.tokens.brace_left,"Exected '{' for switch case.");const n=this._case_body();this._consume(ye.tokens.brace_right,"Exected '}' for switch case."),e.push(new ve(t,n))}if(this._match(ye.keywords.default)){this._match(ye.tokens.colon),this._consume(ye.tokens.brace_left,"Exected '{' for switch default.");const t=this._case_body();this._consume(ye.tokens.brace_right,"Exected '}' for switch default."),e.push(new Te(t))}if(this._check([ye.keywords.default,ye.keywords.case])){const t=this._switch_body();e.push(t[0])}return e}_case_selectors(){var e,t,n,i;const r=[null!==(t=null===(e=this._shift_expression())||void 0===e?void 0:e.evaluate(this._context).toString())&&void 0!==t?t:""];for(;this._match(ye.tokens.comma);)r.push(null!==(i=null===(n=this._shift_expression())||void 0===n?void 0:n.evaluate(this._context).toString())&&void 0!==i?i:"");return r}_case_body(){if(this._match(ye.keywords.fallthrough))return this._consume(ye.tokens.semicolon,"Expected ';'"),[];let e=this._statement();if(null==e)return[];e instanceof Array||(e=[e]);const t=this._case_body();return 0==t.length?e:[...e,t[0]]}_if_statement(){if(!this._match(ye.keywords.if))return null;const e=this._optional_paren_expression(),t=this._compound_statement();let n=[];this._match_elseif()&&(n=this._elseif_statement(n));let i=null;return this._match(ye.keywords.else)&&(i=this._compound_statement()),new j(e,t,n,i)}_match_elseif(){return this._tokens[this._current].type===ye.keywords.else&&this._tokens[this._current+1].type===ye.keywords.if&&(this._advance(),this._advance(),!0)}_elseif_statement(e){void 0===e&&(e=[]);const t=this._optional_paren_expression(),n=this._compound_statement();return e.push(new be(t,n)),this._match_elseif()&&this._elseif_statement(e),e}_return_statement(){if(!this._match(ye.keywords.return))return null;const e=this._short_circuit_or_expression();return new q(e)}_short_circuit_or_expression(){let e=this._short_circuit_and_expr();for(;this._match(ye.tokens.or_or);)e=new Ae(this._previous().toString(),e,this._short_circuit_and_expr());return e}_short_circuit_and_expr(){let e=this._inclusive_or_expression();for(;this._match(ye.tokens.and_and);)e=new Ae(this._previous().toString(),e,this._inclusive_or_expression());return e}_inclusive_or_expression(){let e=this._exclusive_or_expression();for(;this._match(ye.tokens.or);)e=new Ae(this._previous().toString(),e,this._exclusive_or_expression());return e}_exclusive_or_expression(){let e=this._and_expression();for(;this._match(ye.tokens.xor);)e=new Ae(this._previous().toString(),e,this._and_expression());return e}_and_expression(){let e=this._equality_expression();for(;this._match(ye.tokens.and);)e=new Ae(this._previous().toString(),e,this._equality_expression());return e}_equality_expression(){const e=this._relational_expression();return this._match([ye.tokens.equal_equal,ye.tokens.not_equal])?new Ae(this._previous().toString(),e,this._relational_expression()):e}_relational_expression(){let e=this._shift_expression();for(;this._match([ye.tokens.less_than,ye.tokens.greater_than,ye.tokens.less_than_equal,ye.tokens.greater_than_equal]);)e=new Ae(this._previous().toString(),e,this._shift_expression());return e}_shift_expression(){let e=this._additive_expression();for(;this._match([ye.tokens.shift_left,ye.tokens.shift_right]);)e=new Ae(this._previous().toString(),e,this._additive_expression());return e}_additive_expression(){let e=this._multiplicative_expression();for(;this._match([ye.tokens.plus,ye.tokens.minus]);)e=new Ae(this._previous().toString(),e,this._multiplicative_expression());return e}_multiplicative_expression(){let e=this._unary_expression();for(;this._match([ye.tokens.star,ye.tokens.forward_slash,ye.tokens.modulo]);)e=new Ae(this._previous().toString(),e,this._unary_expression());return e}_unary_expression(){return this._match([ye.tokens.minus,ye.tokens.bang,ye.tokens.tilde,ye.tokens.star,ye.tokens.and])?new Ee(this._previous().toString(),this._unary_expression()):this._singular_expression()}_singular_expression(){const e=this._primary_expression(),t=this._postfix_expression();return t&&(e.postfix=t),e}_postfix_expression(){if(this._match(ye.tokens.bracket_left)){const e=this._short_circuit_or_expression();this._consume(ye.tokens.bracket_right,"Expected ']'.");const t=this._postfix_expression();return t&&(e.postfix=t),e}if(this._match(ye.tokens.period)){const e=this._consume(ye.tokens.ident,"Expected member name."),t=this._postfix_expression(),n=new le(e.lexeme);return t&&(n.postfix=t),n}return null}_getStruct(e){if(this._context.aliases.has(e)){return this._context.aliases.get(e).type}if(this._context.structs.has(e)){return this._context.structs.get(e)}return null}_primary_expression(){if(this._match(ye.tokens.ident)){const e=this._previous().toString();if(this._check(ye.tokens.paren_left)){const t=this._argument_expression_list(),n=this._getStruct(e);return null!=n?new ce(n,t):new ue(e,t)}if(this._context.constants.has(e)){const t=this._context.constants.get(e);return new de(e,t.value)}return new he(e)}if(this._match(ye.const_literal))return new _e(parseFloat(this._previous().toString()));if(this._check(ye.tokens.paren_left))return this._paren_expression();if(this._match(ye.keywords.bitcast)){this._consume(ye.tokens.less_than,"Expected '<'.");const e=this._type_decl();this._consume(ye.tokens.greater_than,"Expected '>'.");const t=this._paren_expression();return new pe(e,t)}const e=this._type_decl(),t=this._argument_expression_list();return new fe(e,t)}_argument_expression_list(){if(!this._match(ye.tokens.paren_left))return null;const e=[];do{if(this._check(ye.tokens.paren_right))break;const t=this._short_circuit_or_expression();e.push(t)}while(this._match(ye.tokens.comma));return this._consume(ye.tokens.paren_right,"Expected ')' for agument list"),e}_optional_paren_expression(){this._match(ye.tokens.paren_left);const e=this._short_circuit_or_expression();return this._match(ye.tokens.paren_right),new ge([e])}_paren_expression(){this._consume(ye.tokens.paren_left,"Expected '('.");const e=this._short_circuit_or_expression();return this._consume(ye.tokens.paren_right,"Expected ')'."),new ge([e])}_struct_decl(){if(!this._match(ye.keywords.struct))return null;const e=this._consume(ye.tokens.ident,"Expected name for struct.").toString();this._consume(ye.tokens.brace_left,"Expected '{' for struct body.");const t=[];for(;!this._check(ye.tokens.brace_right);){const e=this._attribute(),n=this._consume(ye.tokens.ident,"Expected variable name.").toString();this._consume(ye.tokens.colon,"Expected ':' for struct member type.");const i=this._attribute(),r=this._type_decl();null!=r&&(r.attributes=i),this._check(ye.tokens.brace_right)?this._match(ye.tokens.comma):this._consume(ye.tokens.comma,"Expected ',' for struct member."),t.push(new Ce(n,r,e))}this._consume(ye.tokens.brace_right,"Expected '}' after struct body.");const n=new ne(e,t);return this._context.structs.set(e,n),n}_global_variable_decl(){const e=this._variable_decl();return e&&this._match(ye.tokens.equal)&&(e.value=this._const_expression()),e}_override_variable_decl(){const e=this._override_decl();return e&&this._match(ye.tokens.equal)&&(e.value=this._const_expression()),e}_global_const_decl(){if(!this._match(ye.keywords.const))return null;const e=this._consume(ye.tokens.ident,"Expected variable name");let t=null;if(this._match(ye.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}let n=null;if(this._match(ye.tokens.equal)){const e=this._short_circuit_or_expression();if(e instanceof ce)n=e;else if(e instanceof de&&e.initializer instanceof ce)n=e.initializer;else try{const t=e.evaluate(this._context);n=new _e(t)}catch(T){n=e}}const i=new V(e.toString(),t,"","",n);return this._context.constants.set(i.name,i),i}_global_let_decl(){if(!this._match(ye.keywords.let))return null;const e=this._consume(ye.tokens.ident,"Expected variable name");let t=null;if(this._match(ye.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}let n=null;return this._match(ye.tokens.equal)&&(n=this._const_expression()),new H(e.toString(),t,"","",n)}_const_expression(){if(this._match(ye.const_literal))return new le(this._previous().toString());const e=this._type_decl();this._consume(ye.tokens.paren_left,"Expected '('.");let t=[];for(;!this._check(ye.tokens.paren_right)&&(t.push(this._const_expression()),this._check(ye.tokens.comma));)this._advance();return this._consume(ye.tokens.paren_right,"Expected ')'."),new ce(e,t)}_variable_decl(){if(!this._match(ye.keywords.var))return null;let e="",t="";this._match(ye.tokens.less_than)&&(e=this._consume(ye.storage_class,"Expected storage_class.").toString(),this._match(ye.tokens.comma)&&(t=this._consume(ye.access_mode,"Expected access_mode.").toString()),this._consume(ye.tokens.greater_than,"Expected '>'."));const n=this._consume(ye.tokens.ident,"Expected variable name");let i=null;if(this._match(ye.tokens.colon)){const e=this._attribute();i=this._type_decl(),null!=i&&(i.attributes=e)}return new G(n.toString(),i,e,t,null)}_override_decl(){if(!this._match(ye.keywords.override))return null;const e=this._consume(ye.tokens.ident,"Expected variable name");let t=null;if(this._match(ye.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}return new k(e.toString(),t,null)}_enable_directive(){const e=this._consume(ye.tokens.ident,"identity expected.");return new Q(e.toString())}_type_alias(){const e=this._consume(ye.tokens.ident,"identity expected.");this._consume(ye.tokens.equal,"Expected '=' for type alias.");let t=this._type_decl();if(null===t)throw this._error(this._peek(),"Expected Type for Alias.");this._context.aliases.has(t.name)&&(t=this._context.aliases.get(t.name).type);const n=new Z(e.toString(),t);return this._context.aliases.set(n.name,n),n}_type_decl(){if(this._check([ye.tokens.ident,...ye.texel_format,ye.keywords.bool,ye.keywords.f32,ye.keywords.i32,ye.keywords.u32])){const e=this._advance(),t=e.toString();return this._context.structs.has(t)?this._context.structs.get(t):this._context.aliases.has(t)?this._context.aliases.get(t).type:new te(e.toString())}let e=this._texture_sampler_types();if(e)return e;if(this._check(ye.template_types)){let e=this._advance().toString(),t=null,n=null;return this._match(ye.tokens.less_than)&&(t=this._type_decl(),n=null,this._match(ye.tokens.comma)&&(n=this._consume(ye.access_mode,"Expected access_mode for pointer").toString()),this._consume(ye.tokens.greater_than,"Expected '>' for type.")),new ie(e,t,n)}if(this._match(ye.keywords.ptr)){let e=this._previous().toString();this._consume(ye.tokens.less_than,"Expected '<' for pointer.");const t=this._consume(ye.storage_class,"Expected storage_class for pointer");this._consume(ye.tokens.comma,"Expected ',' for pointer.");const n=this._type_decl();let i=null;return this._match(ye.tokens.comma)&&(i=this._consume(ye.access_mode,"Expected access_mode for pointer").toString()),this._consume(ye.tokens.greater_than,"Expected '>' for pointer."),new re(e,t.toString(),n,i)}const t=this._attribute();if(this._match(ye.keywords.array)){let e=null,n=-1;const i=this._previous();if(this._match(ye.tokens.less_than)){e=this._type_decl(),this._context.aliases.has(e.name)&&(e=this._context.aliases.get(e.name).type);let t="";if(this._match(ye.tokens.comma)){t=this._shift_expression().evaluate(this._context).toString()}this._consume(ye.tokens.greater_than,"Expected '>' for array."),n=t?parseInt(t):0}return new se(i.toString(),t,e,n)}return null}_texture_sampler_types(){if(this._match(ye.sampler_type))return new oe(this._previous().toString(),null,null);if(this._match(ye.depth_texture_type))return new oe(this._previous().toString(),null,null);if(this._match(ye.sampled_texture_type)||this._match(ye.multisampled_texture_type)){const e=this._previous();this._consume(ye.tokens.less_than,"Expected '<' for sampler type.");const t=this._type_decl();return this._consume(ye.tokens.greater_than,"Expected '>' for sampler type."),new oe(e.toString(),t,null)}if(this._match(ye.storage_texture_type)){const e=this._previous();this._consume(ye.tokens.less_than,"Expected '<' for sampler type.");const t=this._consume(ye.texel_format,"Invalid texel format.").toString();this._consume(ye.tokens.comma,"Expected ',' after texel format.");const n=this._consume(ye.access_mode,"Expected access mode for storage texture type.").toString();return this._consume(ye.tokens.greater_than,"Expected '>' for sampler type."),new oe(e.toString(),t,n)}return null}_attribute(){let e=[];for(;this._match(ye.tokens.attr);){const t=this._consume(ye.attribute_name,"Expected attribute name"),n=new Ie(t.toString(),null);if(this._match(ye.tokens.paren_left)){if(n.value=this._consume(ye.literal_or_ident,"Expected attribute value").toString(),this._check(ye.tokens.comma)){this._advance();do{const e=this._consume(ye.literal_or_ident,"Expected attribute value").toString();n.value instanceof Array||(n.value=[n.value]),n.value.push(e)}while(this._match(ye.tokens.comma))}this._consume(ye.tokens.paren_right,"Expected ')'")}e.push(n)}for(;this._match(ye.tokens.attr_left);){if(!this._check(ye.tokens.attr_right))do{const t=this._consume(ye.attribute_name,"Expected attribute name"),n=new Ie(t.toString(),null);if(this._match(ye.tokens.paren_left)){if(n.value=[this._consume(ye.literal_or_ident,"Expected attribute value").toString()],this._check(ye.tokens.comma)){this._advance();do{const e=this._consume(ye.literal_or_ident,"Expected attribute value").toString();n.value.push(e)}while(this._match(ye.tokens.comma))}this._consume(ye.tokens.paren_right,"Expected ')'")}e.push(n)}while(this._match(ye.tokens.comma));this._consume(ye.tokens.attr_right,"Expected ']]' after attribute declarations")}return 0==e.length?null:e}}class xe{constructor(e,t){this.name=e,this.attributes=t,this.size=0}get isArray(){return!1}get isStruct(){return!1}get isTemplate(){return!1}}class Me{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n,this.offset=0,this.size=0}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class Oe extends xe{constructor(e,t){super(e,t),this.members=[],this.align=0}get isStruct(){return!0}}class Fe extends xe{constructor(e,t){super(e,t),this.count=0,this.stride=0}get isArray(){return!0}}class De extends xe{constructor(e,t,n,i){super(e,n),this.format=t,this.access=i}get isTemplate(){return!0}}!function(e){e[e.Uniform=0]="Uniform",e[e.Storage=1]="Storage",e[e.Texture=2]="Texture",e[e.Sampler=3]="Sampler",e[e.StorageTexture=4]="StorageTexture"}(b||(b={}));class Be{constructor(e,t,n,i,r,s,o){this.name=e,this.type=t,this.group=n,this.binding=i,this.attributes=r,this.resourceType=s,this.access=o}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get size(){return this.type.size}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class Ue{constructor(e,t){this.name=e,this.type=t}}class Ge{constructor(e,t){this.align=e,this.size=t}}class ke{constructor(e,t,n,i){this.name=e,this.type=t,this.locationType=n,this.location=i,this.interpolation=null}}class He{constructor(e,t,n,i){this.name=e,this.type=t,this.locationType=n,this.location=i}}class Ve{constructor(e,t){void 0===t&&(t=null),this.stage=null,this.inputs=[],this.outputs=[],this.name=e,this.stage=t}}class Xe{constructor(){this.vertex=[],this.fragment=[],this.compute=[]}}class We{constructor(e,t,n,i){this.name=e,this.type=t,this.attributes=n,this.id=i}}class Ke{constructor(e){this.uniforms=[],this.storage=[],this.textures=[],this.samplers=[],this.aliases=[],this.overrides=[],this.structs=[],this.entry=new Xe,this._types=new Map,e&&this.update(e)}_isStorageTexture(e){return"texture_storage_1d"==e.name||"texture_storage_2d"==e.name||"texture_storage_2d_array"==e.name||"texture_storage_3d"==e.name}update(e){const t=(new we).parse(e);for(const n of t)if(n instanceof ne){const e=this._getTypeInfo(n,null);e instanceof Oe&&this.structs.push(e)}else if(n instanceof Z)this.aliases.push(this._getAliasInfo(n));else if(n instanceof k){const e=n,t=this._getAttributeNum(e.attributes,"id",0),i=null!=e.type?this._getTypeInfo(e.type,e.attributes):null;this.overrides.push(new We(e.name,i,e.attributes,t))}else if(this._isUniformVar(n)){const e=n,t=this._getAttributeNum(e.attributes,"group",0),i=this._getAttributeNum(e.attributes,"binding",0),r=this._getTypeInfo(e.type,e.attributes),s=new Be(e.name,r,t,i,e.attributes,b.Uniform,e.access);this.uniforms.push(s)}else if(this._isStorageVar(n)){const e=n,t=this._getAttributeNum(e.attributes,"group",0),i=this._getAttributeNum(e.attributes,"binding",0),r=this._getTypeInfo(e.type,e.attributes),s=this._isStorageTexture(r),o=new Be(e.name,r,t,i,e.attributes,s?b.StorageTexture:b.Storage,e.access);this.storage.push(o)}else if(this._isTextureVar(n)){const e=n,t=this._getAttributeNum(e.attributes,"group",0),i=this._getAttributeNum(e.attributes,"binding",0),r=this._getTypeInfo(e.type,e.attributes),s=this._isStorageTexture(r),o=new Be(e.name,r,t,i,e.attributes,s?b.StorageTexture:b.Texture,e.access);s?this.storage.push(o):this.textures.push(o)}else if(this._isSamplerVar(n)){const e=n,t=this._getAttributeNum(e.attributes,"group",0),i=this._getAttributeNum(e.attributes,"binding",0),r=this._getTypeInfo(e.type,e.attributes),s=new Be(e.name,r,t,i,e.attributes,b.Sampler,e.access);this.samplers.push(s)}else if(n instanceof O){const e=this._getAttribute(n,"vertex"),t=this._getAttribute(n,"fragment"),i=this._getAttribute(n,"compute"),r=e||t||i;if(r){const e=new Ve(n.name,r.name);e.inputs=this._getInputs(n.args),e.outputs=this._getOutputs(n.returnType),this.entry[r.name].push(e)}}else;}getBindGroups(){const e=[];function t(t,n){t>=e.length&&(e.length=t+1),void 0===e[t]&&(e[t]=[]),n>=e[t].length&&(e[t].length=n+1)}for(const n of this.uniforms){t(n.group,n.binding);e[n.group][n.binding]=n}for(const n of this.storage){t(n.group,n.binding);e[n.group][n.binding]=n}for(const n of this.textures){t(n.group,n.binding);e[n.group][n.binding]=n}for(const n of this.samplers){t(n.group,n.binding);e[n.group][n.binding]=n}return e}_getOutputs(e,t){if(void 0===t&&(t=void 0),void 0===t&&(t=[]),e instanceof ne)this._getStructOutputs(e,t);else{const n=this._getOutputInfo(e);null!==n&&t.push(n)}return t}_getStructOutputs(e,t){for(const n of e.members)if(n.type instanceof ne)this._getStructOutputs(n.type,t);else{const e=this._getAttribute(n,"location")||this._getAttribute(n,"builtin");if(null!==e){const i=this._getTypeInfo(n.type,n.type.attributes),r=this._parseInt(e.value),s=new He(n.name,i,e.name,r);t.push(s)}}}_getOutputInfo(e){const t=this._getAttribute(e,"location")||this._getAttribute(e,"builtin");if(null!==t){const n=this._getTypeInfo(e,e.attributes),i=this._parseInt(t.value);return new He("",n,t.name,i)}return null}_getInputs(e,t){void 0===t&&(t=void 0),void 0===t&&(t=[]);for(const n of e)if(n.type instanceof ne)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}return t}_getStructInputs(e,t){for(const n of e.members)if(n.type instanceof ne)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}}_getInputInfo(e){const t=this._getAttribute(e,"location")||this._getAttribute(e,"builtin");if(null!==t){const n=this._getAttribute(e,"interpolation"),i=this._getTypeInfo(e.type,e.attributes),r=this._parseInt(t.value),s=new ke(e.name,i,t.name,r);return null!==n&&(s.interpolation=this._parseString(n.value)),s}return null}_parseString(e){return e instanceof Array&&(e=e[0]),e}_parseInt(e){e instanceof Array&&(e=e[0]);const t=parseInt(e);return isNaN(t)?e:t}_getAlias(e){for(const t of this.aliases)if(t.name==e)return t.type;return null}_getAliasInfo(e){return new Ue(e.name,this._getTypeInfo(e.type,null))}_getTypeInfo(e,t){if(this._types.has(e))return this._types.get(e);if(e instanceof se){const n=e,i=this._getTypeInfo(n.format,n.attributes),r=new Fe(n.name,t);return r.format=i,r.count=n.count,this._types.set(e,r),this._updateTypeInfo(r),r}if(e instanceof ne){const n=e,i=new Oe(n.name,t);for(const e of n.members){const t=this._getTypeInfo(e.type,e.attributes);i.members.push(new Me(e.name,t,e.attributes))}return this._types.set(e,i),this._updateTypeInfo(i),i}if(e instanceof oe){const n=e,i=n.format instanceof te,r=n.format?i?this._getTypeInfo(n.format,null):new xe(n.format,null):null,s=new De(n.name,r,t,n.access);return this._types.set(e,s),this._updateTypeInfo(s),s}if(e instanceof ie){const n=e,i=n.format?this._getTypeInfo(n.format,null):null,r=new De(n.name,i,t,n.access);return this._types.set(e,r),this._updateTypeInfo(r),r}const n=new xe(e.name,t);return this._types.set(e,n),this._updateTypeInfo(n),n}_updateTypeInfo(e){var t,n;const i=this._getTypeSize(e);if(e.size=null!==(t=null==i?void 0:i.size)&&void 0!==t?t:0,e instanceof Fe){const t=this._getTypeSize(e.format);e.stride=null!==(n=null==t?void 0:t.size)&&void 0!==n?n:0,this._updateTypeInfo(e.format)}e instanceof Oe&&this._updateStructInfo(e)}_updateStructInfo(e){var t;let n=0,i=0,r=0,s=0;for(let o=0,a=e.members.length;o<a;++o){const a=e.members[o],l=this._getTypeSize(a);if(!l)continue;null!==(t=this._getAlias(a.type.name))&&void 0!==t||a.type;const c=l.align,u=l.size;n=this._roundUp(c,n+i),i=u,r=n,s=Math.max(s,c),a.offset=n,a.size=u,this._updateTypeInfo(a.type)}e.size=this._roundUp(s,r+i),e.align=s}_getTypeSize(e){var t;if(null==e)return null;const n=this._getAttributeNum(e.attributes,"size",0),i=this._getAttributeNum(e.attributes,"align",0);if(e instanceof Me&&(e=e.type),e instanceof xe){const t=this._getAlias(e.name);null!==t&&(e=t)}{const t=Ke._typeInfo[e.name];if(void 0!==t){const r="f16"===e.format?2:1;return new Ge(Math.max(i,t.align/r),Math.max(n,t.size/r))}}{const t=Ke._typeInfo[e.name.substring(0,e.name.length-1)];if(t){const r="h"===e.name[e.name.length-1]?2:1;return new Ge(Math.max(i,t.align/r),Math.max(n,t.size/r))}}if(e instanceof Fe){let r=e,s=8,o=8;const a=this._getTypeSize(r.format);null!==a&&(o=a.size,s=a.align);return o=r.count*this._getAttributeNum(null!==(t=null==e?void 0:e.attributes)&&void 0!==t?t:null,"stride",this._roundUp(s,o)),n&&(o=n),new Ge(Math.max(i,s),Math.max(n,o))}if(e instanceof Oe){let t=0,r=0,s=0,o=0,a=0;for(const n of e.members){const e=this._getTypeSize(n.type);null!==e&&(t=Math.max(e.align,t),s=this._roundUp(e.align,s+o),o=e.size,a=s)}return r=this._roundUp(t,a+o),new Ge(Math.max(i,t),Math.max(n,r))}return null}_isUniformVar(e){return e instanceof G&&"uniform"==e.storage}_isStorageVar(e){return e instanceof G&&"storage"==e.storage}_isTextureVar(e){return e instanceof G&&null!==e.type&&-1!=Ke._textureTypes.indexOf(e.type.name)}_isSamplerVar(e){return e instanceof G&&null!==e.type&&-1!=Ke._samplerTypes.indexOf(e.type.name)}_getAttribute(e,t){const n=e;if(!n||!n.attributes)return null;const i=n.attributes;for(let r of i)if(r.name==t)return r;return null}_getAttributeNum(e,t,n){if(null===e)return n;for(let i of e)if(i.name==t){let e=null!==i&&null!==i.value?i.value:n;return e instanceof Array&&(e=e[0]),"number"==typeof e?e:"string"==typeof e?parseInt(e):n}return n}_roundUp(e,t){return Math.ceil(t/e)*e}}function ze(e){const t={attributes:[],bindings:[]};let n;try{n=function(e){try{return new Ke(e)}catch(t){if(t instanceof Error)throw t;let e="WGSL parse error";throw"object"==typeof t&&null!=t&&t.message&&(e+=": "+t.message+" "),"object"==typeof t&&null!=t&&t.token&&(e+=t.token.line||""),new Error(e,{cause:t})}}(e)}catch(s){return a.R.error(s.message)(),t}for(const o of n.uniforms){const e=[];for(const t of o.type.members)e.push({name:t.name,type:Ye(t.type)});t.bindings.push({type:"uniform",name:o.name,location:o.binding,group:o.group,members:e})}const i=n.entry.vertex[0],r=(null==i?void 0:i.inputs.length)||0;for(let o=0;o<r;o++){const e=i.inputs[o];if("location"===e.locationType){const n=Ye(e.type);t.attributes.push({name:e.name,location:e.location,type:n})}}return t}function Ye(e){return e.format?e.name+"<"+e.format.name+">":e.name}function je(e,t){if(!e)throw new Error(t||"shadertools: assertion failed.")}Ke._typeInfo={f16:{align:2,size:2},i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},atomic:{align:4,size:4},vec2:{align:8,size:8},vec3:{align:16,size:12},vec4:{align:16,size:16},mat2x2:{align:8,size:16},mat3x2:{align:8,size:24},mat4x2:{align:8,size:32},mat2x3:{align:16,size:32},mat3x3:{align:16,size:48},mat4x3:{align:16,size:64},mat2x4:{align:16,size:32},mat3x4:{align:16,size:48},mat4x4:{align:16,size:64}},Ke._textureTypes=ye.any_texture_type.map((e=>e.name)),Ke._samplerTypes=ye.sampler_type.map((e=>e.name));const qe={number:{type:"number",validate:(e,t)=>Number.isFinite(e)&&"object"==typeof t&&(void 0===t.max||e<=t.max)&&(void 0===t.min||e>=t.min)},array:{type:"array",validate:(e,t)=>Array.isArray(e)||ArrayBuffer.isView(e)}};function Qe(e){let t=Ze(e);if("object"!==t)return{value:e,...qe[t],type:t};if("object"==typeof e)return e?void 0!==e.type?{...e,...qe[e.type],type:e.type}:void 0===e.value?{type:"object",value:e}:(t=Ze(e.value),{...e,...qe[t],type:t}):{type:"object",value:null};throw new Error("props")}function Ze(e){return Array.isArray(e)||ArrayBuffer.isView(e)?"array":typeof e}const Je=e=>""+e;var $e,et;function tt(e,t){return t||(t=e.slice(0)),e.raw=t,e}const nt={vertex:Je($e||($e=tt(["#ifdef MODULE_LOGDEPTH\n  logdepth_adjustPosition(gl_Position);\n#endif\n"],["\\\n#ifdef MODULE_LOGDEPTH\n  logdepth_adjustPosition(gl_Position);\n#endif\n"]))),fragment:Je(et||(et=tt(["#ifdef MODULE_MATERIAL\n  gl_FragColor = material_filterColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_LIGHTING\n  gl_FragColor = lighting_filterColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_FOG\n  gl_FragColor = fog_filterColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_PICKING\n  gl_FragColor = picking_filterHighlightColor(gl_FragColor);\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_LOGDEPTH\n  logdepth_setFragDepth();\n#endif\n"],["\\\n#ifdef MODULE_MATERIAL\n  gl_FragColor = material_filterColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_LIGHTING\n  gl_FragColor = lighting_filterColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_FOG\n  gl_FragColor = fog_filterColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_PICKING\n  gl_FragColor = picking_filterHighlightColor(gl_FragColor);\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_LOGDEPTH\n  logdepth_setFragDepth();\n#endif\n"])))},it=/void\s+main\s*\([^)]*\)\s*\{\n?/,rt=/}\n?[^{}]*$/,st=[],ot="__LUMA_INJECT_DECLARATIONS__";function at(e){const t=e.slice(0,2);switch(t){case"vs":return"vertex";case"fs":return"fragment";default:throw new Error(t)}}function lt(e,t,n,i){void 0===i&&(i=!1);const r="vertex"===t;for(const s in n){const t=n[s];t.sort(((e,t)=>e.order-t.order)),st.length=t.length;for(let e=0,n=t.length;e<n;++e)st[e]=t[e].injection;const i=st.join("\n")+"\n";switch(s){case"vs:#decl":r&&(e=e.replace(ot,i));break;case"vs:#main-start":r&&(e=e.replace(it,(e=>e+i)));break;case"vs:#main-end":r&&(e=e.replace(rt,(e=>i+e)));break;case"fs:#decl":r||(e=e.replace(ot,i));break;case"fs:#main-start":r||(e=e.replace(it,(e=>e+i)));break;case"fs:#main-end":r||(e=e.replace(rt,(e=>i+e)));break;default:e=e.replace(s,(e=>e+i))}}return e=e.replace(ot,""),i&&(e=e.replace(/\}\s*$/,(e=>e+nt[t]))),e}let ct=1;class ut{static instantiateModules(e){return e.map((e=>{if(e instanceof ut)return e;je("string"!=typeof e,"Shader module use by name is deprecated. Import shader module '"+JSON.stringify(e)+"' and use it directly."),e.name||(console.warn("shader module has no name"),e.name="shader-module-"+ct++);const t=new ut(e);return t.dependencies=ut.instantiateModules(e.dependencies||[]),t}))}constructor(e){this.uniforms={},this.uniformTypes={};const{name:t,vs:n,fs:i,dependencies:r=[],uniformPropTypes:s={},getUniforms:o,deprecations:a=[],defines:l={},inject:c={}}=e;je("string"==typeof t),this.name=t,this.vs=n,this.fs=i,this.getModuleUniforms=o,this.dependencies=ut.instantiateModules(r),this.deprecations=this._parseDeprecationDefinitions(a),this.defines=l,this.injections=function(e){const t={vertex:{},fragment:{}};for(const n in e){let i=e[n];"string"==typeof i&&(i={order:0,injection:i}),t[at(n)][n]=i}return t}(c),s&&(this.uniforms=function(e){const t={};for(const[n,i]of Object.entries(e))t[n]=Qe(i);return t}(s))}getModuleSource(e){let t;switch(e){case"vertex":t=this.vs||"";break;case"fragment":t=this.fs||"";break;default:je(!1)}const n=this.name.toUpperCase().replace(/[^0-9a-z]/gi,"_");return"// ----- MODULE "+this.name+" ---------------\n\n#define MODULE_"+n+"\n"+t+"\n\n"}getUniforms(e,t){return this.getModuleUniforms?this.getModuleUniforms(e,t):function(e,t,n){const i={};for(const[r,s]of Object.entries(t))e&&r in e&&!s.private?(s.validate&&je(s.validate(e[r],s),n+": invalid "+r),i[r]=e[r]):i[r]=s.value;return i}(e,this.uniforms,this.name)}getDefines(){return this.defines}checkDeprecations(e,t){this.deprecations.forEach((n=>{var i;null!=(i=n.regex)&&i.test(e)&&(n.deprecated?t.deprecated(n.old,n.new)():t.removed(n.old,n.new)())}))}_parseDeprecationDefinitions(e){return e.forEach((e=>{if("function"===e.type)e.regex=new RegExp("\\b"+e.old+"\\(");else e.regex=new RegExp(e.type+" "+e.old+";")})),e}_defaultGetUniforms(e){void 0===e&&(e={});const t={},n=this.uniforms;for(const i in n){const r=n[i];i in e&&!r.private?(r.validate&&je(r.validate(e[i],r),this.name+": invalid "+i),t[i]=e[i]):t[i]=r.value}return t}}function ht(e){return dt(ut.instantiateModules(e))}function dt(e){const t={},n={};return _t({modules:e,level:0,moduleMap:t,moduleDepth:n}),Object.keys(n).sort(((e,t)=>n[t]-n[e])).map((e=>t[e]))}function _t(e){const{modules:t,level:n,moduleMap:i,moduleDepth:r}=e;if(n>=5)throw new Error("Possible loop in shader dependency graph");for(const s of t)i[s.name]=s,(void 0===r[s.name]||r[s.name]<n)&&(r[s.name]=n);for(const s of t)s.dependencies&&_t({modules:s.dependencies,level:n+1,moduleMap:i,moduleDepth:r})}var pt,ft,gt,mt,Et;function At(e,t){return t||(t=e.slice(0)),e.raw=t,e}const Rt=[[/^(#version[ \t]+(100|300[ \t]+es))?[ \t]*\n/,"#version 300 es\n"],[/\btexture(2D|2DProj|Cube)Lod(EXT)?\(/g,"textureLod("],[/\btexture(2D|2DProj|Cube)(EXT)?\(/g,"texture("]],vt=[...Rt,[bt("attribute"),"in $1"],[bt("varying"),"out $1"]],Tt=[...Rt,[bt("varying"),"in $1"]];function St(e,t){for(const[n,i]of t)e=e.replace(n,i);return e}function bt(e){return new RegExp("\\b"+e+"[ \\t]+(\\w+[ \\t]+\\w+(\\[\\w+\\])?;)","g")}function Ct(e,t){let n="";for(const i in e){const r=e[i];if(n+="void "+r.signature+" {\n",r.header&&(n+="  "+r.header),t[i]){const e=t[i];e.sort(((e,t)=>e.order-t.order));for(const t of e)n+="  "+t.injection+"\n"}r.footer&&(n+="  "+r.footer),n+="}\n"}return n}function It(e){const t={vertex:{},fragment:{}};for(const n of e){let e,i;"string"!=typeof n?(e=n,i=e.hook):(e={},i=n),i=i.trim();const[r,s]=i.split(":"),o=i.replace(/\(.+/,""),a=Object.assign(e,{signature:s});switch(r){case"vs":t.vertex[o]=a;break;case"fs":t.fragment[o]=a;break;default:throw new Error(r)}}return t}function Nt(e,t){void 0===t&&(t="unnamed");const n=/#define[^\S\r\n]*SHADER_NAME[^\S\r\n]*([A-Za-z0-9_-]+)\s*/.exec(e);return n?n[1]:t}function yt(e){let t=100;const n=e.match(/[^\s]+/g);if(n&&n.length>=2&&"#version"===n[0]){const e=parseInt(n[1],10);Number.isFinite(e)&&(t=e)}if(100!==t&&300!==t)throw new Error("Invalid GLSL version "+t);return t}var Lt;const Pt="\n\n"+ot+"\n",wt=Je(Lt||(xt=["precision highp float;\n"],(Mt=["\\\nprecision highp float;\n"])||(Mt=xt.slice(0)),xt.raw=Mt,Lt=xt));var xt,Mt;function Ot(e,t){const{source:n,stage:i,modules:r,hookFunctions:s=[],inject:o={},log:a}=t;je("string"==typeof n,"shader source must be a string");const l=n;let c="";const u=It(s),h={},d={},_={};for(const f in o){const e="string"==typeof o[f]?{injection:o[f],order:0}:o[f],t=/^(v|f)s:(#)?([\w-]+)$/.exec(f);if(t){const n=t[2],i=t[3];n?"decl"===i?d[f]=[e]:_[f]=[e]:h[f]=[e]}else _[f]=[e]}const p="webgpu"!==e.type?r:[];for(const f of p){a&&f.checkDeprecations(l,a);c+=f.getModuleSource(i,"wgsl");const e=f.injections[i];for(const t in e){const n=/^(v|f)s:#([\w-]+)$/.exec(t);if(n){const i="decl"===n[2]?d:_;i[t]=i[t]||[],i[t].push(e[t])}else h[t]=h[t]||[],h[t].push(e[t])}}return c+=Pt,c=lt(c,i,d),c+=Ct(u[i],h),c+=l,c=lt(c,i,_),c}function Ft(e,t){const{id:n,source:i,stage:r,language:s="glsl",modules:o,defines:a={},hookFunctions:l=[],inject:c={},prologue:u=!0,log:h}=t;je("string"==typeof i,"shader source must be a string");const d="glsl"===s?function(e,t){return{name:Nt(e,t),language:"glsl",version:yt(e)}}(i).version:-1,_=e.shaderLanguageVersion,p=100===d?"#version 100":"#version 300 es",f=i.split("\n").slice(1).join("\n"),g={};o.forEach((e=>{Object.assign(g,e.getDefines())})),Object.assign(g,a);let m="";switch(s){case"wgsl":break;case"glsl":m=u?p+"\n\n// ----- PROLOGUE -------------------------\n"+function(e){const{id:t,source:n,stage:i}=e,r=t&&-1===n.indexOf("SHADER_NAME");return r?"\n#define SHADER_NAME "+t+"_"+i+"\n\n":""}({id:n,source:i,stage:r})+"\n#define SHADER_TYPE_"+r.toUpperCase()+"\n"+function(e){switch(null==e?void 0:e.gpu.toLowerCase()){case"apple":return Je(pt||(pt=At(["#define APPLE_GPU\n// Apple optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n"],["\\\n#define APPLE_GPU\n// Apple optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n"])));case"nvidia":return Je(ft||(ft=At(["#define NVIDIA_GPU\n// Nvidia optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n"],["\\\n#define NVIDIA_GPU\n// Nvidia optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n"])));case"intel":return Je(gt||(gt=At(["#define INTEL_GPU\n// Intel optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n// Intel's built-in 'tan' function doesn't have acceptable precision\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n"],["\\\n#define INTEL_GPU\n// Intel optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n// Intel's built-in 'tan' function doesn't have acceptable precision\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n"])));case"amd":return Je(mt||(mt=At(["#define AMD_GPU\n"],["\\\n#define AMD_GPU\n"])));default:return Je(Et||(Et=At(["#define DEFAULT_GPU\n// Prevent driver from optimizing away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n// Headless Chrome's software shader 'tan' function doesn't have acceptable precision\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// If the GPU doesn't have full 32 bits precision, will causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n"],["\\\n#define DEFAULT_GPU\n// Prevent driver from optimizing away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n// Headless Chrome's software shader 'tan' function doesn't have acceptable precision\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// If the GPU doesn't have full 32 bits precision, will causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n"])))}}(e)+"\n"+("fragment"===r?wt:"")+"\n\n// ----- APPLICATION DEFINES -------------------------\n\n"+function(e){void 0===e&&(e={});let t="";for(const n in e){const i=e[n];(i||Number.isFinite(i))&&(t+="#define "+n.toUpperCase()+" "+e[n]+"\n")}return t}(g)+"\n\n":p+"\n"}const E=It(l),A={},R={},v={};for(const T in c){const e="string"==typeof c[T]?{injection:c[T],order:0}:c[T],t=/^(v|f)s:(#)?([\w-]+)$/.exec(T);if(t){const n=t[2],i=t[3];n?"decl"===i?R[T]=[e]:v[T]=[e]:A[T]=[e]}else v[T]=[e]}for(const T of o){h&&T.checkDeprecations(f,h);m+=T.getModuleSource(r);const e=T.injections[r];for(const t in e){const n=/^(v|f)s:#([\w-]+)$/.exec(t);if(n){const i="decl"===n[2]?R:v;i[t]=i[t]||[],i[t].push(e[t])}else A[t]=A[t]||[],A[t].push(e[t])}}return m+="// ----- MAIN SHADER SOURCE -------------------------",m+=Pt,m=lt(m,r,R),m+=Ct(E[r],A),m+=f,m=lt(m,r,v),"glsl"===s&&d!==_&&(m=function(e,t){var n;if(300!==Number((null==(n=e.match(/^#version[ \t]+(\d+)/m))?void 0:n[1])||100))throw new Error("luma.gl v9 only supports GLSL 3.00 shader sources");switch(t){case"vertex":return St(e,vt);case"fragment":return St(e,Tt);default:throw new Error(t)}}(m,r)),m.trim()}function Dt(e){return function(t){const n={};for(const i of e){const e=i.getUniforms(t,n);Object.assign(n,e)}return n}}const Bt=/^\s*\#\s*ifdef\s*([a-zA-Z_]+)\s*$/,Ut=/^\s*\#\s*endif\s*$/;class Gt{constructor(){this._hookFunctions=[],this._defaultModules=[]}static getDefaultShaderAssembler(){return Gt.defaultShaderAssembler=Gt.defaultShaderAssembler||new Gt,Gt.defaultShaderAssembler}addDefaultModule(e){this._defaultModules.find((t=>t.name===("string"==typeof e?e:e.name)))||this._defaultModules.push(e)}removeDefaultModule(e){const t="string"==typeof e?e:e.name;this._defaultModules=this._defaultModules.filter((e=>e.name!==t))}addShaderHook(e,t){t&&(e=Object.assign(t,{hook:e})),this._hookFunctions.push(e)}assembleWGSLShader(e){const t=this._getModuleList(e.modules),n=this._hookFunctions,{source:i,getUniforms:r}=function(e){const t=ht(e.modules||[]);return{source:Ot(e.platformInfo,{...e,source:e.source,stage:"vertex",modules:t}),getUniforms:Dt(t)}}({...e,source:e.source,modules:t,hookFunctions:n}),s="wgsl"===e.platformInfo.shaderLanguage?function(e,t){const n=e.split("\n"),i=[];let r=!0,s=null;for(const a of n){const e=a.match(Bt),n=a.match(Ut);var o;e?(s=e[1],r=Boolean(null==t||null==(o=t.defines)?void 0:o[s])):n?r=!0:r&&i.push(a)}return i.join("\n")}(i):i;return{source:s,getUniforms:r,modules:t}}assembleGLSLShaderPair(e){const t=this._getModuleList(e.modules),n=this._hookFunctions,i=function(e){const{vs:t,fs:n}=e,i=ht(e.modules||[]);return{vs:Ft(e.platformInfo,{...e,source:t,stage:"vertex",modules:i}),fs:Ft(e.platformInfo,{...e,source:n,stage:"fragment",modules:i}),getUniforms:Dt(i)}}({...e,vs:e.vs,fs:e.fs,modules:t,hookFunctions:n});return{...i,modules:t}}_getModuleList(e){void 0===e&&(e=[]);const t=new Array(this._defaultModules.length+e.length),n={};let i=0;for(let r=0,s=this._defaultModules.length;r<s;++r){const e=this._defaultModules[r],s=e.name;t[i++]=e,n[s]=!0}for(let r=0,s=e.length;r<s;++r){const s=e[r],o=s.name;n[o]||(t[i++]=s,n[o]=!0)}return t.length=i,ut.instantiateModules(t)}}const kt={};function Ht(e){void 0===e&&(e="id"),kt[e]=kt[e]||1;return e+"-"+kt[e]++}class Vt{constructor(e){if(this.userData={},this.bufferLayout=[],this.id=e.id||Ht("geometry"),this.topology=e.topology,this.indices=e.indices||null,this.attributes=e.attributes,this.vertexCount=e.vertexCount,this.bufferLayout=e.bufferLayout||[],this.indices&&!(this.indices.usage&o.h.INDEX))throw new Error("Index buffer must have INDEX usage")}destroy(){var e;null==(e=this.indices)||e.destroy();for(const t of Object.values(this.attributes))t.destroy()}getVertexCount(){return this.vertexCount}getAttributes(){return this.attributes}getIndexes(){return this.indices||null}_calculateVertexCount(e){return e.byteLength/12}}function Xt(e,t){if(t instanceof Vt)return t;const n=function(e,t){if(!t.indices)return;const n=t.indices.value;return e.createBuffer({usage:o.h.INDEX,data:n})}(e,t),{attributes:i,bufferLayout:r}=function(e,t){const n=[],i={};for(const[s,o]of Object.entries(t.attributes)){let t=s;switch(s){case"POSITION":t="positions";break;case"NORMAL":t="normals";break;case"TEXCOORD_0":t="texCoords";break;case"COLOR_0":t="colors"}if(o){i[t]=e.createBuffer({data:o.value,id:s+"-buffer"});const{value:r,size:a,normalized:l}=o;n.push({name:t,format:P(r,a,l)})}}const r=t._calculateVertexCount(t.attributes,t.indices);return{attributes:i,bufferLayout:n,vertexCount:r}}(e,t);return new Vt({topology:t.topology||"triangle-list",bufferLayout:r,vertexCount:t.vertexCount,indices:n,attributes:i})}var Wt=n(9316);class Kt{static getDefaultPipelineFactory(e){return e._lumaData.defaultPipelineFactory=e._lumaData.defaultPipelineFactory||new Kt(e),e._lumaData.defaultPipelineFactory}constructor(e){this._hashCounter=0,this._hashes={},this._renderPipelineCache={},this._computePipelineCache={},this.device=e,this.destroyPolicy=e.props._factoryDestroyPolicy}createRenderPipeline(e){const t={...y.r.defaultProps,...e},n=this._hashRenderPipeline(t);if(!this._renderPipelineCache[n]){const e=this.device.createRenderPipeline({...t,id:t.id?t.id+"-cached":void 0});e.hash=n,this._renderPipelineCache[n]={pipeline:e,useCount:0}}return this._renderPipelineCache[n].useCount++,this._renderPipelineCache[n].pipeline}createComputePipeline(e){const t={...Wt.C.defaultProps,...e},n=this._hashComputePipeline(t);if(!this._computePipelineCache[n]){const e=this.device.createComputePipeline({...t,id:t.id?t.id+"-cached":void 0});e.hash=n,this._computePipelineCache[n]={pipeline:e,useCount:0}}return this._computePipelineCache[n].useCount++,this._computePipelineCache[n].pipeline}release(e){const t=e.hash,n=e instanceof Wt.C?this._computePipelineCache:this._renderPipelineCache;n[t].useCount--,0===n[t].useCount&&"unused"===this.destroyPolicy&&(n[t].pipeline.destroy(),delete n[t])}_hashComputePipeline(e){return""+this._getHash(e.shader.source)}_hashRenderPipeline(e){const t=e.vs?this._getHash(e.vs.source):0,n=e.fs?this._getHash(e.fs.source):0,i=this._getHash(JSON.stringify(e.bufferLayout));if("webgl"===this.device.type)return t+"/"+n+"V-BL"+i;{const r=this._getHash(JSON.stringify(e.parameters));return t+"/"+n+"V-T"+e.topology+"P"+r+"BL"+i}}_getHash(e){return void 0===this._hashes[e]&&(this._hashes[e]=this._hashCounter++),this._hashes[e]}}Kt.defaultProps={...y.r.defaultProps};var zt=n(7468);class Yt{static getDefaultShaderFactory(e){var t;return(t=e._lumaData).defaultShaderFactory||(t.defaultShaderFactory=new Yt(e)),e._lumaData.defaultShaderFactory}constructor(e){this._cache={},this.device=e,this.destroyPolicy=e.props._factoryDestroyPolicy}createShader(e){const t=this._hashShader(e);let n=this._cache[t];if(!n){const i=this.device.createShader({...e,id:e.id?e.id+"-cached":void 0});this._cache[t]=n={shader:i,useCount:0}}return n.useCount++,n.shader}release(e){const t=this._hashShader(e),n=this._cache[t];n&&(n.useCount--,0===n.useCount&&"unused"===this.destroyPolicy&&(delete this._cache[t],n.shader.destroy()))}_hashShader(e){return e.stage+":"+e.source}}Yt.defaultProps={...zt.M.defaultProps};let jt=null,qt=null;function Qt(e,t,n){if(e===t)return!0;if(!n||!e||!t)return!1;if(Array.isArray(e)){if(!Array.isArray(t)||e.length!==t.length)return!1;for(let i=0;i<e.length;i++)if(!Qt(e[i],t[i],n-1))return!1;return!0}if(Array.isArray(t))return!1;if("object"==typeof e&&"object"==typeof t){const i=Object.keys(e),r=Object.keys(t);if(i.length!==r.length)return!1;for(const s of i){if(!t.hasOwnProperty(s))return!1;if(!Qt(e[s],t[s],n-1))return!1}return!0}return!1}var Zt=n(6282);function Jt(e){const t={bindings:{},uniforms:{}};return Object.keys(e).forEach((n=>{const i=e[n];var r;r=i,null!==(0,Zt.H)(r)||"number"==typeof r||"boolean"==typeof r?t.uniforms[n]=i:t.bindings[n]=i})),t}class $t{constructor(e){const t=ht(Object.values(e));a.R.log(1,"Creating ShaderInputs with modules",t.map((e=>e.name)))(),this.modules=e,this.moduleUniforms={},this.moduleBindings={};for(const[n,i]of Object.entries(e)){const e=n;this.moduleUniforms[e]=i.defaultUniforms||{},this.moduleBindings[e]={}}}destroy(){}setProps(e){for(const t of Object.keys(e)){const n=t,i=e[n]||{},r=this.modules[n];if(!r){a.R.warn("Module "+t+" not found")();continue}const s=this.moduleUniforms[n],o=(null==r.getUniforms?void 0:r.getUniforms(i,this.moduleUniforms[n]))||i;this.moduleUniforms[n]={...s,...o}}}getModules(){return Object.values(this.modules)}getUniformValues(){return this.moduleUniforms}getBindings(){const e={};for(const t of Object.values(this.moduleBindings))Object.assign(e,t);return e}getDebugTable(){const e={};for(const[n,i]of Object.entries(this.moduleUniforms))for(const[r,s]of Object.entries(i)){var t;e[n+"."+r]={type:null==(t=this.modules[n].uniformTypes)?void 0:t[r],value:String(s)}}return e}}var en=n(4327);class tn{constructor(e,t){var n;this.isReady=!1,this.destroyed=!1,this.resolveReady=()=>{},this.rejectReady=()=>{},this.device=e,"string"==typeof(null==(n=t)?void 0:n.data)&&"2d"===t.dimension&&(t={...t,data:(0,en.Dt)(t.data)}),this.ready=new Promise(((e,t)=>{this.resolveReady=()=>{this.isReady=!0,e()},this.rejectReady=t})),this.initAsync(t)}async initAsync(e){const t=e.data,n=await nn(t).then(undefined,undefined);if(this.destroyed)return;const i={...e,data:n};this.texture=this.device.createTexture(i),this.sampler=this.texture.sampler,this.view=this.texture.view,this.isReady=!0}destroy(){this.texture&&(this.texture.destroy(),this.texture=null),this.destroyed=!0}}async function nn(e){if(e=await e,Array.isArray(e))return e.map(nn);if(e&&"object"==typeof e&&e.constructor===Object){const t=Object.entries(e).map((e=>{let[t,n]=e;return[t,nn(n)]}));return Object.fromEntries(t)}return e}class rn{constructor(e,t){var n,i,r;this.userData={},this.instanceCount=0,this.indexBuffer=null,this.bufferAttributes={},this.constantAttributes={},this.bindings={},this.uniforms={},this.transformFeedback=null,this._attributeInfos={},this._gpuGeometry=null,this._pipelineNeedsUpdate="newly created",this._needsRedraw="initializing",this._destroyed=!1,this._lastDrawTimestamp=-1,this._lastLogTime=0,this._logOpen=!1,this._drawCount=0,this.props={...rn.defaultProps,...t},t=this.props,this.id=t.id||Ht("model"),this.device=e,Object.assign(this.userData,t.userData);const s=Object.fromEntries((null==(n=this.props.modules)?void 0:n.map((e=>[e.name,e])))||[]);this.setShaderInputs(t.shaderInputs||new $t(s));const o=function(e){return{type:e.type,shaderLanguage:e.info.shadingLanguage,shaderLanguageVersion:e.info.shadingLanguageVersion,gpu:e.info.gpu,features:e.features}}(e),l=((null==(i=this.props.modules)?void 0:i.length)>0?this.props.modules:null==(r=this.shaderInputs)?void 0:r.getModules())||[];if("webgpu"===this.device.type&&this.props.source){var c;(c=this.props).shaderLayout||(c.shaderLayout=ze(this.props.source));const{source:e,getUniforms:t}=this.props.shaderAssembler.assembleWGSLShader({platformInfo:o,...this.props,modules:l});this.source=e,this._getModuleUniforms=t}else{const{vs:e,fs:t,getUniforms:n}=this.props.shaderAssembler.assembleGLSLShaderPair({platformInfo:o,...this.props,modules:l});this.vs=e,this.fs=t,this._getModuleUniforms=n}this.vertexCount=this.props.vertexCount,this.instanceCount=this.props.instanceCount,this.topology=this.props.topology,this.bufferLayout=this.props.bufferLayout,this.parameters=this.props.parameters,t.geometry&&this.setGeometry(t.geometry),this.pipelineFactory=t.pipelineFactory||Kt.getDefaultPipelineFactory(this.device),this.shaderFactory=t.shaderFactory||Yt.getDefaultShaderFactory(this.device),this.pipeline=this._updatePipeline(),this.vertexArray=e.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry),t.vertexCount&&this.setVertexCount(t.vertexCount),t.instanceCount&&this.setInstanceCount(t.instanceCount),t.indexBuffer&&this.setIndexBuffer(t.indexBuffer),t.attributes&&this.setAttributes(t.attributes,{disableWarnings:t.disableWarnings}),t.constantAttributes&&this.setConstantAttributes(t.constantAttributes),t.bindings&&this.setBindings(t.bindings),t.uniforms&&this.setUniforms(t.uniforms),t.moduleSettings&&(a.R.warn("Model.props.moduleSettings is deprecated. Use Model.shaderInputs.setProps()")(),this.updateModuleSettings(t.moduleSettings)),t.transformFeedback&&(this.transformFeedback=t.transformFeedback),Object.seal(this)}destroy(){var e;this._destroyed||(this.pipelineFactory.release(this.pipeline),this.shaderFactory.release(this.pipeline.vs),this.pipeline.fs&&this.shaderFactory.release(this.pipeline.fs),this._uniformStore.destroy(),null==(e=this._gpuGeometry)||e.destroy(),this._destroyed=!0)}needsRedraw(){this._getBindingsUpdateTimestamp()>this._lastDrawTimestamp&&this.setNeedsRedraw("contents of bound textures or buffers updated");const e=this._needsRedraw;return this._needsRedraw=!1,e}setNeedsRedraw(e){this._needsRedraw||(this._needsRedraw=e)}predraw(){this.updateShaderInputs(),this.pipeline=this._updatePipeline()}draw(e){let t;this.predraw();try{this._logDrawCallStart(),this.pipeline=this._updatePipeline();const n=this._getBindings();this.pipeline.setBindings(n,{disableWarnings:this.props.disableWarnings}),an(this.uniforms)||this.pipeline.setUniformsWebGL(this.uniforms);const{indexBuffer:i}=this.vertexArray,r=i?i.byteLength/("uint32"===i.indexType?4:2):void 0;t=this.pipeline.draw({renderPass:e,vertexArray:this.vertexArray,vertexCount:this.vertexCount,instanceCount:this.instanceCount,indexCount:r,transformFeedback:this.transformFeedback||void 0,parameters:this.parameters,topology:this.topology})}finally{this._logDrawCallEnd()}return this._logFramebuffer(e),t?(this._lastDrawTimestamp=this.device.timestamp,this._needsRedraw=!1):this._needsRedraw="waiting for resource initialization",t}setGeometry(e){var t;null==(t=this._gpuGeometry)||t.destroy();const n=e&&Xt(this.device,e);n&&(this.setTopology(n.topology||"triangle-list"),this.bufferLayout=sn(n.bufferLayout,this.bufferLayout),this.vertexArray&&this._setGeometryAttributes(n)),this._gpuGeometry=n}setTopology(e){e!==this.topology&&(this.topology=e,this._setPipelineNeedsUpdate("topology"))}setBufferLayout(e){this.bufferLayout=this._gpuGeometry?sn(e,this._gpuGeometry.bufferLayout):e,this._setPipelineNeedsUpdate("bufferLayout"),this.pipeline=this._updatePipeline(),this.vertexArray=this.device.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry)}setParameters(e){Qt(e,this.parameters,2)||(this.parameters=e,this._setPipelineNeedsUpdate("parameters"))}setVertexCount(e){this.vertexCount=e,this.setNeedsRedraw("vertexCount")}setInstanceCount(e){this.instanceCount=e,this.setNeedsRedraw("instanceCount")}setShaderInputs(e){this.shaderInputs=e,this._uniformStore=new p(this.shaderInputs.modules);for(const t of Object.keys(this.shaderInputs.modules)){const e=this._uniformStore.getManagedUniformBuffer(this.device,t);this.bindings[t+"Uniforms"]=e}this.setNeedsRedraw("shaderInputs")}updateShaderInputs(){this._uniformStore.setUniforms(this.shaderInputs.getUniformValues()),this.setNeedsRedraw("shaderInputs")}setBindings(e){Object.assign(this.bindings,e),this.setNeedsRedraw("bindings")}setTransformFeedback(e){this.transformFeedback=e,this.setNeedsRedraw("transformFeedback")}setIndexBuffer(e){this.vertexArray.setIndexBuffer(e),this.setNeedsRedraw("indexBuffer")}setAttributes(e,t){e.indices&&a.R.warn("Model:"+this.id+" setAttributes() - indexBuffer should be set using setIndexBuffer()")();for(const[n,i]of Object.entries(e)){const e=this.bufferLayout.find((e=>on(e).includes(n)));if(!e){a.R.warn("Model("+this.id+'): Missing layout for buffer "'+n+'".')();continue}const r=on(e);let s=!1;for(const t of r){const e=this._attributeInfos[t];e&&(this.vertexArray.setBuffer(e.location,i),s=!0)}s||null!=t&&t.disableWarnings||this.props.disableWarnings||a.R.warn("Model("+this.id+'): Ignoring buffer "'+i.id+'" for unknown attribute "'+n+'"')()}this.setNeedsRedraw("attributes")}setConstantAttributes(e,t){for(const[n,i]of Object.entries(e)){const e=this._attributeInfos[n];e?this.vertexArray.setConstantWebGL(e.location,i):null!=t&&t.disableWarnings||this.props.disableWarnings||a.R.warn('Model "'+this.id+': Ignoring constant supplied for unknown attribute "'+n+'"')()}this.setNeedsRedraw("constants")}setUniforms(e){an(e)||(this.pipeline.setUniformsWebGL(e),Object.assign(this.uniforms,e)),this.setNeedsRedraw("uniforms")}updateModuleSettings(e){a.R.warn("Model.updateModuleSettings is deprecated. Use Model.shaderInputs.setProps()")();const{bindings:t,uniforms:n}=Jt(this._getModuleUniforms(e));Object.assign(this.bindings,t),Object.assign(this.uniforms,n),this.setNeedsRedraw("moduleSettings")}_getBindings(){return Object.entries(this.bindings).reduce(((e,t)=>{let[n,i]=t;return i instanceof tn?i.isReady&&(e[n]=i.texture):e[n]=i,e}),{})}_getBindingsUpdateTimestamp(){let e=0;for(const t of Object.values(this.bindings))t instanceof C.X?e=Math.max(e,t.texture.updateTimestamp):t instanceof o.h||t instanceof I.g?e=Math.max(e,t.updateTimestamp):t instanceof tn?e=t.texture?Math.max(e,t.texture.updateTimestamp):1/0:t instanceof N.L||(e=Math.max(e,t.buffer.updateTimestamp));return e}_setGeometryAttributes(e){const t={...e.attributes};for(const[n]of Object.entries(t))this.pipeline.shaderLayout.attributes.find((e=>e.name===n))||"positions"===n||delete t[n];this.vertexCount=e.vertexCount,this.setIndexBuffer(e.indices||null),this.setAttributes(e.attributes,{disableWarnings:!0}),this.setAttributes(t,{disableWarnings:this.props.disableWarnings}),this.setNeedsRedraw("geometry attributes")}_setPipelineNeedsUpdate(e){this._pipelineNeedsUpdate||(this._pipelineNeedsUpdate=e),this.setNeedsRedraw(e)}_updatePipeline(){if(this._pipelineNeedsUpdate){let e=null,t=null;this.pipeline&&(a.R.log(1,"Model "+this.id+': Recreating pipeline because "'+this._pipelineNeedsUpdate+'".')(),e=this.pipeline.vs,t=this.pipeline.fs),this._pipelineNeedsUpdate=!1;const n=this.shaderFactory.createShader({id:this.id+"-vertex",stage:"vertex",source:this.source||this.vs,debug:this.props.debugShaders});let i=null;this.source?i=n:this.fs&&(i=this.shaderFactory.createShader({id:this.id+"-fragment",stage:"fragment",source:this.source||this.fs,debug:this.props.debugShaders})),this.pipeline=this.pipelineFactory.createRenderPipeline({...this.props,bufferLayout:this.bufferLayout,topology:this.topology,parameters:this.parameters,bindings:this._getBindings(),vs:n,fs:i}),this._attributeInfos=(0,L.P)(this.pipeline.shaderLayout,this.bufferLayout),e&&this.shaderFactory.release(e),t&&this.shaderFactory.release(t)}return this.pipeline}_logDrawCallStart(){const e=a.R.level>3?0:1e4;a.R.level<2||Date.now()-this._lastLogTime<e||(this._lastLogTime=Date.now(),this._logOpen=!0,a.R.group(2,">>> DRAWING MODEL "+this.id,{collapsed:a.R.level<=2})())}_logDrawCallEnd(){if(this._logOpen){const e=function(e,t){var n;const i={},r="Values";if(0===e.attributes.length&&(null==(n=e.varyings)||!n.length))return{"No attributes or varyings":{[r]:"N/A"}};for(const s of e.attributes)s&&(i["in "+s.location+" "+s.name+": "+s.type]={[r]:s.stepMode||"vertex"});for(const s of e.varyings||[])i["out "+s.location+" "+s.name]={[r]:JSON.stringify(s.accessor)};return i}(this.pipeline.shaderLayout,this.id);a.R.table(2,e)();const t=this.shaderInputs.getDebugTable();for(const[i,r]of Object.entries(this.uniforms))t[i]={value:r};a.R.table(2,t)();const n=this._getAttributeDebugTable();a.R.table(2,this._attributeInfos)(),a.R.table(2,n)(),a.R.groupEnd(2)(),this._logOpen=!1}}_logFramebuffer(e){const t=a.R.get("framebuffer");if(this._drawCount++,!t||this._drawCount++>3&&this._drawCount%60)return;const n=e.props.framebuffer;n&&function(e,t){var n;let{id:i,minimap:r,opaque:s,top:o="0",left:a="0",rgbaScale:l=1}=t;jt||(jt=document.createElement("canvas"),jt.id=i,jt.title=i,jt.style.zIndex="100",jt.style.position="absolute",jt.style.top=o,jt.style.left=a,jt.style.border="blue 1px solid",jt.style.transform="scaleY(-1)",document.body.appendChild(jt),qt=jt.getContext("2d")),jt.width===e.width&&jt.height===e.height||(jt.width=e.width/2,jt.height=e.height/2,jt.style.width="400px",jt.style.height="400px");const c=e.device.readPixelsToArrayWebGL(e),u=null==(n=qt)?void 0:n.createImageData(e.width,e.height);if(u){var h;const e=0;for(let t=0;t<c.length;t+=4)u.data[e+t+0]=c[t+0]*l,u.data[e+t+1]=c[t+1]*l,u.data[e+t+2]=c[t+2]*l,u.data[e+t+3]=s?255:c[t+3]*l;null==(h=qt)||h.putImageData(u,0,0)}}(n,{id:n.id,minimap:!0})}_getAttributeDebugTable(){const e={};for(const[t,n]of Object.entries(this._attributeInfos)){const i=this.vertexArray.attributes[n.location];e[n.location]={name:t,type:n.shaderType,values:i?this._getBufferOrConstantValues(i,n.bufferDataType):"null"}}if(this.vertexArray.indexBuffer){const{indexBuffer:t}=this.vertexArray,n="uint32"===t.indexType?new Uint32Array(t.debugData):new Uint16Array(t.debugData);e.indices={name:"indices",type:t.indexType,values:n.toString()}}return e}_getBufferOrConstantValues(e,t){const n=function(e){switch(e){case"float32":return Float32Array;case"uint32":return Uint32Array;case"sint32":return Int32Array;case"uint16":case"unorm16":return Uint16Array;case"sint16":case"snorm16":return Int16Array;case"uint8":case"unorm8":return Uint8Array;case"sint8":case"snorm8":return Int8Array;default:throw new Error(e)}}(t);return(e instanceof o.h?new n(e.debugData):e).toString()}}function sn(e,t){const n=[...e];for(const i of t){const e=n.findIndex((e=>e.name===i.name));e<0?n.push(i):n[e]=i}return n}function on(e){var t;return e.attributes?null==(t=e.attributes)?void 0:t.map((e=>e.attribute)):[e.name]}function an(e){let t=!0;for(const n in e){t=!1;break}return t}rn.defaultProps={...y.r.defaultProps,source:void 0,vs:null,fs:null,id:"unnamed",handle:void 0,userData:{},defines:{},modules:[],moduleSettings:void 0,geometry:null,indexBuffer:null,attributes:{},constantAttributes:{},varyings:[],shaderInputs:void 0,pipelineFactory:void 0,shaderFactory:void 0,transformFeedback:void 0,shaderAssembler:Gt.getDefaultShaderAssembler(),debugShaders:void 0,disableWarnings:void 0};class ln{constructor(e){this.userData={};const{attributes:t={},indices:n=null,vertexCount:i=null}=e;this.id=e.id||Ht("geometry"),this.topology=e.topology,n&&(this.indices=ArrayBuffer.isView(n)?{value:n,size:1}:n),this.attributes={};for(const[r,s]of Object.entries(t)){const e=ArrayBuffer.isView(s)?{value:s}:s;if(!ArrayBuffer.isView(e.value))throw new Error(this._print(r)+": must be typed array or object with value as typed array");if("POSITION"!==r&&"positions"!==r||e.size||(e.size=3),"indices"===r){if(this.indices)throw new Error("Multiple indices detected");this.indices=e}else this.attributes[r]=e}this.indices&&void 0!==this.indices.isIndexed&&(this.indices=Object.assign({},this.indices),delete this.indices.isIndexed),this.vertexCount=i||this._calculateVertexCount(this.attributes,this.indices)}getVertexCount(){return this.vertexCount}getAttributes(){return this.indices?{indices:this.indices,...this.attributes}:this.attributes}_print(e){return"Geometry "+this.id+" attribute "+e}_setAttributes(e,t){return this}_calculateVertexCount(e,t){if(t)return t.value.length;let n=1/0;for(const i of Object.values(e)){const{value:e,size:t,constant:r}=i;!r&&e&&void 0!==t&&t>=1&&(n=Math.min(n,e.length/t))}return n}}class cn extends ln{constructor(e){void 0===e&&(e={});const{id:t=Ht("cube-geometry"),indices:n=!0}=e;super(n?{...e,id:t,topology:"triangle-list",indices:{size:1,value:un},attributes:{...mn,...e.attributes}}:{...e,id:t,topology:"triangle-list",indices:void 0,attributes:{...En,...e.attributes}})}}const un=new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),hn=new Float32Array([-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1]),dn=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]),_n=new Float32Array([0,0,1,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,1,1,0,1]),pn=new Float32Array([1,-1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,-1,-1,1,1,1,1,1,1,1,-1,-1,1,-1,-1,1,1,1,1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,1,1,1,-1,1,1,-1,-1,1,-1,-1,1,1,-1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1]),fn=new Float32Array([1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,1,0,0]),gn=new Float32Array([1,0,1,1,0,0,1,1,0,0,0,1,1,0,0,1,1,0,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,0,1,1,0,1,1,1,0,1,0,1,0,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,0,1,1,1,0,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,0,1,1,1,0,1,1,0,0,1,0,1,0,1]),mn={POSITION:{size:3,value:hn},NORMAL:{size:3,value:dn},TEXCOORD_0:{size:2,value:_n}},En={POSITION:{size:3,value:pn},TEXCOORD_0:{size:2,value:fn},COLOR_0:{size:3,value:gn}};var An,Rn;function vn(e,t){return t||(t=e.slice(0)),e.raw=t,e}const Tn={name:"dirlight",dependencies:[],vs:Je(An||(An=vn(["out vec3 dirlight_vNormal;\n\nvoid dirlight_setNormal(vec3 normal) {\n  dirlight_vNormal = normalize(normal);\n}\n"],["\\\nout vec3 dirlight_vNormal;\n\nvoid dirlight_setNormal(vec3 normal) {\n  dirlight_vNormal = normalize(normal);\n}\n"]))),fs:Je(Rn||(Rn=vn(["uniform dirlightUniforms {\n  vec3 lightDirection;\n} dirlight;\n\nin vec3 dirlight_vNormal;\n\n// Returns color attenuated by angle from light source\nvec4 dirlight_filterColor(vec4 color) {\n  float d = abs(dot(dirlight_vNormal, normalize(dirlight.lightDirection)));\n  return vec4(color.rgb * d, color.a);\n}\n"],["\\\nuniform dirlightUniforms {\n  vec3 lightDirection;\n} dirlight;\n\nin vec3 dirlight_vNormal;\n\n// Returns color attenuated by angle from light source\nvec4 dirlight_filterColor(vec4 color) {\n  float d = abs(dot(dirlight_vNormal, normalize(dirlight.lightDirection)));\n  return vec4(color.rgb * d, color.a);\n}\n"]))),uniformTypes:{lightDirection:"vec3<f32>"},defaultUniforms:{lightDirection:new Float32Array([1,1,2])},props:{},uniforms:{},getUniforms:function(e){void 0===e&&(e=Tn.defaultUniforms);const t={};e.lightDirection&&(t.dirlight_uLightDirection=e.lightDirection);return t}};var Sn,bn,Cn=n(5663),In=n(4901);function Nn(){let e=1,t=1;return()=>{return e=Math.sin(17.23*t),t=Math.cos(27.92*e),(n=1432.71*Math.abs(e*t))-Math.floor(n);var n}}function yn(e,t){return t||(t=e.slice(0)),e.raw=t,e}const Ln=Nn(),Pn={uniformTypes:{uColor:"vec3<f32>",uModel:"mat4x4<f32>",uView:"mat4x4<f32>",uProjection:"mat4x4<f32>"}},wn=s(Sn||(Sn=yn(["#version 300 es\n\nin vec3 positions;\nin vec3 normals;\n\nuniform appUniforms {\n  vec3 uColor;\n  mat4 uModel;\n  mat4 uView;\n  mat4 uProjection;\n} app;\n\nout vec3 color;\n\nvoid main(void) {\n  vec3 normal = vec3(app.uModel * vec4(normals, 0.0));\n\n  // Set up data for modules\n  color = app.uColor;\n  dirlight_setNormal(normal);\n  gl_Position = app.uProjection * app.uView * app.uModel * vec4(positions, 1.0);\n}\n"],["\\\n#version 300 es\n\nin vec3 positions;\nin vec3 normals;\n\nuniform appUniforms {\n  vec3 uColor;\n  mat4 uModel;\n  mat4 uView;\n  mat4 uProjection;\n} app;\n\nout vec3 color;\n\nvoid main(void) {\n  vec3 normal = vec3(app.uModel * vec4(normals, 0.0));\n\n  // Set up data for modules\n  color = app.uColor;\n  dirlight_setNormal(normal);\n  gl_Position = app.uProjection * app.uView * app.uModel * vec4(positions, 1.0);\n}\n"]))),xn=s(bn||(bn=yn(["#version 300 es\n\nprecision highp float;\n\nin vec3 color;\nout vec4 fragColor;\n\nvoid main(void) {\n  fragColor = vec4(color, 1.);\n  fragColor = dirlight_filterColor(fragColor);\n}\n"],["\\\n#version 300 es\n\nprecision highp float;\n\nin vec3 color;\nout vec4 fragColor;\n\nvoid main(void) {\n  fragColor = vec4(color, 1.);\n  fragColor = dirlight_filterColor(fragColor);\n}\n"])));class Mn extends f{constructor(e){let{device:t,aspect:n,animationLoop:i}=e;super(),this.translations=[[2,-2,0],[2,2,0],[-2,2,0],[-2,-2,0]],this.rotations=[[Ln(),Ln(),Ln()],[Ln(),Ln(),Ln()],[Ln(),Ln(),Ln()],[Ln(),Ln(),Ln()]],this.colors=[[1,0,0],[0,1,0],[0,0,1],[1,1,0]],this.keyFrameData=[[0,0],[1e3,2*Math.PI],[2e3,Math.PI],[3e3,2*Math.PI],[4e3,0]],this.globalUniformStore=new p({dirlight:Tn});const r=document.getElementById("play"),s=document.getElementById("pause");this.timeSlider=document.getElementById("time"),r&&s&&(r.addEventListener("click",(()=>this.timeline.play())),s.addEventListener("click",(()=>this.timeline.pause())),this.timeSlider.addEventListener("input",(e=>this.timeline.setTime(parseFloat(e.target.value))))),this.timeline=new E,i.attachTimeline(this.timeline),this.timeline.play();const o=[this.timeline.addChannel({delay:2e3,rate:.5,duration:8e3,repeat:2}),this.timeline.addChannel({delay:1e4,rate:.2,duration:2e4,repeat:1}),this.timeline.addChannel({delay:7e3,rate:1,duration:4e3,repeat:8}),this.timeline.addChannel({delay:0,rate:.8,duration:5e3,repeat:Number.POSITIVE_INFINITY})];this.cubes=new Array(4);const a=[new A(this.keyFrameData),new A(this.keyFrameData),new A(this.keyFrameData),new A(this.keyFrameData)];for(let l=0;l<4;++l){this.timeline.attachAnimation(a[l],o[l]);const e=new p({app:Pn});e.setUniforms({app:{uProjection:(new Cn.k).perspective({fovy:(0,In.F2)(60),aspect:n,near:1,far:20}),uView:(new Cn.k).lookAt({center:[0,0,0],eye:[0,0,-8]}),uColor:this.colors[l]}}),this.cubes[l]={uniformStore:e,translation:this.translations[l],rotation:this.rotations[l],keyFrames:a[l],model:new rn(t,{id:"cube-"+l,vs:wn,fs:xn,modules:[Tn],geometry:new cn,parameters:{depthWriteEnabled:!0,depthCompare:"less-equal"},bindings:{app:e.getManagedUniformBuffer(t,"app"),dirlight:this.globalUniformStore.getManagedUniformBuffer(t,"dirlight")}})}}}onFinalize(){for(const e of this.cubes)e.model.destroy()}onRender(e){let{device:t}=e;this.timeSlider&&(this.timeSlider.value=this.timeline.getTime());const n=new Cn.k;for(const r of this.cubes){const e=r.keyFrames.getStartData(),t=r.keyFrames.getEndData(),i=e+r.keyFrames.factor*(t-e),s=r.rotation[0]+i,o=r.rotation[1]+i,a=r.rotation[2];n.identity().translate(r.translation).rotateXYZ([s,o,a]),r.model.setUniforms({}),r.uniformStore.setUniforms({app:{uModel:n}}),r.uniformStore.updateUniformBuffers()}const i=t.beginRenderPass({clearColor:[0,0,0,1]});for(const r of this.cubes)r.model.draw(i);i.end()}}var On,Fn,Dn,Bn;function Un(e,t){return t||(t=e.slice(0)),e.raw=t,e}Mn.info='Key frame animation based on multiple hierarchical timelines.\n<button id="play">Play</button>\n<button id="pause">Pause</button><BR>\nTime: <input type="range" id="time" min="0" max="30000" step="1"><BR>\n';class Gn extends rn{constructor(e,t){const n=s(On||(On=Un(["#version 300 es\nin vec3 positions;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\n\nout vec3 vPosition;\n\nvoid main(void) {\n  gl_Position = uProjection * uView * uModel * vec4(positions, 1.0);\n  vPosition = positions;\n}\n"],["\\\n#version 300 es\nin vec3 positions;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\n\nout vec3 vPosition;\n\nvoid main(void) {\n  gl_Position = uProjection * uView * uModel * vec4(positions, 1.0);\n  vPosition = positions;\n}\n"]))),i=s(Fn||(Fn=Un(["#version 300 es\nprecision highp float;\n\nuniform samplerCube uTextureCube;\nin vec3 vPosition;\nout vec4 fragColor;\n\nvoid main(void) {\n  // The outer cube just samples the texture cube directly\n  fragColor = texture(uTextureCube, normalize(vPosition));\n}\n"],["\\\n#version 300 es\nprecision highp float;\n\nuniform samplerCube uTextureCube;\nin vec3 vPosition;\nout vec4 fragColor;\n\nvoid main(void) {\n  // The outer cube just samples the texture cube directly\n  fragColor = texture(uTextureCube, normalize(vPosition));\n}\n"])));super(e,{...t,geometry:new cn,fs:i,vs:n})}}class kn extends rn{constructor(e,t){const n=s(Dn||(Dn=Un(["#version 300 es\nin vec3 positions;\nin vec3 normals;\nin vec2 texCoords;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\n\nout vec3 vPosition;\nout vec3 vNormal;\nout vec2 vUV;\n\nvoid main(void) {\n  gl_Position = uProjection * uView * uModel * vec4(positions, 1.0);\n  vPosition = vec3(uModel * vec4(positions,1));\n  vNormal = vec3(uModel * vec4(normals, 0));\n  vUV = texCoords;\n}\n"],["\\\n#version 300 es\nin vec3 positions;\nin vec3 normals;\nin vec2 texCoords;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\n\nout vec3 vPosition;\nout vec3 vNormal;\nout vec2 vUV;\n\nvoid main(void) {\n  gl_Position = uProjection * uView * uModel * vec4(positions, 1.0);\n  vPosition = vec3(uModel * vec4(positions,1));\n  vNormal = vec3(uModel * vec4(normals, 0));\n  vUV = texCoords;\n}\n"]))),i=s(Bn||(Bn=Un(["#version 300 es\nprecision highp float;\n\nuniform sampler2D uTexture;\nuniform samplerCube uTextureCube;\nuniform vec3 uEyePosition;\n\nin vec3 vPosition;\nin vec3 vNormal;\nin vec2 vUV;\nout vec4 fragColor;\n\nvoid main(void) {\n  vec4 color = texture(uTexture, vec2(vUV.x, 1.0 - vUV.y));\n  vec3 reflectedDir = reflect(normalize(vPosition - uEyePosition), vNormal);\n  vec4 reflectedColor = texture(uTextureCube, reflectedDir);\n\n  fragColor = color; //  * reflectedColor;\n}\n"],["\\\n#version 300 es\nprecision highp float;\n\nuniform sampler2D uTexture;\nuniform samplerCube uTextureCube;\nuniform vec3 uEyePosition;\n\nin vec3 vPosition;\nin vec3 vNormal;\nin vec2 vUV;\nout vec4 fragColor;\n\nvoid main(void) {\n  vec4 color = texture(uTexture, vec2(vUV.x, 1.0 - vUV.y));\n  vec3 reflectedDir = reflect(normalize(vPosition - uEyePosition), vNormal);\n  vec4 reflectedColor = texture(uTextureCube, reflectedDir);\n\n  fragColor = color; //  * reflectedColor;\n}\n"])));super(e,{...t,geometry:new cn,vs:n,fs:i})}}class Hn extends f{constructor(e){let{device:t}=e;super();const n=t.createTexture({dimension:"cube",mipmaps:!0,data:{"+X":(0,en.yt)("sky-posx.png"),"-X":(0,en.yt)("sky-negx.png"),"+Y":(0,en.yt)("sky-posy.png"),"-Y":(0,en.yt)("sky-negy.png"),"+Z":(0,en.yt)("sky-posz.png"),"-Z":(0,en.yt)("sky-negz.png")}}),i=new tn(t,{data:(0,en.yt)("vis-logo.png"),mipmaps:!0,sampler:{magFilter:"linear",minFilter:"linear",mipmapFilter:"nearest"}});this.cube=new Gn(t,{bindings:{uTextureCube:n},uniforms:{uModel:(new Cn.k).scale([20,20,20])},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal"}}),this.prism=new kn(t,{bindings:{uTexture:i,uTextureCube:n},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal"}})}onFinalize(){this.prism.destroy(),this.cube.destroy()}onRender(e){let{device:t,aspect:n,tick:i}=e;const r=[5,-3,5],s=(new Cn.k).lookAt({eye:r}),o=(new Cn.k).perspective({fovy:(0,In.F2)(75),aspect:n}),a=t.beginRenderPass({clearColor:[0,0,0,1]});this.cube.setUniforms({uView:s,uProjection:o}),this.cube.draw(a),this.prism.setUniforms({uEyePosition:r,uView:s,uProjection:o,uModel:(new Cn.k).rotateX(.01*i).rotateY(.013*i)}),this.prism.draw(a),a.end()}}function Vn(e,t,n){return e+n*(t-e)}function Xn(e,t){for(var n=[],i=e;i<=t;i++)n.push(i);return n}function Wn(e,t){for(var n,i=e.length,r=0;i;)n=Math.floor(t()*i),r=e[i-=1],e[i]=e[n],e[n]=r;return e}Hn.info="\n<p>\nUses a luma.gl <code>TextureCube</code> to simulate a reflective\nsurface\n</p>\n";var Kn,zn,Yn=function(e){return e*e*e*(e*(6*e-15)+10)},jn=function(e,t,n,i){var r=15&e,s=r<8?t:n,o=r<4?n:12==r||14==r?t:i;return(1&r?-s:s)+(2&r?-o:o)};function qn(e,t){return t||(t=e.slice(0)),e.raw=t,e}const Qn=Nn(),Zn=s(Kn||(Kn=qn(["#version 300 es\nin vec3 position;\n\nuniform mat4 uMVP;\n\nout vec3 vUV;\nvoid main() {\n  vUV = position.xyz + 0.5;\n  gl_Position = uMVP * vec4(position, 1.0);\n  gl_PointSize = 2.0;\n}"],["\\\n#version 300 es\nin vec3 position;\n\nuniform mat4 uMVP;\n\nout vec3 vUV;\nvoid main() {\n  vUV = position.xyz + 0.5;\n  gl_Position = uMVP * vec4(position, 1.0);\n  gl_PointSize = 2.0;\n}"]))),Jn=s(zn||(zn=qn(["#version 300 es\nprecision highp float;\nprecision lowp sampler3D;\n\nuniform sampler3D uTexture;\nuniform float uTime;\n\nin vec3 vUV;\nout vec4 fragColor;\n\nvoid main() {\n  vec4 sampleColor = texture(uTexture, vUV + vec3(0.0, 0.0, uTime));\n  float alpha = sampleColor.r * 0.01;\n  fragColor = vec4(fract(vUV) * alpha, alpha * 0.3);\n  // fragColor = vec4(fract(uTime), 0., 0., 1.);\n}"],["\\\n#version 300 es\nprecision highp float;\nprecision lowp sampler3D;\n\nuniform sampler3D uTexture;\nuniform float uTime;\n\nin vec3 vUV;\nout vec4 fragColor;\n\nvoid main() {\n  vec4 sampleColor = texture(uTexture, vUV + vec3(0.0, 0.0, uTime));\n  float alpha = sampleColor.r * 0.01;\n  fragColor = vec4(fract(vUV) * alpha, alpha * 0.3);\n  // fragColor = vec4(fract(uTime), 0., 0., 1.);\n}"])));class $n extends f{constructor(e){let{device:t}=e;super(),this.mvpMat=new Cn.k,this.viewMat=(new Cn.k).lookAt({eye:[1,1,1]});const n=function(e){if("object"!=typeof e)throw new TypeError("params is not an object");if("function"!=typeof e.interpolation)throw new TypeError("params.interpolation is not a function");if(!Array.isArray(e.permutation))throw new TypeError("params.permutation is not an array");if(256!=e.permutation.length)throw new Error("params.permutation must have 256 items");for(var t=e.interpolation,n=e.permutation.slice(0),i=0;i<256;i++)n[256+i]=n[i];return function(e,i,r){var s=Math.floor(e),o=Math.floor(i),a=Math.floor(r),l=255&s,c=255&o,u=255&a;i-=o,r-=a;var h=Yn(e-=s),d=Yn(i),_=Yn(r),p=n[l]+c,f=n[p]+u,g=n[p+1]+u,m=n[l+1]+c,E=n[m]+u,A=n[m+1]+u;return t(t(t(jn(n[f],e,i,r),jn(n[E],e-1,i,r),h),t(jn(n[g],e,i-1,r),jn(n[A],e-1,i-1,r),h),d),t(t(jn(n[f+1],e,i,r-1),jn(n[E+1],e-1,i,r-1),h),t(jn(n[g+1],e,i-1,r-1),jn(n[A+1],e-1,i-1,r-1),h),d),_)}}({interpolation:Vn,permutation:Wn(Xn(0,255),Qn)}),i=1/32,r=new Float32Array(98304);let s=0,o=-.5;for(let _=0;_<32;++_){let e=-.5;for(let t=0;t<32;++t){let t=-.5;for(let n=0;n<32;++n)r[s++]=o,r[s++]=e,r[s++]=t,t+=i;e+=i}o+=i}const a=t.createBuffer(r),l=16,c=1.12,u=new Uint8Array(4096);let h=0;for(let _=0;_<l;++_)for(let e=0;e<l;++e)for(let t=0;t<l;++t){const i=n(_/c,e/c,t/c);u[h++]=255*(.5+.5*i)}const d=t.createTexture({dimension:"3d",data:u,width:l,height:l,depth:l,format:"r8unorm",sampler:{magFilter:"nearest",minFilter:"nearest",mipmapFilter:"nearest"}});this.cloud=new rn(t,{vs:Zn,fs:Jn,topology:"point-list",vertexCount:r.length/3,bufferLayout:[{name:"position",format:"float32x3"}],attributes:{position:a},bindings:{uTexture:d},uniforms:{uView:this.viewMat},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal",blendColorOperation:"add",blendColorSrcFactor:"one",blendColorDstFactor:"one-minus-src-alpha"}})}onFinalize(){this.cloud.destroy()}onRender(e){let{device:t,tick:n,aspect:i}=e;this.mvpMat.perspective({fovy:(0,In.F2)(75),aspect:i,near:.1,far:10}).multiplyRight(this.viewMat);const r=t.beginRenderPass({clearColor:[0,0,0,1]});this.cloud.setUniforms({uTime:n/100,uMVP:this.mvpMat}),this.cloud.draw(r),r.end()}}var ei,ti;function ni(e,t){return t||(t=e.slice(0)),e.raw=t,e}$n.info="\n<p>\nVolumetric 3D noise visualized using a <b>3D texture</b>.\n<p>\nUses the luma.gl <code>Texture3D</code> class.\n",$n.props={useDevicePixels:!0};const ii=new Float32Array([0,1,1,1]),ri=Je(ei||(ei=ni(["uniform pickingUniforms {\n  float isActive;\n  float isAttribute;\n  float isHighlightActive;\n  float useFloatColors;\n  vec3 highlightedObjectColor;\n  vec4 highlightColor;\n} picking;\n\nout vec4 picking_vRGBcolor_Avalid;\n\n// Normalize unsigned byte color to 0-1 range\nvec3 picking_normalizeColor(vec3 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\n// Normalize unsigned byte color to 0-1 range\nvec4 picking_normalizeColor(vec4 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\nbool picking_isColorZero(vec3 color) {\n  return dot(color, vec3(1.0)) < 0.00001;\n}\n\nbool picking_isColorValid(vec3 color) {\n  return dot(color, vec3(1.0)) > 0.00001;\n}\n\n// Check if this vertex is highlighted \nbool isVertexHighlighted(vec3 vertexColor) {\n  vec3 highlightedObjectColor = picking_normalizeColor(picking.highlightedObjectColor);\n  return\n    bool(picking.isHighlightActive) && picking_isColorZero(abs(vertexColor - highlightedObjectColor));\n}\n\n// Set the current picking color\nvoid picking_setPickingColor(vec3 pickingColor) {\n  pickingColor = picking_normalizeColor(pickingColor);\n\n  if (bool(picking.isActive)) {\n    // Use alpha as the validity flag. If pickingColor is [0, 0, 0] fragment is non-pickable\n    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));\n\n    // if (!bool(picking.isAttribute)) {\n    // Stores the picking color so that the fragment shader can render it during picking\n    picking_vRGBcolor_Avalid.rgb = pickingColor;\n    // }\n  } else {\n    // Do the comparison with selected item color in vertex shader as it should mean fewer compares\n    picking_vRGBcolor_Avalid.a = float(isVertexHighlighted(pickingColor));\n  }\n}\n\nvoid picking_setPickingAttribute(float value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.r = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec2 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rg = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec3 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rgb = value;\n  }\n}\n"],["\\\nuniform pickingUniforms {\n  float isActive;\n  float isAttribute;\n  float isHighlightActive;\n  float useFloatColors;\n  vec3 highlightedObjectColor;\n  vec4 highlightColor;\n} picking;\n\nout vec4 picking_vRGBcolor_Avalid;\n\n// Normalize unsigned byte color to 0-1 range\nvec3 picking_normalizeColor(vec3 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\n// Normalize unsigned byte color to 0-1 range\nvec4 picking_normalizeColor(vec4 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\nbool picking_isColorZero(vec3 color) {\n  return dot(color, vec3(1.0)) < 0.00001;\n}\n\nbool picking_isColorValid(vec3 color) {\n  return dot(color, vec3(1.0)) > 0.00001;\n}\n\n// Check if this vertex is highlighted \nbool isVertexHighlighted(vec3 vertexColor) {\n  vec3 highlightedObjectColor = picking_normalizeColor(picking.highlightedObjectColor);\n  return\n    bool(picking.isHighlightActive) && picking_isColorZero(abs(vertexColor - highlightedObjectColor));\n}\n\n// Set the current picking color\nvoid picking_setPickingColor(vec3 pickingColor) {\n  pickingColor = picking_normalizeColor(pickingColor);\n\n  if (bool(picking.isActive)) {\n    // Use alpha as the validity flag. If pickingColor is [0, 0, 0] fragment is non-pickable\n    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));\n\n    // if (!bool(picking.isAttribute)) {\n    // Stores the picking color so that the fragment shader can render it during picking\n    picking_vRGBcolor_Avalid.rgb = pickingColor;\n    // }\n  } else {\n    // Do the comparison with selected item color in vertex shader as it should mean fewer compares\n    picking_vRGBcolor_Avalid.a = float(isVertexHighlighted(pickingColor));\n  }\n}\n\nvoid picking_setPickingAttribute(float value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.r = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec2 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rg = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec3 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rgb = value;\n  }\n}\n"]))),si=Je(ti||(ti=ni(["uniform pickingUniforms {\n  float isActive;\n  float isAttribute;\n  float isHighlightActive;\n  float useFloatColors;\n  vec3 highlightedObjectColor;\n  vec4 highlightColor;\n} picking;\n\nin vec4 picking_vRGBcolor_Avalid;\n\n/*\n * Returns highlight color if this item is selected.\n */\nvec4 picking_filterHighlightColor(vec4 color) {\n  // If we are still picking, we don't highlight\n  if (picking.isActive > 0.5) {\n    return color;\n  }\n\n  bool selected = bool(picking_vRGBcolor_Avalid.a);\n\n  if (selected) {\n    // Blend in highlight color based on its alpha value\n    float highLightAlpha = picking.highlightColor.a;\n    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\n    float highLightRatio = highLightAlpha / blendedAlpha;\n\n    vec3 blendedRGB = mix(color.rgb, picking.highlightColor.rgb, highLightRatio);\n    return vec4(blendedRGB, blendedAlpha);\n  } else {\n    return color;\n  }\n}\n\n/*\n * Returns picking color if picking enabled else unmodified argument.\n */\nvec4 picking_filterPickingColor(vec4 color) {\n  if (bool(picking.isActive)) {\n    if (picking_vRGBcolor_Avalid.a == 0.0) {\n      discard;\n    }\n    return picking_vRGBcolor_Avalid;\n  }\n  return color;\n}\n\n/*\n * Returns picking color if picking is enabled if not\n * highlight color if this item is selected, otherwise unmodified argument.\n */\nvec4 picking_filterColor(vec4 color) {\n  vec4 highlightColor = picking_filterHighlightColor(color);\n  return picking_filterPickingColor(highlightColor);\n}\n"],["\\\nuniform pickingUniforms {\n  float isActive;\n  float isAttribute;\n  float isHighlightActive;\n  float useFloatColors;\n  vec3 highlightedObjectColor;\n  vec4 highlightColor;\n} picking;\n\nin vec4 picking_vRGBcolor_Avalid;\n\n/*\n * Returns highlight color if this item is selected.\n */\nvec4 picking_filterHighlightColor(vec4 color) {\n  // If we are still picking, we don't highlight\n  if (picking.isActive > 0.5) {\n    return color;\n  }\n\n  bool selected = bool(picking_vRGBcolor_Avalid.a);\n\n  if (selected) {\n    // Blend in highlight color based on its alpha value\n    float highLightAlpha = picking.highlightColor.a;\n    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\n    float highLightRatio = highLightAlpha / blendedAlpha;\n\n    vec3 blendedRGB = mix(color.rgb, picking.highlightColor.rgb, highLightRatio);\n    return vec4(blendedRGB, blendedAlpha);\n  } else {\n    return color;\n  }\n}\n\n/*\n * Returns picking color if picking enabled else unmodified argument.\n */\nvec4 picking_filterPickingColor(vec4 color) {\n  if (bool(picking.isActive)) {\n    if (picking_vRGBcolor_Avalid.a == 0.0) {\n      discard;\n    }\n    return picking_vRGBcolor_Avalid;\n  }\n  return color;\n}\n\n/*\n * Returns picking color if picking is enabled if not\n * highlight color if this item is selected, otherwise unmodified argument.\n */\nvec4 picking_filterColor(vec4 color) {\n  vec4 highlightColor = picking_filterHighlightColor(color);\n  return picking_filterPickingColor(highlightColor);\n}\n"]))),oi={name:"picking",uniformTypes:{isActive:"f32",isAttribute:"f32",isHighlightActive:"f32",useFloatColors:"f32",highlightedObjectColor:"vec3<f32>",highlightColor:"vec4<f32>"},defaultUniforms:{isActive:!1,isAttribute:!1,isHighlightActive:!1,useFloatColors:!0,highlightedObjectColor:new Float32Array([0,0,0]),highlightColor:ii},vs:ri,fs:si,props:{},uniforms:{},getUniforms:function(e,t){void 0===e&&(e={});const n={};if(void 0===e.highlightedObjectColor);else if(null===e.highlightedObjectColor)n.isHighlightActive=!1;else{n.isHighlightActive=!0;const t=e.highlightedObjectColor.slice(0,3);n.highlightedObjectColor=t}if(e.highlightColor){const t=Array.from(e.highlightColor,(e=>e/255));Number.isFinite(t[3])||(t[3]=1),n.highlightColor=t}void 0!==e.isActive&&(n.isActive=Boolean(e.isActive),n.isAttribute=Boolean(e.isAttribute));void 0!==e.useFloatColors&&(n.useFloatColors=Boolean(e.useFloatColors));return n}};var ai,li;function ci(e,t){return t||(t=e.slice(0)),e.raw=t,e}const ui=Nn(),hi=s(ai||(ai=ci(["#version 300 es\n\nin vec3 positions;\nin vec3 normals;\n\nin vec2 instanceOffsets;\nin vec3 instanceColors;\nin vec2 instancePickingColors;\n\nuniform appUniforms {\n  mat4 modelMatrix;\n  mat4 viewMatrix;\n  mat4 projectionMatrix;\n  float time;\n} app;\n\nout vec3 color;\n\nvoid main(void) {\n  color = instanceColors;\n\n  vec3 normal = vec3(app.modelMatrix * vec4(normals, 1.0));\n  dirlight_setNormal(normal);\n\n  vec4 pickColor = vec4(0., instancePickingColors, 1.0);\n  picking_setPickingColor(pickColor.rgb);\n\n  // Vertex position (z coordinate undulates with time), and model rotates around center\n  float delta = length(instanceOffsets);\n  vec4 offset = vec4(instanceOffsets, sin((app.time + delta) * 0.1) * 16.0, 0);\n  gl_Position = app.projectionMatrix * app.viewMatrix * (app.modelMatrix * vec4(positions * 1., 1.0) + offset);\n}\n"],["\\\n#version 300 es\n\nin vec3 positions;\nin vec3 normals;\n\nin vec2 instanceOffsets;\nin vec3 instanceColors;\nin vec2 instancePickingColors;\n\nuniform appUniforms {\n  mat4 modelMatrix;\n  mat4 viewMatrix;\n  mat4 projectionMatrix;\n  float time;\n} app;\n\nout vec3 color;\n\nvoid main(void) {\n  color = instanceColors;\n\n  vec3 normal = vec3(app.modelMatrix * vec4(normals, 1.0));\n  dirlight_setNormal(normal);\n\n  vec4 pickColor = vec4(0., instancePickingColors, 1.0);\n  picking_setPickingColor(pickColor.rgb);\n\n  // Vertex position (z coordinate undulates with time), and model rotates around center\n  float delta = length(instanceOffsets);\n  vec4 offset = vec4(instanceOffsets, sin((app.time + delta) * 0.1) * 16.0, 0);\n  gl_Position = app.projectionMatrix * app.viewMatrix * (app.modelMatrix * vec4(positions * 1., 1.0) + offset);\n}\n"]))),di=s(li||(li=ci(["#version 300 es\nprecision highp float;\n\nin vec3 color;\nout vec4 fragColor;\n\nvoid main(void) {\n  fragColor = vec4(color, 1.);\n  fragColor = dirlight_filterColor(fragColor);\n  fragColor = picking_filterColor(fragColor);\n}\n"],["\\\n#version 300 es\nprecision highp float;\n\nin vec3 color;\nout vec4 fragColor;\n\nvoid main(void) {\n  fragColor = vec4(color, 1.);\n  fragColor = dirlight_filterColor(fragColor);\n  fragColor = picking_filterColor(fragColor);\n}\n"]))),_i=256;class pi extends rn{constructor(e,t){const n=[];for(let c=0;c<_i;c++){const e=3*c-382.5;for(let t=0;t<_i;t++){const i=3*t-382.5;n.push(e,i)}}const i=new Float32Array(n),r=new Uint8Array(262144).map(((e,t)=>255*(.75*ui()+.25)));for(let c=0;c<r.length;c+=4)r[c+3]=255;const s=new Uint8Array(262144);for(let c=0;c<_i;c++)for(let e=0;e<_i;e++)s[2*(c*_i+e)+0]=c,s[2*(c*_i+e)+1]=e,s[2*(c*_i+e)+2]=0,s[2*(c*_i+e)+3]=0;const o=e.createBuffer(i),a=e.createBuffer(r),l=e.createBuffer(s);super(e,{...t,source:"\n// MODULE: dirlight\n\nstruct DirlightUniforms {\n  lightDirection: vec3<f32>,\n}\n\n@group(0) @binding(1) var<uniform> dirlight : DirlightUniforms;\n\nfn dirlight_filterColor(color: vec4<f32>, normal: vec3<f32>) -> vec4<f32> {\n  let d: f32 = abs(dot(normal, normalize(dirlight.lightDirection)));\n  return vec4<f32>(color.rgb * d, color.a);\n}\n\n\n// APPLICATION\n\nstruct AppUniforms {\n  modelMatrix: mat4x4<f32>,\n  viewMatrix: mat4x4<f32>,\n  projectionMatrix: mat4x4<f32>,\n  time: f32,\n};\n\n@group(0) @binding(0) var<uniform> app : AppUniforms;\n\nstruct VertexInputs {\n  // CUBE GEOMETRY\n  @location(0) positions : vec4<f32>,\n  @location(1) normals : vec3<f32>,\n  // INSTANCED ATTRIBUTES\n  @location(2) instanceOffsets : vec2<f32>,\n  @location(3) instanceColors : vec4<f32>,\n  @location(4) instancePickingColors : vec2<f32>,\n}\n\nstruct FragmentInputs {\n  @builtin(position) Position : vec4<f32>,\n  @location(0) normal : vec3<f32>,\n  @location(1) color : vec4<f32>,\n}\n\n@vertex\nfn vertexMain(inputs: VertexInputs) -> FragmentInputs {\n  var outputs: FragmentInputs;\n\n  // Vertex position (z coordinate undulates with time), and model rotates around center\n  let delta = length(inputs.instanceOffsets);\n  let offset = vec4<f32>(inputs.instanceOffsets, sin((app.time + delta) * 0.1) * 16.0, 0);\n  outputs.Position = app.projectionMatrix * app.viewMatrix * (app.modelMatrix * inputs.positions + offset);\n  \n  outputs.normal = (app.modelMatrix * vec4<f32>(inputs.normals, 0.0)).xyz;\n  outputs.color = inputs.instanceColors;\n\n  // vec4 pickColor = vec4(0., instancePickingColors, 1.0);\n  // picking_setPickingColor(pickColor.rgb);\n  \n  return outputs;\n}\n\n@fragment\nfn fragmentMain(inputs: FragmentInputs) -> @location(0) vec4<f32> {\n  var color = inputs.color; \n  color = dirlight_filterColor(color, inputs.normal); \n  return color;\n}\n",vs:hi,fs:di,modules:"webgpu"!==e.info.type?[Tn,oi]:[Tn],instanceCount:65536,geometry:new cn({indices:!0}),bufferLayout:[{name:"instanceOffsets",format:"float32x2"},{name:"instanceColors",format:"unorm8x4"},{name:"instancePickingColors",format:"unorm8x4"}],attributes:{instanceOffsets:o,instanceColors:a,instancePickingColors:l},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal"}})}}const fi={uniformTypes:{modelMatrix:"mat4x4<f32>",viewMatrix:"mat4x4<f32>",projectionMatrix:"mat4x4<f32>",time:"f32"}};class gi extends f{constructor(e){let{device:t,animationLoop:n}=e;super(),this.shaderInputs=new $t({app:fi,dirlight:Tn,picking:oi}),this.timeline=new E,n.attachTimeline(this.timeline),this.timeline.play(),this.timelineChannels={timeChannel:this.timeline.addChannel({rate:.01}),eyeXChannel:this.timeline.addChannel({rate:3e-4}),eyeYChannel:this.timeline.addChannel({rate:4e-4}),eyeZChannel:this.timeline.addChannel({rate:2e-4})},"webgpu"!==t.info.type&&(this.pickingFramebuffer=t.createFramebuffer({colorAttachments:["rgba8unorm"],depthStencilAttachment:"depth24plus"})),this.cube=new pi(t,{shaderInputs:this.shaderInputs})}onRender(e){const{device:t,aspect:n,tick:i}=e,{_mousePosition:r}=e,{timeChannel:s,eyeXChannel:o,eyeYChannel:a,eyeZChannel:l}=this.timelineChannels;this.shaderInputs.setProps({app:{time:this.timeline.getTime(s),projectionMatrix:(new Cn.k).perspective({fovy:(0,In.F2)(60),aspect:n,near:1,far:2048}),viewMatrix:(new Cn.k).lookAt({center:[0,0,0],eye:[Math.cos(this.timeline.getTime(o))*_i/2,Math.sin(this.timeline.getTime(a))*_i/2,(Math.sin(this.timeline.getTime(l))+1)*_i/4+32]}),modelMatrix:(new Cn.k).rotateX(.01*i).rotateY(.013*i)}}),"webgpu"!==t.info.type&&this.pickInstance(t,r,this.cube,this.pickingFramebuffer);const c=t.beginRenderPass({clearColor:[0,0,0,1],clearDepth:1,clearStencil:0});this.cube.draw(c),c.end()}onFinalize(e){this.cube.destroy()}pickInstance(e,t,n,i){if(!t)return void this.shaderInputs.setProps({picking:{highlightedObjectColor:null}});const r=e.canvasContext.cssToDevicePixels(t),s=r.x+Math.floor(r.width/2),o=r.y+Math.floor(r.height/2);i.resize(e.canvasContext.getPixelSize()),this.shaderInputs.setProps({picking:{isActive:!0}});const a=e.beginRenderPass({framebuffer:i,clearColor:[0,0,0,0],clearDepth:1});n.draw(a),a.end();const l=i.device.readPixelsToArrayWebGL(i,{sourceX:s,sourceY:o,sourceWidth:1,sourceHeight:1});let c=new Float32Array(l).map((e=>e/255));c[0]+c[1]+c[2]>0||(c=null),this.shaderInputs.setProps({picking:{isActive:!1,highlightedObjectColor:c}})}}gi.info="\n<p>\nCube drawn with <b>instanced rendering</b>.\n<p>\nA luma.gl <code>Cube</code>, rendering 65,536 instances in a\nsingle GPU draw call using instanced vertex attributes.\n",gi.props={createFramebuffer:!0,debug:!0};class mi extends ln{constructor(e){void 0===e&&(e={});const{id:t=Ht("sphere-geometry")}=e,{indices:n,attributes:i}=function(e){const{nlat:t=10,nlong:n=10}=e,i=0,r=Math.PI-i,s=0,o=2*Math.PI-s,a=(t+1)*(n+1),l=(t,n,i,r,s)=>e.radius||1,c=new Float32Array(3*a),u=new Float32Array(3*a),h=new Float32Array(2*a),d=new(a>65535?Uint32Array:Uint16Array)(t*n*6);for(let p=0;p<=t;p++)for(let e=0;e<=n;e++){const i=e/n,s=p/t,a=e+p*(n+1),d=2*a,_=3*a,f=o*i,g=r*s,m=Math.sin(f),E=Math.cos(f),A=Math.sin(g),R=E*A,v=Math.cos(g),T=m*A,S=l(R,v,T,i,s);c[_+0]=S*R,c[_+1]=S*v,c[_+2]=S*T,u[_+0]=R,u[_+1]=v,u[_+2]=T,h[d+0]=i,h[d+1]=1-s}const _=n+1;for(let p=0;p<n;p++)for(let e=0;e<t;e++){const n=6*(p*t+e);d[n+0]=e*_+p,d[n+1]=e*_+p+1,d[n+2]=(e+1)*_+p,d[n+3]=(e+1)*_+p,d[n+4]=e*_+p+1,d[n+5]=(e+1)*_+p+1}return{indices:{size:1,value:d},attributes:{POSITION:{size:3,value:c},NORMAL:{size:3,value:u},TEXCOORD_0:{size:2,value:h}}}}(e);super({...e,id:t,topology:"triangle-list",indices:n,attributes:{...i,...e.attributes}})}}var Ei,Ai,Ri,vi,Ti,Si=n(7597);function bi(e,t){return t||(t=e.slice(0)),e.raw=t,e}const Ci={uniformTypes:{color:"vec3<f32>",lighting:"f32",modelViewMatrix:"mat4x4<f32>",projectionMatrix:"mat4x3<f32>"}},Ii="#version 300 es\n\nstruct VertexInputs {\n  positions: vec3<f32>;\n  normals: vec3<f32>;\n}\n\nstruct FragmentInputs {\n  @builtin(position) position: vec4<f32>;\n  normal: vec3<f32>;\n}\n\nuniform sphereUniforms {\n  // fragment shader\n  color: vec3<f32>;\n  lighting: bool;\n  // vertex shader\n  modelViewMatrix: mat4<f32>;\n  projectionMatrix: mat4<f32>;\n} sphere;\n\n\n@vertex\nfn vertexMain(inputs: VertexInputs) -> FragmentInputs {\n  const outputs: VertexOutputs;\n  gl_Position = sphere.projectionMatrix * sphere.modelViewMatrix * vec4(inputs.positions, 1.0);\n  outputs.normal = vec3((sphere.modelViewMatrix * vec4(inputs.normals, 0.0)));\n  return outputs;\n}\n\n@fragment\nfn fragmentMain(inputs: FragmentInputs) -> [[location(0)]] vec4<f32> {\n  let attenuation = 1.0;\n  if (sphere.lighting) {\n    light = normalize(vec3(1,1,2));\n    attenuation = dot(normal, light);\n  }\n  return vec4(sphere.color * attenuation, 1);\n}\n",Ni=s(Ei||(Ei=bi(["#version 300 es\n\nin vec3 positions;\nin vec3 normals;\n\nuniform sphereUniforms {\n  // fragment shader\n  vec3 color;\n  bool lighting;\n  // vertex shader\n  mat4 modelViewMatrix;\n  mat4 projectionMatrix;\n} sphere;\n\nout vec3 normal;\n\nvoid main(void) {\n  gl_Position = sphere.projectionMatrix * sphere.modelViewMatrix * vec4(positions, 1.0);\n  normal = vec3((sphere.modelViewMatrix * vec4(normals, 0.0)));\n}\n"],["\\\n#version 300 es\n\nin vec3 positions;\nin vec3 normals;\n\nuniform sphereUniforms {\n  // fragment shader\n  vec3 color;\n  bool lighting;\n  // vertex shader\n  mat4 modelViewMatrix;\n  mat4 projectionMatrix;\n} sphere;\n\nout vec3 normal;\n\nvoid main(void) {\n  gl_Position = sphere.projectionMatrix * sphere.modelViewMatrix * vec4(positions, 1.0);\n  normal = vec3((sphere.modelViewMatrix * vec4(normals, 0.0)));\n}\n"]))),yi=s(Ai||(Ai=bi(["#version 300 es\n\nprecision highp float;\n\nuniform sphereUniforms {\n  // fragment\n  vec3 color;\n  bool lighting;\n  // vertex\n  mat4 modelViewMatrix;\n  mat4 projectionMatrix;\n} sphere;\n\nin vec3 normal;\nout vec4 fragColor;\n\nvoid main(void) {\n  float attenuation = 1.0;\n  if (sphere.lighting) {\n    vec3 light = normalize(vec3(1,1,2));\n    attenuation = dot(normal, light);\n  }\n  fragColor = vec4(sphere.color * attenuation, 1);\n}\n"],["\\\n#version 300 es\n\nprecision highp float;\n\nuniform sphereUniforms {\n  // fragment\n  vec3 color;\n  bool lighting;\n  // vertex\n  mat4 modelViewMatrix;\n  mat4 projectionMatrix;\n} sphere;\n\nin vec3 normal;\nout vec4 fragColor;\n\nvoid main(void) {\n  float attenuation = 1.0;\n  if (sphere.lighting) {\n    vec3 light = normalize(vec3(1,1,2));\n    attenuation = dot(normal, light);\n  }\n  fragColor = vec4(sphere.color * attenuation, 1);\n}\n"]))),Li={uniformTypes:{resolution:"vec2<f32>"}},Pi="fn getQuadVertex(vertexIndex : u32) -> vec2f {\n  // SCREEN QUAD\n  let positions = array(\n    // 1st triangle\n    vec2f( 0.0,  0.0),  // center\n    vec2f( 1.0,  0.0),  // right, center\n    vec2f( 0.0,  1.0),  // center, top\n    // 2st triangle\n    vec2f( 0.0,  1.0),  // center, top\n    vec2f( 1.0,  0.0),  // right, center\n    vec2f( 1.0,  1.0),  // right, top\n  );\n  return positions[vertexIndex];\n}\n",wi="\n"+Pi+"\n\nstruct FragmentInputs {\n  @builtin(position) position: vec4f,\n  @location(0) texcoord: vec2f,\n};\n\n@vertex fn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> FragmentInputs {\n  var outputs: FragmentInputs;\n  let xy = getQuadVertex(vertexIndex);\n  outputs.position = vec4f(xy, 0.0, 1.0);\n  outputs.texcoord = xy;\n  return outputs;\n}\n\n@group(0) @binding(0) var texture : texture_2d<f32>;\n@group(0) @binding(1) var sampler : sampler;\n\n@fragment fn fragmentMain(inputs: FragmentInputs) -> @location(0) vec4f {\n  return textureSample(texture, sampler, inputs.texcoord);\n}\n",xi=s(Ri||(Ri=bi(["#version 300 es\n\nin vec2 aPosition;\n\nvoid main(void) {\n  gl_Position = vec4(aPosition, 0, 1);\n}\n"],["\\\n#version 300 es\n\nin vec2 aPosition;\n\nvoid main(void) {\n  gl_Position = vec4(aPosition, 0, 1);\n}\n"]))),Mi=s(vi||(vi=bi(["#version 300 es\n\nprecision highp float;\n\nuniform sampler2D uTexture;\n\nuniform screenQuadUniforms {\n  vec2 resolution;\n} screenQuad;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  vec2 p = gl_FragCoord.xy/screenQuad.resolution.xy;\n  fragColor = texture(uTexture, p);\n}\n"],["\\\n#version 300 es\n\nprecision highp float;\n\nuniform sampler2D uTexture;\n\nuniform screenQuadUniforms {\n  vec2 resolution;\n} screenQuad;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  vec2 p = gl_FragCoord.xy/screenQuad.resolution.xy;\n  fragColor = texture(uTexture, p);\n}\n"]))),Oi={uniformTypes:{resolution:"vec2<f32>"}},Fi="\n"+Pi+"\n\nstruct FragmentInputs {\n  @builtin(position) position: vec4f,\n  @location(0) texcoord: vec2f,\n};\n\n@vertex fn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> FragmentInputs {\n  var outputs: FragmentInputs;\n  let xy = getQuadVertex(vertexIndex);\n  outputs.position = vec4f(xy, 0.0, 1.0);\n  outputs.texcoord = xy;\n  return outputs;\n}\n\n@group(0) @binding(0) var sceneTexture : texture_2d<f32>;\n@group(0) @binding(1) var persistenceTexture : texture_2d<f32>;\n@group(0) @binding(2) var sampler : sampler;\n\n@fragment \nfn fragmentMain(inputs: FragmentInputs) -> @location(0) vec4f {\n  let sceneColor = textureSample(sceneTexture, sampler, inputs.texcoord);\n  let persistenceColor = textureSample(persistenceTexture, sampler, inputs.texcoord);\n  return mix(sceneColor * 4.0, persistenceColor, 0.9);\n}\n",Di=s(Ti||(Ti=bi(["#version 300 es\n\nprecision highp float;\n\nuniform sampler2D uScene;\nuniform sampler2D uPersistence;\n\nuniform persistenceQuadUniforms {\n  vec2 resolution;\n} persistence;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  vec2 p = gl_FragCoord.xy / persistence.resolution.xy;\n  vec4 cS = texture(uScene, p);\n  vec4 cP = texture(uPersistence, p);\n  fragColor = mix(cS*4.0, cP, 0.9);\n}\n"],["\\\n#version 300 es\n\nprecision highp float;\n\nuniform sampler2D uScene;\nuniform sampler2D uPersistence;\n\nuniform persistenceQuadUniforms {\n  vec2 resolution;\n} persistence;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  vec2 p = gl_FragCoord.xy / persistence.resolution.xy;\n  vec4 cS = texture(uScene, p);\n  vec4 cP = texture(uPersistence, p);\n  fragColor = mix(cS*4.0, cP, 0.9);\n}\n"]))),Bi=Nn(),Ui=[],Gi=[],ki=[];class Hi extends f{constructor(e){let{device:t,width:n,height:i}=e;super(),this.uniformStore=new p({sphere:Ci,screenQuad:Li,persistenceQuad:Oi}),this.electron=new rn(t,{id:"electron",source:Ii,vs:Ni,fs:yi,geometry:new mi({nlat:20,nlong:30}),bindings:{sphere:this.uniformStore.getManagedUniformBuffer(t,"sphere")},parameters:{depthWriteEnabled:!0,depthCompare:"less",cullMode:"back"}}),this.nucleon=new rn(t,{id:"nucleon",source:Ii,vs:Ni,fs:yi,geometry:new mi({nlat:20,nlong:30}),parameters:{depthWriteEnabled:!0,depthCompare:"less-equal",cullMode:"back"},bindings:{sphere:this.uniformStore.getManagedUniformBuffer(t,"sphere")}}),this.mainFramebuffer=t.createFramebuffer({width:n,height:i,colorAttachments:["rgba8unorm"],depthStencilAttachment:"depth24plus"}),this.pingpongFramebuffers=[t.createFramebuffer({width:n,height:i,colorAttachments:["rgba8unorm"],depthStencilAttachment:"depth24plus"}),t.createFramebuffer({width:n,height:i,colorAttachments:["rgba8unorm"],depthStencilAttachment:"depth24plus"})];const r=new ln({topology:"triangle-list",attributes:{aPosition:{value:new Float32Array([-1,-1,1,-1,1,1,-1,-1,1,1,-1,1]),size:2}},vertexCount:6});this.screenQuad=new rn(t,{id:"quad",source:wi,vs:xi,fs:Mi,geometry:r,bindings:{screenQuad:this.uniformStore.getManagedUniformBuffer(t,"screenQuad")},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal",cullMode:"back"}}),this.persistenceQuad=new rn(t,{id:"persistence-quad",source:Fi,vs:xi,fs:Di,geometry:r,bindings:{persistenceQuad:this.uniformStore.getManagedUniformBuffer(t,"persistenceQuad")},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal",cullMode:"back"}});for(let s=0;s<64;s++){const e=new Si.P(Bi()-.5,Bi()-.5,Bi()-.5),t=Bi()+1;e.normalize().scale(t);const n=1.25;e.scale(n),Ui.push(e);const i=new Si.P(Bi()-.5,Bi()-.5,Bi()-.5),r=e.clone().cross(i).normalize(),s=4/t*.0125,o=(new Cn.k).rotateAxis(s,r);Gi.push(o)}for(let s=0;s<64;s++){let e=new Si.P(Bi()-.5,Bi()-.5,Bi()-.5);e=e.normalize().scale(.5),ki.push(e)}}onFinalize(e){this.electron.destroy(),this.nucleon.destroy(),this.mainFramebuffer.destroy(),this.pingpongFramebuffers[0].destroy(),this.pingpongFramebuffers[1].destroy(),this.screenQuad.destroy(),this.persistenceQuad.destroy()}onRender(e){let{device:t,tick:n,width:i,height:r,aspect:s}=e;this.mainFramebuffer.resize({width:i,height:r}),this.pingpongFramebuffers[0].resize({width:i,height:r}),this.pingpongFramebuffers[1].resize({width:i,height:r});const o=(new Cn.k).perspective({fovy:(0,In.F2)(75),aspect:s}),a=(new Cn.k).lookAt({eye:[0,0,4]}),l=t.beginRenderPass({framebuffer:this.mainFramebuffer,clearColor:[0,0,0,1],clearDepth:1});this.uniformStore.setUniforms({sphere:{color:[0,.5,1],lighting:!1}});for(let p=0;p<64;p++){Ui[p]=Gi[p].transformVector(Ui[p]);const e=(new Cn.k).translate(Ui[p]).scale([.06125,.06125,.06125]);this.uniformStore.setUniforms({sphere:{modelViewMatrix:a.clone().multiplyRight(e),projectionMatrix:o}}),this.uniformStore.updateUniformBuffers(),this.electron.draw(l)}this.uniformStore.setUniforms({sphere:{color:[1,.25,.25],lighting:!0}});for(let p=0;p<64;p++){const e=(new Cn.k).rotateXYZ([.013*n,0,0]).rotateXYZ([0,.021*n,0]).translate(ki[p]),t=[e[12],e[13],e[14]];e.identity().translate(t).scale([.25,.25,.25]),this.uniformStore.setUniforms({sphere:{modelViewMatrix:a.clone().multiplyRight(e),projectionMatrix:o}}),this.uniformStore.updateUniformBuffers(),this.nucleon.draw(l)}l.end();const c=n%2,u=this.pingpongFramebuffers[c],h=this.pingpongFramebuffers[1-c],d=t.beginRenderPass({framebuffer:u,clearColor:[0,0,0,1]});this.persistenceQuad.setBindings({uScene:this.mainFramebuffer.colorAttachments[0],uPersistence:h.colorAttachments[0]}),this.uniformStore.setUniforms({persistenceQuad:{resolution:[i,r]}}),this.uniformStore.updateUniformBuffers(),this.persistenceQuad.draw(d),d.end();const _=t.beginRenderPass({clearColor:[1,0,0,1]});this.screenQuad.setBindings({uTexture:u.colorAttachments[0]}),this.uniformStore.setUniforms({screenQuad:{resolution:[i,r]}}),this.uniformStore.updateUniformBuffers(),this.screenQuad.draw(_),_.end()}}var Vi,Xi;function Wi(e,t){return t||(t=e.slice(0)),e.raw=t,e}Hi.info="\n<p>\n  Electron trails renderings persist across multiple frames.\n<p>\n  Uses multiple luma.gl <code>Framebuffer</code>s to hold previously rendered data between frames.\n</p>\n";const Ki=s(Vi||(Vi=Wi(["#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = 0.5 * (vec4(positions, 1.) + vec4(1., 1., 1., 1.));\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = 0.5 * (vec4(positions, 1.) + vec4(1., 1., 1., 1.));\n}\n"]))),zi=s(Xi||(Xi=Wi(["#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\n\nuniform sampler2D uTexture;\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = fragPosition;\n  fragColor = texture(uTexture, vec2(fragUV.x, 1.0 - fragUV.y));\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\n\nuniform sampler2D uTexture;\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = fragPosition;\n  fragColor = texture(uTexture, vec2(fragUV.x, 1.0 - fragUV.y));\n}\n"]))),Yi={uniformTypes:{mvpMatrix:"mat4x4<f32>"}},ji=[0,0,5];class qi extends f{constructor(e){let{device:t}=e;super(),this.mvpMatrix=new Cn.k,this.viewMatrix=(new Cn.k).lookAt({eye:ji}),this.uniformStore=new p({app:Yi});const n=new tn(t,{usage:I.g.TEXTURE&I.g.COPY_DST,data:(0,en.yt)("vis-logo.png"),mipmaps:!0,sampler:t.createSampler({minFilter:"linear",magFilter:"linear",mipmapFilter:"linear"})});this.model=new rn(t,{id:"rotating-cube",source:"struct Uniforms {\n  modelViewProjectionMatrix : mat4x4<f32>,\n};\n\n@binding(0) @group(0) var<uniform> app : Uniforms;\n\nstruct VertexInputs {\n  // CUBE GEOMETRY\n  @location(0) positions : vec4<f32>,\n  @location(1) texCoords : vec2<f32>\n};\n\nstruct FragmentInputs {\n  @builtin(position) Position : vec4<f32>,\n  @location(0) fragUV : vec2<f32>,\n  @location(1) fragPosition: vec4<f32>,\n}\n\n@vertex\nfn vertexMain(inputs: VertexInputs) -> FragmentInputs {\n  var outputs : FragmentInputs;\n  outputs.Position = app.modelViewProjectionMatrix * inputs.positions;\n  outputs.fragUV = inputs.texCoords;\n  outputs.fragPosition = 0.5 * (inputs.positions + vec4(1.0, 1.0, 1.0, 1.0));\n  return outputs;\n}\n\n@fragment\nfn fragmentMain(inputs: FragmentInputs) -> @location(0) vec4<f32> {\n  return inputs.fragPosition;\n}\n",vs:Ki,fs:zi,geometry:new cn({indices:!1}),bindings:{app:this.uniformStore.getManagedUniformBuffer(t,"app"),uTexture:n},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal"}})}onFinalize(){this.model.destroy(),this.uniformStore.destroy()}onRender(e){let{device:t,aspect:n,tick:i}=e;this.mvpMatrix.perspective({fovy:Math.PI/3,aspect:n}).multiplyRight(this.viewMatrix).rotateX(.01*i).rotateY(.013*i),this.uniformStore.setUniforms({app:{mvpMatrix:this.mvpMatrix}});const r=t.beginRenderPass({clearColor:[0,0,0,1]});this.model.draw(r),r.end()}}var Qi,Zi,Ji,$i;function er(e,t){return t||(t=e.slice(0)),e.raw=t,e}qi.info="<p>\nDrawing a textured cube\n</p>\n";const tr={name:"color",vs:s(Qi||(Qi=er(["out vec3 color_vColor;\n\nvoid color_setColor(vec3 color) {\n  color_vColor = color;\n}\n  "],["\\\nout vec3 color_vColor;\n\nvoid color_setColor(vec3 color) {\n  color_vColor = color;\n}\n  "]))),fs:s(Zi||(Zi=er(["in vec3 color_vColor;\n\nvec3 color_getColor() {\n  return color_vColor;\n}\n  "],["\\\nin vec3 color_vColor;\n\nvec3 color_getColor() {\n  return color_vColor;\n}\n  "])))};class nr extends f{constructor(e){let{device:t}=e;super(),this.positionBuffer=t.createBuffer(new Float32Array([-.2,-.2,.2,-.2,0,.2])),this.colorBuffer=t.createBuffer(new Float32Array([1,0,0,0,1,0,0,0,1,1,1,0])),this.offsetBuffer=t.createBuffer(new Float32Array([.5,.5,-.5,.5,.5,-.5,-.5,-.5])),this.model=new rn(t,{vs:s(Ji||(Ji=er(["#version 300 es\nin vec2 position;\nin vec3 instanceColor;\nin vec2 instanceOffset;\n\nvoid main() {\n  color_setColor(instanceColor);\n  gl_Position = vec4(position + instanceOffset, 0.0, 1.0);\n}\n      "],["\\\n#version 300 es\nin vec2 position;\nin vec3 instanceColor;\nin vec2 instanceOffset;\n\nvoid main() {\n  color_setColor(instanceColor);\n  gl_Position = vec4(position + instanceOffset, 0.0, 1.0);\n}\n      "]))),fs:s($i||($i=er(["#version 300 es\nout vec4 fragColor;\nvoid main() {\n  fragColor = vec4(color_getColor(), 1.0);\n}\n      "],["\\\n#version 300 es\nout vec4 fragColor;\nvoid main() {\n  fragColor = vec4(color_getColor(), 1.0);\n}\n      "]))),modules:[tr],bufferLayout:[{name:"position",format:"float32x2"},{name:"instanceColor",format:"float32x3",stepMode:"instance"},{name:"instanceOffset",format:"float32x2",stepMode:"instance"}],attributes:{position:this.positionBuffer,instanceColor:this.colorBuffer,instanceOffset:this.offsetBuffer},vertexCount:3,instanceCount:4})}onFinalize(){this.model.destroy(),this.positionBuffer.destroy(),this.colorBuffer.destroy(),this.offsetBuffer.destroy()}onRender(e){let{device:t}=e;const n=t.beginRenderPass({clearColor:[0,0,0,1]});this.model.draw(n),n.end()}}var ir;nr.info="\nInstanced triangles using luma.gl's high-level API\n";const rr=s(ir||(ir=function(e,t){return t||(t=e.slice(0)),e.raw=t,e}(["#version 300 es\n\nin vec3 vColor;\nout vec4 fragColor;\nvoid main() {\n  fragColor = vec4(vColor, 1.0);\n}\n"],["\\\n#version 300 es\n\nin vec3 vColor;\nout vec4 fragColor;\nvoid main() {\n  fragColor = vec4(vColor, 1.0);\n}\n"])));class sr extends f{constructor(e){let{device:t}=e;super();const n=new Float32Array([0,0,-.5,-.5,1,0,0,.5,-.5,0,1,0,0,.5,0,0,1]);this.interleavedBuffer=t.createBuffer(n),this.model=new rn(t,{id:"triangle",vs:"#version 300 es\n\nin vec2 position;\nin vec3 color;\n\nout vec3 vColor;\n\nvoid main() {\n  vColor = color;\n  gl_Position = vec4(position, 0.0, 1.0);\n}\n",fs:rr,bufferLayout:[{name:"vertexData",byteStride:20,attributes:[{attribute:"position",format:"float32x2",byteOffset:8},{attribute:"color",format:"float32x3",byteOffset:16}]}],attributes:{vertexData:this.interleavedBuffer},vertexCount:3})}onFinalize(){this.model.destroy(),this.interleavedBuffer.destroy()}onRender(e){let{device:t}=e;const n=t.beginRenderPass({clearColor:[0,0,0,1]});this.model.draw(n),n.end()}}sr.info="\nHave to start somewhere...\n";var or=n(3910);class ar{constructor(e){void 0===e&&(e={}),this.matrix=new Cn.k,this.display=!0,this.position=new Si.P,this.rotation=new Si.P,this.scale=new Si.P(1,1,1),this.userData={},this.props={};const{id:t}=e;this.id=t||Ht(this.constructor.name),this._setScenegraphNodeProps(e)}getBounds(){return null}destroy(){}delete(){this.destroy()}setProps(e){return this._setScenegraphNodeProps(e),this}toString(){return"{type: ScenegraphNode, id: "+this.id+")}"}setPosition(e){return this.position=e,this}setRotation(e){return this.rotation=e,this}setScale(e){return this.scale=e,this}setMatrix(e,t){void 0===t&&(t=!0),t?this.matrix.copy(e):this.matrix=e}setMatrixComponents(e){const{position:t,rotation:n,scale:i,update:r=!0}=e;return t&&this.setPosition(t),n&&this.setRotation(n),i&&this.setScale(i),r&&this.updateMatrix(),this}updateMatrix(){const e=this.position,t=this.rotation,n=this.scale;return this.matrix.identity(),this.matrix.translate(e),this.matrix.rotateXYZ(t),this.matrix.scale(n),this}update(e){void 0===e&&(e={});const{position:t,rotation:n,scale:i}=e;return t&&this.setPosition(t),n&&this.setRotation(n),i&&this.setScale(i),this.updateMatrix(),this}getCoordinateUniforms(e,t){t=t||this.matrix;const n=new Cn.k(e).multiplyRight(t),i=n.invert(),r=i.transpose();return{viewMatrix:e,modelMatrix:t,objectMatrix:t,worldMatrix:n,worldInverseMatrix:i,worldInverseTransposeMatrix:r}}_setScenegraphNodeProps(e){"position"in e&&this.setPosition(e.position),"rotation"in e&&this.setRotation(e.rotation),"scale"in e&&this.setScale(e.scale),"matrix"in e&&this.setMatrix(e.matrix),Object.assign(this.props,e)}}class lr extends ar{constructor(e){void 0===e&&(e={}),e=Array.isArray(e)?{children:e}:e;const{children:t=[]}=e;a.R.assert(t.every((e=>e instanceof ar)),"every child must an instance of ScenegraphNode"),super(e),this.children=t}getBounds(){const e=[[1/0,1/0,1/0],[-1/0,-1/0,-1/0]];return this.traverse(((t,n)=>{let{worldMatrix:i}=n;const r=t.getBounds();if(!r)return;const[s,o]=r,a=new Si.P(s).add(o).divide([2,2,2]);i.transformAsPoint(a,a);const l=new Si.P(o).subtract(s).divide([2,2,2]);i.transformAsVector(l,l);for(let c=0;c<8;c++){const t=new Si.P(1&c?-1:1,2&c?-1:1,4&c?-1:1).multiply(l).add(a);for(let n=0;n<3;n++)e[0][n]=Math.min(e[0][n],t[n]),e[1][n]=Math.max(e[1][n],t[n])}})),Number.isFinite(e[0][0])?e:null}destroy(){this.children.forEach((e=>e.destroy())),this.removeAll(),super.destroy()}add(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];for(const i of t)Array.isArray(i)?this.add(...i):this.children.push(i);return this}remove(e){const t=this.children,n=t.indexOf(e);return n>-1&&t.splice(n,1),this}removeAll(){return this.children=[],this}traverse(e,t){let{worldMatrix:n=new Cn.k}=void 0===t?{}:t;const i=new Cn.k(n).multiplyRight(this.matrix);for(const r of this.children)r instanceof lr?r.traverse(e,{worldMatrix:i}):e(r,{worldMatrix:i})}}var cr=n(1633);const ur={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},hr={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array};class dr{constructor(e){this.name=void 0,this.startTime=0,this.playing=!0,this.speed=1,this.channels=[],Object.assign(this,e)}animate(e){if(!this.playing)return;const t=(e/1e3-this.startTime)*this.speed;this.channels.forEach((e=>{let{sampler:n,target:i,path:r}=e;!function(e,t,n,i){let{input:r,interpolation:s,output:o}=t;const l=r[r.length-1],c=e%l,u=r.findIndex((e=>e>=c)),h=Math.max(0,u-1);if(!Array.isArray(n[i]))switch(i){case"translation":n[i]=[0,0,0];break;case"rotation":n[i]=[0,0,0,1];break;case"scale":n[i]=[1,1,1];break;default:a.R.warn("Bad animation path "+i)()}const d=r[h],_=r[u];switch(s){case"STEP":!function(e,t,n){for(let i=0;i<n.length;i++)e[t][i]=n[i]}(n,i,o[h]);break;case"LINEAR":if(_>d){const e=(c-d)/(_-d);!function(e,t,n,i,r){if("rotation"===t){gr.slerp({start:n,target:i,ratio:r});for(let n=0;n<gr.length;n++)e[t][n]=gr[n]}else for(let s=0;s<n.length;s++)e[t][s]=r*i[s]+(1-r)*n[s]}(n,i,o[h],o[u],e)}break;case"CUBICSPLINE":if(_>d){const e=(c-d)/(_-d),t=_-d;!function(e,t,n){let{p0:i,outTangent0:r,inTangent1:s,p1:o,tDiff:a,ratio:l}=n;for(let c=0;c<e[t].length;c++){const n=r[c]*a,u=s[c]*a;e[t][c]=(2*Math.pow(l,3)-3*Math.pow(l,2)+1)*i[c]+(Math.pow(l,3)-2*Math.pow(l,2)+l)*n+(-2*Math.pow(l,3)+3*Math.pow(l,2))*o[c]+(Math.pow(l,3)-Math.pow(l,2))*u}}(n,i,{p0:o[3*h+1],outTangent0:o[3*h+2],inTangent1:o[3*u+0],p1:o[3*u+1],tDiff:t,ratio:e})}break;default:a.R.warn("Interpolation "+s+" not supported")()}}(t,n,i,r),function(e,t){t.matrix.identity(),e.translation&&t.matrix.translate(e.translation);if(e.rotation){const n=fr.fromQuaternion(e.rotation);t.matrix.multiplyRight(n)}e.scale&&t.matrix.scale(e.scale)}(i,i._node)}))}}class _r{constructor(e){this.animations=void 0,this.animations=e.animations.map(((t,n)=>{const i=t.name||"Animation-"+n,r=t.samplers.map((t=>{let{input:n,interpolation:i="LINEAR",output:r}=t;return{input:pr(e.accessors[n]),interpolation:i,output:pr(e.accessors[r])}})),s=t.channels.map((t=>{let{sampler:n,target:i}=t;return{sampler:r[n],target:e.nodes[i.node],path:i.path}}));return new dr({name:i,channels:s})}))}animate(e){this.setTime(e)}setTime(e){this.animations.forEach((t=>t.animate(e)))}getAnimations(){return this.animations}}function pr(e){if(!e._animation){const t=hr[e.componentType],n=ur[e.type],i=n*e.count,{buffer:r,byteOffset:s}=e.bufferView.data,o=new t(r,s+(e.byteOffset||0),i);if(1===n)e._animation=Array.from(o);else{const t=[];for(let e=0;e<o.length;e+=n)t.push(Array.from(o.slice(e,e+n)));e._animation=t}}return e._animation}const fr=new Cn.k;const gr=new cr.P;var mr;const Er=Je(mr||(mr=function(e,t){return t||(t=e.slice(0)),e.raw=t,e}(["#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\n\nstruct AmbientLight {\n vec3 color;\n};\n\nstruct PointLight {\n vec3 color;\n vec3 position;\n\n // Constant-Linear-Exponential\n vec3 attenuation;\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform AmbientLight lighting_uAmbientLight;\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\nuniform int lighting_uPointLightCount;\nuniform int lighting_uDirectionalLightCount;\n\nuniform bool lighting_uEnabled;\n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n#endif\n"],["\\\n#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\n\nstruct AmbientLight {\n vec3 color;\n};\n\nstruct PointLight {\n vec3 color;\n vec3 position;\n\n // Constant-Linear-Exponential\n vec3 attenuation;\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform AmbientLight lighting_uAmbientLight;\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\nuniform int lighting_uPointLightCount;\nuniform int lighting_uDirectionalLightCount;\n\nuniform bool lighting_uEnabled;\n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n#endif\n"]))),Ar={lightSources:{}};function Rr(e){void 0===e&&(e={});const{color:t=[0,0,0],intensity:n=1}=e;return t.map((e=>e*n/255))}const vr={name:"lights",vs:Er,fs:Er,getUniforms:function e(t){var n,i;if(void 0===t&&(t=Ar),"lightSources"in t){const{ambientLight:e,pointLights:n,directionalLights:i}=t.lightSources||{};return e||n&&n.length>0||i&&i.length>0?Object.assign({},function(e){let{ambientLight:t,pointLights:n=[],directionalLights:i=[]}=e;const r={};return r["lighting_uAmbientLight.color"]=t?Rr(t):[0,0,0],n.forEach(((e,t)=>{r["lighting_uPointLight["+t+"].color"]=Rr(e),r["lighting_uPointLight["+t+"].position"]=e.position,r["lighting_uPointLight["+t+"].attenuation"]=e.attenuation||[1,0,0]})),r.lighting_uPointLightCount=n.length,i.forEach(((e,t)=>{r["lighting_uDirectionalLight["+t+"].color"]=Rr(e),r["lighting_uDirectionalLight["+t+"].direction"]=e.direction})),r.lighting_uDirectionalLightCount=i.length,r}({ambientLight:e,pointLights:n,directionalLights:i}),{lighting_uEnabled:!0}):{lighting_uEnabled:!1}}if("lights"in t){const r={pointLights:[],directionalLights:[]};for(const e of t.lights||[])switch(e.type){case"ambient":r.ambientLight=e;break;case"directional":null==(n=r.directionalLights)||n.push(e);break;case"point":null==(i=r.pointLights)||i.push(e)}return e({lightSources:r})}return{}},defines:{MAX_LIGHTS:3}};var Tr;const Sr=Je(Tr||(Tr=function(e,t){return t||(t=e.slice(0)),e.raw=t,e}(["uniform mat4 u_MVPMatrix;\nuniform mat4 u_ModelMatrix;\nuniform mat4 u_NormalMatrix;\n\nout vec3 pbr_vPosition;\nout vec2 pbr_vUV;\n\n#ifdef HAS_NORMALS\n# ifdef HAS_TANGENTS\nout mat3 pbr_vTBN;\n# else\nout vec3 pbr_vNormal;\n# endif\n#endif\n\nvoid pbr_setPositionNormalTangentUV(vec4 position, vec4 normal, vec4 tangent, vec2 uv)\n{\n  vec4 pos = u_ModelMatrix * position;\n  pbr_vPosition = vec3(pos.xyz) / pos.w;\n\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\n  vec3 normalW = normalize(vec3(u_NormalMatrix * vec4(normal.xyz, 0.0)));\n  vec3 tangentW = normalize(vec3(u_ModelMatrix * vec4(tangent.xyz, 0.0)));\n  vec3 bitangentW = cross(normalW, tangentW) * tangent.w;\n  pbr_vTBN = mat3(tangentW, bitangentW, normalW);\n#else // HAS_TANGENTS != 1\n  pbr_vNormal = normalize(vec3(u_ModelMatrix * vec4(normal.xyz, 0.0)));\n#endif\n#endif\n\n#ifdef HAS_UV\n  pbr_vUV = uv;\n#else\n  pbr_vUV = vec2(0.,0.);\n#endif\n}\n"],["\\\nuniform mat4 u_MVPMatrix;\nuniform mat4 u_ModelMatrix;\nuniform mat4 u_NormalMatrix;\n\nout vec3 pbr_vPosition;\nout vec2 pbr_vUV;\n\n#ifdef HAS_NORMALS\n# ifdef HAS_TANGENTS\nout mat3 pbr_vTBN;\n# else\nout vec3 pbr_vNormal;\n# endif\n#endif\n\nvoid pbr_setPositionNormalTangentUV(vec4 position, vec4 normal, vec4 tangent, vec2 uv)\n{\n  vec4 pos = u_ModelMatrix * position;\n  pbr_vPosition = vec3(pos.xyz) / pos.w;\n\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\n  vec3 normalW = normalize(vec3(u_NormalMatrix * vec4(normal.xyz, 0.0)));\n  vec3 tangentW = normalize(vec3(u_ModelMatrix * vec4(tangent.xyz, 0.0)));\n  vec3 bitangentW = cross(normalW, tangentW) * tangent.w;\n  pbr_vTBN = mat3(tangentW, bitangentW, normalW);\n#else // HAS_TANGENTS != 1\n  pbr_vNormal = normalize(vec3(u_ModelMatrix * vec4(normal.xyz, 0.0)));\n#endif\n#endif\n\n#ifdef HAS_UV\n  pbr_vUV = uv;\n#else\n  pbr_vUV = vec2(0.,0.);\n#endif\n}\n"])));var br;const Cr=Je(br||(br=function(e,t){return t||(t=e.slice(0)),e.raw=t,e}(["precision highp float;\n\nuniform bool pbr_uUnlit;\n\n#ifdef USE_IBL\nuniform samplerCube u_DiffuseEnvSampler;\nuniform samplerCube u_SpecularEnvSampler;\nuniform sampler2D u_brdfLUT;\nuniform vec2 u_ScaleIBLAmbient;\n#endif\n\n#ifdef HAS_BASECOLORMAP\nuniform sampler2D u_BaseColorSampler;\n#endif\n#ifdef HAS_NORMALMAP\nuniform sampler2D u_NormalSampler;\nuniform float u_NormalScale;\n#endif\n#ifdef HAS_EMISSIVEMAP\nuniform sampler2D u_EmissiveSampler;\nuniform vec3 u_EmissiveFactor;\n#endif\n#ifdef HAS_METALROUGHNESSMAP\nuniform sampler2D u_MetallicRoughnessSampler;\n#endif\n#ifdef HAS_OCCLUSIONMAP\nuniform sampler2D u_OcclusionSampler;\nuniform float u_OcclusionStrength;\n#endif\n\n#ifdef ALPHA_CUTOFF\nuniform float u_AlphaCutoff;\n#endif\n\nuniform vec2 u_MetallicRoughnessValues;\nuniform vec4 u_BaseColorFactor;\n\nuniform vec3 u_Camera;\n\n// debugging flags used for shader output of intermediate PBR variables\n#ifdef PBR_DEBUG\nuniform vec4 u_ScaleDiffBaseMR;\nuniform vec4 u_ScaleFGDSpec;\n#endif\n\nin vec3 pbr_vPosition;\n\nin vec2 pbr_vUV;\n\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\nin mat3 pbr_vTBN;\n#else\nin vec3 pbr_vNormal;\n#endif\n#endif\n\n// Encapsulate the various inputs used by the various functions in the shading equation\n// We store values in this struct to simplify the integration of alternative implementations\n// of the shading terms, outlined in the Readme.MD Appendix.\nstruct PBRInfo\n{\n  float NdotL;                  // cos angle between normal and light direction\n  float NdotV;                  // cos angle between normal and view direction\n  float NdotH;                  // cos angle between normal and half vector\n  float LdotH;                  // cos angle between light direction and half vector\n  float VdotH;                  // cos angle between view direction and half vector\n  float perceptualRoughness;    // roughness value, as authored by the model creator (input to shader)\n  float metalness;              // metallic value at the surface\n  vec3 reflectance0;            // full reflectance color (normal incidence angle)\n  vec3 reflectance90;           // reflectance color at grazing angle\n  float alphaRoughness;         // roughness mapped to a more linear change in the roughness (proposed by [2])\n  vec3 diffuseColor;            // color contribution from diffuse lighting\n  vec3 specularColor;           // color contribution from specular lighting\n  vec3 n;                       // normal at surface point\n  vec3 v;                       // vector from surface point to camera\n};\n\nconst float M_PI = 3.141592653589793;\nconst float c_MinRoughness = 0.04;\n\nvec4 SRGBtoLINEAR(vec4 srgbIn)\n{\n#ifdef MANUAL_SRGB\n#ifdef SRGB_FAST_APPROXIMATION\n  vec3 linOut = pow(srgbIn.xyz,vec3(2.2));\n#else //SRGB_FAST_APPROXIMATION\n  vec3 bLess = step(vec3(0.04045),srgbIn.xyz);\n  vec3 linOut = mix( srgbIn.xyz/vec3(12.92), pow((srgbIn.xyz+vec3(0.055))/vec3(1.055),vec3(2.4)), bLess );\n#endif //SRGB_FAST_APPROXIMATION\n  return vec4(linOut,srgbIn.w);;\n#else //MANUAL_SRGB\n  return srgbIn;\n#endif //MANUAL_SRGB\n}\n\n// Find the normal for this fragment, pulling either from a predefined normal map\n// or from the interpolated mesh normal and tangent attributes.\nvec3 getNormal()\n{\n  // Retrieve the tangent space matrix\n#ifndef HAS_TANGENTS\n  vec3 pos_dx = dFdx(pbr_vPosition);\n  vec3 pos_dy = dFdy(pbr_vPosition);\n  vec3 tex_dx = dFdx(vec3(pbr_vUV, 0.0));\n  vec3 tex_dy = dFdy(vec3(pbr_vUV, 0.0));\n  vec3 t = (tex_dy.t * pos_dx - tex_dx.t * pos_dy) / (tex_dx.s * tex_dy.t - tex_dy.s * tex_dx.t);\n\n#ifdef HAS_NORMALS\n  vec3 ng = normalize(pbr_vNormal);\n#else\n  vec3 ng = cross(pos_dx, pos_dy);\n#endif\n\n  t = normalize(t - ng * dot(ng, t));\n  vec3 b = normalize(cross(ng, t));\n  mat3 tbn = mat3(t, b, ng);\n#else // HAS_TANGENTS\n  mat3 tbn = pbr_vTBN;\n#endif\n\n#ifdef HAS_NORMALMAP\n  vec3 n = texture(u_NormalSampler, pbr_vUV).rgb;\n  n = normalize(tbn * ((2.0 * n - 1.0) * vec3(u_NormalScale, u_NormalScale, 1.0)));\n#else\n  // The tbn matrix is linearly interpolated, so we need to re-normalize\n  vec3 n = normalize(tbn[2].xyz);\n#endif\n\n  return n;\n}\n\n// Calculation of the lighting contribution from an optional Image Based Light source.\n// Precomputed Environment Maps are required uniform inputs and are computed as outlined in [1].\n// See our README.md on Environment Maps [3] for additional discussion.\n#ifdef USE_IBL\nvec3 getIBLContribution(PBRInfo pbrInputs, vec3 n, vec3 reflection)\n{\n  float mipCount = 9.0; // resolution of 512x512\n  float lod = (pbrInputs.perceptualRoughness * mipCount);\n  // retrieve a scale and bias to F0. See [1], Figure 3\n  vec3 brdf = SRGBtoLINEAR(texture(u_brdfLUT,\n    vec2(pbrInputs.NdotV, 1.0 - pbrInputs.perceptualRoughness))).rgb;\n  vec3 diffuseLight = SRGBtoLINEAR(textureCube(u_DiffuseEnvSampler, n)).rgb;\n\n#ifdef USE_TEX_LOD\n  vec3 specularLight = SRGBtoLINEAR(textureCubeLod(u_SpecularEnvSampler, reflection, lod)).rgb;\n#else\n  vec3 specularLight = SRGBtoLINEAR(textureCube(u_SpecularEnvSampler, reflection)).rgb;\n#endif\n\n  vec3 diffuse = diffuseLight * pbrInputs.diffuseColor;\n  vec3 specular = specularLight * (pbrInputs.specularColor * brdf.x + brdf.y);\n\n  // For presentation, this allows us to disable IBL terms\n  diffuse *= u_ScaleIBLAmbient.x;\n  specular *= u_ScaleIBLAmbient.y;\n\n  return diffuse + specular;\n}\n#endif\n\n// Basic Lambertian diffuse\n// Implementation from Lambert's Photometria https://archive.org/details/lambertsphotome00lambgoog\n// See also [1], Equation 1\nvec3 diffuse(PBRInfo pbrInputs)\n{\n  return pbrInputs.diffuseColor / M_PI;\n}\n\n// The following equation models the Fresnel reflectance term of the spec equation (aka F())\n// Implementation of fresnel from [4], Equation 15\nvec3 specularReflection(PBRInfo pbrInputs)\n{\n  return pbrInputs.reflectance0 +\n    (pbrInputs.reflectance90 - pbrInputs.reflectance0) *\n    pow(clamp(1.0 - pbrInputs.VdotH, 0.0, 1.0), 5.0);\n}\n\n// This calculates the specular geometric attenuation (aka G()),\n// where rougher material will reflect less light back to the viewer.\n// This implementation is based on [1] Equation 4, and we adopt their modifications to\n// alphaRoughness as input as originally proposed in [2].\nfloat geometricOcclusion(PBRInfo pbrInputs)\n{\n  float NdotL = pbrInputs.NdotL;\n  float NdotV = pbrInputs.NdotV;\n  float r = pbrInputs.alphaRoughness;\n\n  float attenuationL = 2.0 * NdotL / (NdotL + sqrt(r * r + (1.0 - r * r) * (NdotL * NdotL)));\n  float attenuationV = 2.0 * NdotV / (NdotV + sqrt(r * r + (1.0 - r * r) * (NdotV * NdotV)));\n  return attenuationL * attenuationV;\n}\n\n// The following equation(s) model the distribution of microfacet normals across\n// the area being drawn (aka D())\n// Implementation from \"Average Irregularity Representation of a Roughened Surface\n// for Ray Reflection\" by T. S. Trowbridge, and K. P. Reitz\n// Follows the distribution function recommended in the SIGGRAPH 2013 course notes\n// from EPIC Games [1], Equation 3.\nfloat microfacetDistribution(PBRInfo pbrInputs)\n{\n  float roughnessSq = pbrInputs.alphaRoughness * pbrInputs.alphaRoughness;\n  float f = (pbrInputs.NdotH * roughnessSq - pbrInputs.NdotH) * pbrInputs.NdotH + 1.0;\n  return roughnessSq / (M_PI * f * f);\n}\n\nvoid PBRInfo_setAmbientLight(inout PBRInfo pbrInputs) {\n  pbrInputs.NdotL = 1.0;\n  pbrInputs.NdotH = 0.0;\n  pbrInputs.LdotH = 0.0;\n  pbrInputs.VdotH = 1.0;\n}\n\nvoid PBRInfo_setDirectionalLight(inout PBRInfo pbrInputs, vec3 lightDirection) {\n  vec3 n = pbrInputs.n;\n  vec3 v = pbrInputs.v;\n  vec3 l = normalize(lightDirection);             // Vector from surface point to light\n  vec3 h = normalize(l+v);                        // Half vector between both l and v\n\n  pbrInputs.NdotL = clamp(dot(n, l), 0.001, 1.0);\n  pbrInputs.NdotH = clamp(dot(n, h), 0.0, 1.0);\n  pbrInputs.LdotH = clamp(dot(l, h), 0.0, 1.0);\n  pbrInputs.VdotH = clamp(dot(v, h), 0.0, 1.0);\n}\n\nvoid PBRInfo_setPointLight(inout PBRInfo pbrInputs, PointLight pointLight) {\n  vec3 light_direction = normalize(pointLight.position - pbr_vPosition);\n  PBRInfo_setDirectionalLight(pbrInputs, light_direction);\n}\n\nvec3 calculateFinalColor(PBRInfo pbrInputs, vec3 lightColor) {\n  // Calculate the shading terms for the microfacet specular shading model\n  vec3 F = specularReflection(pbrInputs);\n  float G = geometricOcclusion(pbrInputs);\n  float D = microfacetDistribution(pbrInputs);\n\n  // Calculation of analytical lighting contribution\n  vec3 diffuseContrib = (1.0 - F) * diffuse(pbrInputs);\n  vec3 specContrib = F * G * D / (4.0 * pbrInputs.NdotL * pbrInputs.NdotV);\n  // Obtain final intensity as reflectance (BRDF) scaled by the energy of the light (cosine law)\n  return pbrInputs.NdotL * lightColor * (diffuseContrib + specContrib);\n}\n\nvec4 pbr_filterColor(vec4 colorUnused)\n{\n  // The albedo may be defined from a base texture or a flat color\n#ifdef HAS_BASECOLORMAP\n  vec4 baseColor = SRGBtoLINEAR(texture(u_BaseColorSampler, pbr_vUV)) * u_BaseColorFactor;\n#else\n  vec4 baseColor = u_BaseColorFactor;\n#endif\n\n#ifdef ALPHA_CUTOFF\n  if (baseColor.a < u_AlphaCutoff) {\n    discard;\n  }\n#endif\n\n  vec3 color = vec3(0, 0, 0);\n\n  if(pbr_uUnlit){\n    color.rgb = baseColor.rgb;\n  }\n  else{\n    // Metallic and Roughness material properties are packed together\n    // In glTF, these factors can be specified by fixed scalar values\n    // or from a metallic-roughness map\n    float perceptualRoughness = u_MetallicRoughnessValues.y;\n    float metallic = u_MetallicRoughnessValues.x;\n#ifdef HAS_METALROUGHNESSMAP\n    // Roughness is stored in the 'g' channel, metallic is stored in the 'b' channel.\n    // This layout intentionally reserves the 'r' channel for (optional) occlusion map data\n    vec4 mrSample = texture(u_MetallicRoughnessSampler, pbr_vUV);\n    perceptualRoughness = mrSample.g * perceptualRoughness;\n    metallic = mrSample.b * metallic;\n#endif\n    perceptualRoughness = clamp(perceptualRoughness, c_MinRoughness, 1.0);\n    metallic = clamp(metallic, 0.0, 1.0);\n    // Roughness is authored as perceptual roughness; as is convention,\n    // convert to material roughness by squaring the perceptual roughness [2].\n    float alphaRoughness = perceptualRoughness * perceptualRoughness;\n\n    vec3 f0 = vec3(0.04);\n    vec3 diffuseColor = baseColor.rgb * (vec3(1.0) - f0);\n    diffuseColor *= 1.0 - metallic;\n    vec3 specularColor = mix(f0, baseColor.rgb, metallic);\n\n    // Compute reflectance.\n    float reflectance = max(max(specularColor.r, specularColor.g), specularColor.b);\n\n    // For typical incident reflectance range (between 4% to 100%) set the grazing\n    // reflectance to 100% for typical fresnel effect.\n    // For very low reflectance range on highly diffuse objects (below 4%),\n    // incrementally reduce grazing reflecance to 0%.\n    float reflectance90 = clamp(reflectance * 25.0, 0.0, 1.0);\n    vec3 specularEnvironmentR0 = specularColor.rgb;\n    vec3 specularEnvironmentR90 = vec3(1.0, 1.0, 1.0) * reflectance90;\n\n    vec3 n = getNormal();                          // normal at surface point\n    vec3 v = normalize(u_Camera - pbr_vPosition);  // Vector from surface point to camera\n\n    float NdotV = clamp(abs(dot(n, v)), 0.001, 1.0);\n    vec3 reflection = -normalize(reflect(v, n));\n\n    PBRInfo pbrInputs = PBRInfo(\n      0.0, // NdotL\n      NdotV,\n      0.0, // NdotH\n      0.0, // LdotH\n      0.0, // VdotH\n      perceptualRoughness,\n      metallic,\n      specularEnvironmentR0,\n      specularEnvironmentR90,\n      alphaRoughness,\n      diffuseColor,\n      specularColor,\n      n,\n      v\n    );\n\n#ifdef USE_LIGHTS\n    // Apply ambient light\n    PBRInfo_setAmbientLight(pbrInputs);\n    color += calculateFinalColor(pbrInputs, lighting_uAmbientLight.color);\n\n    // Apply directional light\n    for(int i = 0; i < lighting_uDirectionalLightCount; i++) {\n      if (i < lighting_uDirectionalLightCount) {\n        PBRInfo_setDirectionalLight(pbrInputs, lighting_uDirectionalLight[i].direction);\n        color += calculateFinalColor(pbrInputs, lighting_uDirectionalLight[i].color);\n      }\n    }\n\n    // Apply point light\n    for(int i = 0; i < lighting_uPointLightCount; i++) {\n      if (i < lighting_uPointLightCount) {\n        PBRInfo_setPointLight(pbrInputs, lighting_uPointLight[i]);\n        float attenuation = getPointLightAttenuation(lighting_uPointLight[i], distance(lighting_uPointLight[i].position, pbr_vPosition));\n        color += calculateFinalColor(pbrInputs, lighting_uPointLight[i].color / attenuation);\n      }\n    }\n#endif\n\n    // Calculate lighting contribution from image based lighting source (IBL)\n#ifdef USE_IBL\n    color += getIBLContribution(pbrInputs, n, reflection);\n#endif\n\n    // Apply optional PBR terms for additional (optional) shading\n#ifdef HAS_OCCLUSIONMAP\n    float ao = texture(u_OcclusionSampler, pbr_vUV).r;\n    color = mix(color, color * ao, u_OcclusionStrength);\n#endif\n\n#ifdef HAS_EMISSIVEMAP\n    vec3 emissive = SRGBtoLINEAR(texture(u_EmissiveSampler, pbr_vUV)).rgb * u_EmissiveFactor;\n    color += emissive;\n#endif\n\n    // This section uses mix to override final color for reference app visualization\n    // of various parameters in the lighting equation.\n#ifdef PBR_DEBUG\n    // TODO: Figure out how to debug multiple lights\n\n    // color = mix(color, F, u_ScaleFGDSpec.x);\n    // color = mix(color, vec3(G), u_ScaleFGDSpec.y);\n    // color = mix(color, vec3(D), u_ScaleFGDSpec.z);\n    // color = mix(color, specContrib, u_ScaleFGDSpec.w);\n\n    // color = mix(color, diffuseContrib, u_ScaleDiffBaseMR.x);\n    color = mix(color, baseColor.rgb, u_ScaleDiffBaseMR.y);\n    color = mix(color, vec3(metallic), u_ScaleDiffBaseMR.z);\n    color = mix(color, vec3(perceptualRoughness), u_ScaleDiffBaseMR.w);\n#endif\n\n  }\n\n  return vec4(pow(color,vec3(1.0/2.2)), baseColor.a);\n}\n"],["\\\nprecision highp float;\n\nuniform bool pbr_uUnlit;\n\n#ifdef USE_IBL\nuniform samplerCube u_DiffuseEnvSampler;\nuniform samplerCube u_SpecularEnvSampler;\nuniform sampler2D u_brdfLUT;\nuniform vec2 u_ScaleIBLAmbient;\n#endif\n\n#ifdef HAS_BASECOLORMAP\nuniform sampler2D u_BaseColorSampler;\n#endif\n#ifdef HAS_NORMALMAP\nuniform sampler2D u_NormalSampler;\nuniform float u_NormalScale;\n#endif\n#ifdef HAS_EMISSIVEMAP\nuniform sampler2D u_EmissiveSampler;\nuniform vec3 u_EmissiveFactor;\n#endif\n#ifdef HAS_METALROUGHNESSMAP\nuniform sampler2D u_MetallicRoughnessSampler;\n#endif\n#ifdef HAS_OCCLUSIONMAP\nuniform sampler2D u_OcclusionSampler;\nuniform float u_OcclusionStrength;\n#endif\n\n#ifdef ALPHA_CUTOFF\nuniform float u_AlphaCutoff;\n#endif\n\nuniform vec2 u_MetallicRoughnessValues;\nuniform vec4 u_BaseColorFactor;\n\nuniform vec3 u_Camera;\n\n// debugging flags used for shader output of intermediate PBR variables\n#ifdef PBR_DEBUG\nuniform vec4 u_ScaleDiffBaseMR;\nuniform vec4 u_ScaleFGDSpec;\n#endif\n\nin vec3 pbr_vPosition;\n\nin vec2 pbr_vUV;\n\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\nin mat3 pbr_vTBN;\n#else\nin vec3 pbr_vNormal;\n#endif\n#endif\n\n// Encapsulate the various inputs used by the various functions in the shading equation\n// We store values in this struct to simplify the integration of alternative implementations\n// of the shading terms, outlined in the Readme.MD Appendix.\nstruct PBRInfo\n{\n  float NdotL;                  // cos angle between normal and light direction\n  float NdotV;                  // cos angle between normal and view direction\n  float NdotH;                  // cos angle between normal and half vector\n  float LdotH;                  // cos angle between light direction and half vector\n  float VdotH;                  // cos angle between view direction and half vector\n  float perceptualRoughness;    // roughness value, as authored by the model creator (input to shader)\n  float metalness;              // metallic value at the surface\n  vec3 reflectance0;            // full reflectance color (normal incidence angle)\n  vec3 reflectance90;           // reflectance color at grazing angle\n  float alphaRoughness;         // roughness mapped to a more linear change in the roughness (proposed by [2])\n  vec3 diffuseColor;            // color contribution from diffuse lighting\n  vec3 specularColor;           // color contribution from specular lighting\n  vec3 n;                       // normal at surface point\n  vec3 v;                       // vector from surface point to camera\n};\n\nconst float M_PI = 3.141592653589793;\nconst float c_MinRoughness = 0.04;\n\nvec4 SRGBtoLINEAR(vec4 srgbIn)\n{\n#ifdef MANUAL_SRGB\n#ifdef SRGB_FAST_APPROXIMATION\n  vec3 linOut = pow(srgbIn.xyz,vec3(2.2));\n#else //SRGB_FAST_APPROXIMATION\n  vec3 bLess = step(vec3(0.04045),srgbIn.xyz);\n  vec3 linOut = mix( srgbIn.xyz/vec3(12.92), pow((srgbIn.xyz+vec3(0.055))/vec3(1.055),vec3(2.4)), bLess );\n#endif //SRGB_FAST_APPROXIMATION\n  return vec4(linOut,srgbIn.w);;\n#else //MANUAL_SRGB\n  return srgbIn;\n#endif //MANUAL_SRGB\n}\n\n// Find the normal for this fragment, pulling either from a predefined normal map\n// or from the interpolated mesh normal and tangent attributes.\nvec3 getNormal()\n{\n  // Retrieve the tangent space matrix\n#ifndef HAS_TANGENTS\n  vec3 pos_dx = dFdx(pbr_vPosition);\n  vec3 pos_dy = dFdy(pbr_vPosition);\n  vec3 tex_dx = dFdx(vec3(pbr_vUV, 0.0));\n  vec3 tex_dy = dFdy(vec3(pbr_vUV, 0.0));\n  vec3 t = (tex_dy.t * pos_dx - tex_dx.t * pos_dy) / (tex_dx.s * tex_dy.t - tex_dy.s * tex_dx.t);\n\n#ifdef HAS_NORMALS\n  vec3 ng = normalize(pbr_vNormal);\n#else\n  vec3 ng = cross(pos_dx, pos_dy);\n#endif\n\n  t = normalize(t - ng * dot(ng, t));\n  vec3 b = normalize(cross(ng, t));\n  mat3 tbn = mat3(t, b, ng);\n#else // HAS_TANGENTS\n  mat3 tbn = pbr_vTBN;\n#endif\n\n#ifdef HAS_NORMALMAP\n  vec3 n = texture(u_NormalSampler, pbr_vUV).rgb;\n  n = normalize(tbn * ((2.0 * n - 1.0) * vec3(u_NormalScale, u_NormalScale, 1.0)));\n#else\n  // The tbn matrix is linearly interpolated, so we need to re-normalize\n  vec3 n = normalize(tbn[2].xyz);\n#endif\n\n  return n;\n}\n\n// Calculation of the lighting contribution from an optional Image Based Light source.\n// Precomputed Environment Maps are required uniform inputs and are computed as outlined in [1].\n// See our README.md on Environment Maps [3] for additional discussion.\n#ifdef USE_IBL\nvec3 getIBLContribution(PBRInfo pbrInputs, vec3 n, vec3 reflection)\n{\n  float mipCount = 9.0; // resolution of 512x512\n  float lod = (pbrInputs.perceptualRoughness * mipCount);\n  // retrieve a scale and bias to F0. See [1], Figure 3\n  vec3 brdf = SRGBtoLINEAR(texture(u_brdfLUT,\n    vec2(pbrInputs.NdotV, 1.0 - pbrInputs.perceptualRoughness))).rgb;\n  vec3 diffuseLight = SRGBtoLINEAR(textureCube(u_DiffuseEnvSampler, n)).rgb;\n\n#ifdef USE_TEX_LOD\n  vec3 specularLight = SRGBtoLINEAR(textureCubeLod(u_SpecularEnvSampler, reflection, lod)).rgb;\n#else\n  vec3 specularLight = SRGBtoLINEAR(textureCube(u_SpecularEnvSampler, reflection)).rgb;\n#endif\n\n  vec3 diffuse = diffuseLight * pbrInputs.diffuseColor;\n  vec3 specular = specularLight * (pbrInputs.specularColor * brdf.x + brdf.y);\n\n  // For presentation, this allows us to disable IBL terms\n  diffuse *= u_ScaleIBLAmbient.x;\n  specular *= u_ScaleIBLAmbient.y;\n\n  return diffuse + specular;\n}\n#endif\n\n// Basic Lambertian diffuse\n// Implementation from Lambert's Photometria https://archive.org/details/lambertsphotome00lambgoog\n// See also [1], Equation 1\nvec3 diffuse(PBRInfo pbrInputs)\n{\n  return pbrInputs.diffuseColor / M_PI;\n}\n\n// The following equation models the Fresnel reflectance term of the spec equation (aka F())\n// Implementation of fresnel from [4], Equation 15\nvec3 specularReflection(PBRInfo pbrInputs)\n{\n  return pbrInputs.reflectance0 +\n    (pbrInputs.reflectance90 - pbrInputs.reflectance0) *\n    pow(clamp(1.0 - pbrInputs.VdotH, 0.0, 1.0), 5.0);\n}\n\n// This calculates the specular geometric attenuation (aka G()),\n// where rougher material will reflect less light back to the viewer.\n// This implementation is based on [1] Equation 4, and we adopt their modifications to\n// alphaRoughness as input as originally proposed in [2].\nfloat geometricOcclusion(PBRInfo pbrInputs)\n{\n  float NdotL = pbrInputs.NdotL;\n  float NdotV = pbrInputs.NdotV;\n  float r = pbrInputs.alphaRoughness;\n\n  float attenuationL = 2.0 * NdotL / (NdotL + sqrt(r * r + (1.0 - r * r) * (NdotL * NdotL)));\n  float attenuationV = 2.0 * NdotV / (NdotV + sqrt(r * r + (1.0 - r * r) * (NdotV * NdotV)));\n  return attenuationL * attenuationV;\n}\n\n// The following equation(s) model the distribution of microfacet normals across\n// the area being drawn (aka D())\n// Implementation from \"Average Irregularity Representation of a Roughened Surface\n// for Ray Reflection\" by T. S. Trowbridge, and K. P. Reitz\n// Follows the distribution function recommended in the SIGGRAPH 2013 course notes\n// from EPIC Games [1], Equation 3.\nfloat microfacetDistribution(PBRInfo pbrInputs)\n{\n  float roughnessSq = pbrInputs.alphaRoughness * pbrInputs.alphaRoughness;\n  float f = (pbrInputs.NdotH * roughnessSq - pbrInputs.NdotH) * pbrInputs.NdotH + 1.0;\n  return roughnessSq / (M_PI * f * f);\n}\n\nvoid PBRInfo_setAmbientLight(inout PBRInfo pbrInputs) {\n  pbrInputs.NdotL = 1.0;\n  pbrInputs.NdotH = 0.0;\n  pbrInputs.LdotH = 0.0;\n  pbrInputs.VdotH = 1.0;\n}\n\nvoid PBRInfo_setDirectionalLight(inout PBRInfo pbrInputs, vec3 lightDirection) {\n  vec3 n = pbrInputs.n;\n  vec3 v = pbrInputs.v;\n  vec3 l = normalize(lightDirection);             // Vector from surface point to light\n  vec3 h = normalize(l+v);                        // Half vector between both l and v\n\n  pbrInputs.NdotL = clamp(dot(n, l), 0.001, 1.0);\n  pbrInputs.NdotH = clamp(dot(n, h), 0.0, 1.0);\n  pbrInputs.LdotH = clamp(dot(l, h), 0.0, 1.0);\n  pbrInputs.VdotH = clamp(dot(v, h), 0.0, 1.0);\n}\n\nvoid PBRInfo_setPointLight(inout PBRInfo pbrInputs, PointLight pointLight) {\n  vec3 light_direction = normalize(pointLight.position - pbr_vPosition);\n  PBRInfo_setDirectionalLight(pbrInputs, light_direction);\n}\n\nvec3 calculateFinalColor(PBRInfo pbrInputs, vec3 lightColor) {\n  // Calculate the shading terms for the microfacet specular shading model\n  vec3 F = specularReflection(pbrInputs);\n  float G = geometricOcclusion(pbrInputs);\n  float D = microfacetDistribution(pbrInputs);\n\n  // Calculation of analytical lighting contribution\n  vec3 diffuseContrib = (1.0 - F) * diffuse(pbrInputs);\n  vec3 specContrib = F * G * D / (4.0 * pbrInputs.NdotL * pbrInputs.NdotV);\n  // Obtain final intensity as reflectance (BRDF) scaled by the energy of the light (cosine law)\n  return pbrInputs.NdotL * lightColor * (diffuseContrib + specContrib);\n}\n\nvec4 pbr_filterColor(vec4 colorUnused)\n{\n  // The albedo may be defined from a base texture or a flat color\n#ifdef HAS_BASECOLORMAP\n  vec4 baseColor = SRGBtoLINEAR(texture(u_BaseColorSampler, pbr_vUV)) * u_BaseColorFactor;\n#else\n  vec4 baseColor = u_BaseColorFactor;\n#endif\n\n#ifdef ALPHA_CUTOFF\n  if (baseColor.a < u_AlphaCutoff) {\n    discard;\n  }\n#endif\n\n  vec3 color = vec3(0, 0, 0);\n\n  if(pbr_uUnlit){\n    color.rgb = baseColor.rgb;\n  }\n  else{\n    // Metallic and Roughness material properties are packed together\n    // In glTF, these factors can be specified by fixed scalar values\n    // or from a metallic-roughness map\n    float perceptualRoughness = u_MetallicRoughnessValues.y;\n    float metallic = u_MetallicRoughnessValues.x;\n#ifdef HAS_METALROUGHNESSMAP\n    // Roughness is stored in the 'g' channel, metallic is stored in the 'b' channel.\n    // This layout intentionally reserves the 'r' channel for (optional) occlusion map data\n    vec4 mrSample = texture(u_MetallicRoughnessSampler, pbr_vUV);\n    perceptualRoughness = mrSample.g * perceptualRoughness;\n    metallic = mrSample.b * metallic;\n#endif\n    perceptualRoughness = clamp(perceptualRoughness, c_MinRoughness, 1.0);\n    metallic = clamp(metallic, 0.0, 1.0);\n    // Roughness is authored as perceptual roughness; as is convention,\n    // convert to material roughness by squaring the perceptual roughness [2].\n    float alphaRoughness = perceptualRoughness * perceptualRoughness;\n\n    vec3 f0 = vec3(0.04);\n    vec3 diffuseColor = baseColor.rgb * (vec3(1.0) - f0);\n    diffuseColor *= 1.0 - metallic;\n    vec3 specularColor = mix(f0, baseColor.rgb, metallic);\n\n    // Compute reflectance.\n    float reflectance = max(max(specularColor.r, specularColor.g), specularColor.b);\n\n    // For typical incident reflectance range (between 4% to 100%) set the grazing\n    // reflectance to 100% for typical fresnel effect.\n    // For very low reflectance range on highly diffuse objects (below 4%),\n    // incrementally reduce grazing reflecance to 0%.\n    float reflectance90 = clamp(reflectance * 25.0, 0.0, 1.0);\n    vec3 specularEnvironmentR0 = specularColor.rgb;\n    vec3 specularEnvironmentR90 = vec3(1.0, 1.0, 1.0) * reflectance90;\n\n    vec3 n = getNormal();                          // normal at surface point\n    vec3 v = normalize(u_Camera - pbr_vPosition);  // Vector from surface point to camera\n\n    float NdotV = clamp(abs(dot(n, v)), 0.001, 1.0);\n    vec3 reflection = -normalize(reflect(v, n));\n\n    PBRInfo pbrInputs = PBRInfo(\n      0.0, // NdotL\n      NdotV,\n      0.0, // NdotH\n      0.0, // LdotH\n      0.0, // VdotH\n      perceptualRoughness,\n      metallic,\n      specularEnvironmentR0,\n      specularEnvironmentR90,\n      alphaRoughness,\n      diffuseColor,\n      specularColor,\n      n,\n      v\n    );\n\n#ifdef USE_LIGHTS\n    // Apply ambient light\n    PBRInfo_setAmbientLight(pbrInputs);\n    color += calculateFinalColor(pbrInputs, lighting_uAmbientLight.color);\n\n    // Apply directional light\n    for(int i = 0; i < lighting_uDirectionalLightCount; i++) {\n      if (i < lighting_uDirectionalLightCount) {\n        PBRInfo_setDirectionalLight(pbrInputs, lighting_uDirectionalLight[i].direction);\n        color += calculateFinalColor(pbrInputs, lighting_uDirectionalLight[i].color);\n      }\n    }\n\n    // Apply point light\n    for(int i = 0; i < lighting_uPointLightCount; i++) {\n      if (i < lighting_uPointLightCount) {\n        PBRInfo_setPointLight(pbrInputs, lighting_uPointLight[i]);\n        float attenuation = getPointLightAttenuation(lighting_uPointLight[i], distance(lighting_uPointLight[i].position, pbr_vPosition));\n        color += calculateFinalColor(pbrInputs, lighting_uPointLight[i].color / attenuation);\n      }\n    }\n#endif\n\n    // Calculate lighting contribution from image based lighting source (IBL)\n#ifdef USE_IBL\n    color += getIBLContribution(pbrInputs, n, reflection);\n#endif\n\n    // Apply optional PBR terms for additional (optional) shading\n#ifdef HAS_OCCLUSIONMAP\n    float ao = texture(u_OcclusionSampler, pbr_vUV).r;\n    color = mix(color, color * ao, u_OcclusionStrength);\n#endif\n\n#ifdef HAS_EMISSIVEMAP\n    vec3 emissive = SRGBtoLINEAR(texture(u_EmissiveSampler, pbr_vUV)).rgb * u_EmissiveFactor;\n    color += emissive;\n#endif\n\n    // This section uses mix to override final color for reference app visualization\n    // of various parameters in the lighting equation.\n#ifdef PBR_DEBUG\n    // TODO: Figure out how to debug multiple lights\n\n    // color = mix(color, F, u_ScaleFGDSpec.x);\n    // color = mix(color, vec3(G), u_ScaleFGDSpec.y);\n    // color = mix(color, vec3(D), u_ScaleFGDSpec.z);\n    // color = mix(color, specContrib, u_ScaleFGDSpec.w);\n\n    // color = mix(color, diffuseContrib, u_ScaleDiffBaseMR.x);\n    color = mix(color, baseColor.rgb, u_ScaleDiffBaseMR.y);\n    color = mix(color, vec3(metallic), u_ScaleDiffBaseMR.z);\n    color = mix(color, vec3(perceptualRoughness), u_ScaleDiffBaseMR.w);\n#endif\n\n  }\n\n  return vec4(pow(color,vec3(1.0/2.2)), baseColor.a);\n}\n"]))),Ir={name:"pbr",vs:Sr,fs:Cr,defines:{LIGHTING_FRAGMENT:1},dependencies:[vr],getUniforms:e=>e};class Nr extends ar{constructor(e){super(e),this.bounds=null,this.model=e.model,this.managedResources=e.managedResources||[],this.bounds=e.bounds||null,this.setProps(e)}destroy(){this.model&&(this.model.destroy(),this.model=null),this.managedResources.forEach((e=>e.destroy())),this.managedResources=[]}getBounds(){return this.bounds}draw(e){return this.model.draw(e)}}var yr;function Lr(e,t,n,i){const r={defines:{MANUAL_SRGB:1,SRGB_FAST_APPROXIMATION:1},bindings:{},uniforms:{u_Camera:[0,0,0],u_MetallicRoughnessValues:[1,1]},parameters:{},glParameters:{},generatedTextures:[]};r.defines.USE_TEX_LOD=1;const{imageBasedLightingEnvironment:s}=i;return s&&(r.bindings.u_DiffuseEnvSampler=s.diffuseEnvSampler.texture,r.bindings.u_SpecularEnvSampler=s.specularEnvSampler.texture,r.bindings.u_brdfLUT=s.brdfLutTexture.texture,r.uniforms.u_ScaleIBLAmbient=[1,1]),null!=i&&i.pbrDebug&&(r.defines.PBR_DEBUG=1,r.uniforms.u_ScaleDiffBaseMR=[0,0,0,0],r.uniforms.u_ScaleFGDSpec=[0,0,0,0]),n.NORMAL&&(r.defines.HAS_NORMALS=1),n.TANGENT&&null!=i&&i.useTangents&&(r.defines.HAS_TANGENTS=1),n.TEXCOORD_0&&(r.defines.HAS_UV=1),null!=i&&i.imageBasedLightingEnvironment&&(r.defines.USE_IBL=1),null!=i&&i.lights&&(r.defines.USE_LIGHTS=1),t&&function(e,t,n){n.uniforms.pbr_uUnlit=Boolean(t.unlit),t.pbrMetallicRoughness&&function(e,t,n){t.baseColorTexture&&Pr(e,t.baseColorTexture,"u_BaseColorSampler","HAS_BASECOLORMAP",n);n.uniforms.u_BaseColorFactor=t.baseColorFactor||[1,1,1,1],t.metallicRoughnessTexture&&Pr(e,t.metallicRoughnessTexture,"u_MetallicRoughnessSampler","HAS_METALROUGHNESSMAP",n);const{metallicFactor:i=1,roughnessFactor:r=1}=t;n.uniforms.u_MetallicRoughnessValues=[i,r]}(e,t.pbrMetallicRoughness,n);if(t.normalTexture){Pr(e,t.normalTexture,"u_NormalSampler","HAS_NORMALMAP",n);const{scale:i=1}=t.normalTexture;n.uniforms.u_NormalScale=i}if(t.occlusionTexture){Pr(e,t.occlusionTexture,"u_OcclusionSampler","HAS_OCCLUSIONMAP",n);const{strength:i=1}=t.occlusionTexture;n.uniforms.u_OcclusionStrength=i}t.emissiveTexture&&(Pr(e,t.emissiveTexture,"u_EmissiveSampler","HAS_EMISSIVEMAP",n),n.uniforms.u_EmissiveFactor=t.emissiveFactor||[0,0,0]);switch(t.alphaMode){case"MASK":const{alphaCutoff:e=.5}=t;n.defines.ALPHA_CUTOFF=1,n.uniforms.u_AlphaCutoff=e;break;case"BLEND":a.R.warn("glTF BLEND alphaMode might not work well because it requires mesh sorting")(),n.parameters.blendColorOperation="add",n.parameters.blendColorSrcFactor="src-alpha",n.parameters.blendColorDstFactor="one-minus-src-alpha",n.parameters.blendAlphaOperation="add",n.parameters.blendAlphaSrcFactor="one",n.parameters.blendAlphaDstFactor="one-minus-src-alpha",n.glParameters.blend=!0,n.glParameters.blendEquation=yr.FUNC_ADD,n.glParameters.blendFunc=[yr.SRC_ALPHA,yr.ONE_MINUS_SRC_ALPHA,yr.ONE,yr.ONE_MINUS_SRC_ALPHA]}}(e,t,r),r}function Pr(e,t,n,i,r){var s;void 0===i&&(i=null);const o=(null==t||null==(s=t.texture)||null==(s=s.sampler)?void 0:s.parameters)||{},a=t.texture.source.image;let l,c={};a.compressed?(l=a,c={[yr.TEXTURE_MIN_FILTER]:a.data.length>1?yr.LINEAR_MIPMAP_NEAREST:yr.LINEAR}):l={data:a};const u=e.createTexture({id:t.uniformName||t.id,parameters:{...o,...c},pixelStore:{[yr.UNPACK_FLIP_Y_WEBGL]:!1},...l});r.bindings[n]=u,i&&(r.defines[i]=1),r.generatedTextures.push(u)}!function(e){e[e.FUNC_ADD=32774]="FUNC_ADD",e[e.ONE=1]="ONE",e[e.SRC_ALPHA=770]="SRC_ALPHA",e[e.ONE_MINUS_SRC_ALPHA=771]="ONE_MINUS_SRC_ALPHA",e[e.TEXTURE_MIN_FILTER=10241]="TEXTURE_MIN_FILTER",e[e.LINEAR=9729]="LINEAR",e[e.LINEAR_MIPMAP_NEAREST=9985]="LINEAR_MIPMAP_NEAREST",e[e.UNPACK_FLIP_Y_WEBGL=37440]="UNPACK_FLIP_Y_WEBGL"}(yr||(yr={}));var wr;!function(e){e[e.POINTS=0]="POINTS",e[e.LINES=1]="LINES",e[e.LINE_LOOP=2]="LINE_LOOP",e[e.LINE_STRIP=3]="LINE_STRIP",e[e.TRIANGLES=4]="TRIANGLES",e[e.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=6]="TRIANGLE_FAN"}(wr||(wr={}));const xr={modelOptions:{},pbrDebug:!1,imageBasedLightingEnvironment:null,lights:!0,useTangents:!1};class Mr{constructor(e,t){void 0===t&&(t={}),this.device=void 0,this.options=void 0,this.gltf=void 0,this.device=e,this.options={...xr,...t}}instantiate(e){this.gltf=e;return(e.scenes||[]).map((e=>this.createScene(e)))}createAnimator(){return Array.isArray(this.gltf.animations)?new _r(this.gltf):null}createScene(e){const t=(e.nodes||[]).map((e=>this.createNode(e)));return new lr({id:e.name||e.id,children:t})}createNode(e){if(!e._node){const t=(e.children||[]).map((e=>this.createNode(e)));e.mesh&&t.push(this.createMesh(e.mesh));const n=new lr({id:e.name||e.id,children:t});if(e.matrix)n.setMatrix(e.matrix);else{if(n.matrix.identity(),e.translation&&n.matrix.translate(e.translation),e.rotation){const t=(new Cn.k).fromQuaternion(e.rotation);n.matrix.multiplyRight(t)}e.scale&&n.matrix.scale(e.scale)}e._node=n}return e._node}createMesh(e){if(!e._mesh){const t=(e.primitives||[]).map(((t,n)=>this.createPrimitive(t,n,e))),n=new lr({id:e.name||e.id,children:t});e._mesh=n}return e._mesh}createPrimitive(e,t,n){const i=e.name||(n.name||n.id)+"-primitive-"+t,r=function(e){switch(e){case wr.POINTS:return"point-list";case wr.LINES:return"line-list";case wr.LINE_STRIP:return"line-strip";case wr.TRIANGLES:return"triangle-list";case wr.TRIANGLE_STRIP:return"triangle-strip";default:throw new Error(String(e))}}(e.mode||4),s=e.indices?e.indices.count:this.getVertexCount(e.attributes),o=function(e,t){const{id:n,geometry:i,material:r,vertexCount:s,materialOptions:o,modelOptions:l}=t,c=Lr(e,r,i.attributes,o);a.R.info(4,"createGLTFModel defines: ",c.defines)();const u={id:n,source:"\nlayout(0) positions: vec4; // in vec4 POSITION;\n\n  #ifdef HAS_NORMALS\n    in vec4 normals; // in vec4 NORMAL;\n  #endif\n\n  #ifdef HAS_TANGENTS\n    in vec4 TANGENT;\n  #endif\n\n  #ifdef HAS_UV\n    // in vec2 TEXCOORD_0;\n    in vec2 texCoords;\n  #endif\n\n@vertex\n  void main(void) {\n    vec4 _NORMAL = vec4(0.);\n    vec4 _TANGENT = vec4(0.);\n    vec2 _TEXCOORD_0 = vec2(0.);\n\n    #ifdef HAS_NORMALS\n      _NORMAL = normals;\n    #endif\n\n    #ifdef HAS_TANGENTS\n      _TANGENT = TANGENT;\n    #endif\n\n    #ifdef HAS_UV\n      _TEXCOORD_0 = texCoords;\n    #endif\n\n    pbr_setPositionNormalTangentUV(positions, _NORMAL, _TANGENT, _TEXCOORD_0);\n    gl_Position = u_MVPMatrix * positions;\n  }\n\n@fragment\n  out vec4 fragmentColor;\n\n  void main(void) {\n    vec3 pos = pbr_vPosition;\n    fragmentColor = pbr_filterColor(vec4(1.0));\n  }\n",vs:"#version 300 es\nin vec4 positions;\n#ifdef HAS_NORMALS\nin vec4 normals;\n#endif\n#ifdef HAS_TANGENTS\nin vec4 TANGENT;\n#endif\n#ifdef HAS_UV\nin vec2 texCoords;\n#endif\nvoid main(void) {\nvec4 _NORMAL = vec4(0.);\nvec4 _TANGENT = vec4(0.);\nvec2 _TEXCOORD_0 = vec2(0.);\n#ifdef HAS_NORMALS\n_NORMAL = normals;\n#endif\n#ifdef HAS_TANGENTS\n_TANGENT = TANGENT;\n#endif\n#ifdef HAS_UV\n_TEXCOORD_0 = texCoords;\n#endif\npbr_setPositionNormalTangentUV(positions, _NORMAL, _TANGENT, _TEXCOORD_0);\ngl_Position = u_MVPMatrix * positions;\n}\n",fs:"#version 300 es\nout vec4 fragmentColor;\nvoid main(void) {\nvec3 pos = pbr_vPosition;\nfragmentColor = pbr_filterColor(vec4(1.0));\n}\n",geometry:i,topology:i.topology,vertexCount:s,modules:[Ir],...l,bindings:{...c.bindings,...l.bindings},defines:{...c.defines,...l.defines},parameters:{depthWriteEnabled:!0,depthCompare:"less",depthFormat:"depth24plus",cullMode:"back",...c.parameters,...l.parameters},uniforms:{...c.uniforms,...l.uniforms}},h=new rn(e,u);return new Nr({managedResources:[],model:h})}(this.device,{id:i,geometry:this.createGeometry(i,e,r),material:e.material,materialOptions:this.options,modelOptions:this.options.modelOptions,vertexCount:s});return o.bounds=[e.attributes.POSITION.min,e.attributes.POSITION.max],o}getVertexCount(e){throw new Error("getVertexCount not implemented")}createGeometry(e,t,n){const i={};for(const[r,s]of Object.entries(t.attributes)){const{components:e,size:t,value:n}=s;i[r]={size:null!=t?t:e,value:n}}return new ln({id:e,topology:n,indices:t.indices.value,attributes:i})}createBuffer(e,t){e.bufferView||(e.bufferView={});const{bufferView:n}=e;return n.lumaBuffers||(n.lumaBuffers={}),n.lumaBuffers[t]||(n.lumaBuffers[t]=this.device.createBuffer({id:"from-"+n.id,data:n.data||e.value})),n.lumaBuffers[t]}createSampler(e){return e}needsPOT(){return!1}}var Or=n(9697),Fr=n(9258);class Dr extends f{constructor(e){let{device:t}=e;super(),this.scenes=[],this.center=[0,0,0],this.vantage=[0,0,0],this.time=0,this.device=t,this.loadGLTF("Avocado");const n=document.getElementById("model-select");null==n||n.addEventListener("change",(e=>{this.loadGLTF(e.target.value)}))}onFinalize(){this.scenes[0].traverse((e=>e.model.destroy()))}onRender(e){var t;let{aspect:n,device:i,time:r}=e;if(null==(t=this.scenes)||!t.length)return;const s=i.beginRenderPass({clearColor:[0,0,0,1]}),o=2*this.vantage[0],a=o/1e3,l=(new Cn.k).perspective({fovy:Math.PI/3,aspect:n,near:a,far:o}),c=[this.vantage[0]*Math.sin(.001*r),this.vantage[1],this.vantage[2]*Math.cos(.001*r)];this.scenes[0].traverse(((e,t)=>{let{worldMatrix:n}=t;const{model:i}=e,r=n.transformAsPoint(c),o=n.transformAsPoint(this.center),a=(new Cn.k).lookAt({eye:r,center:o}),u=new Cn.k(l).multiplyRight(a).multiplyRight(n);i.setUniforms({u_Camera:r,u_MVPMatrix:u,u_ModelMatrix:n,u_NormalMatrix:new Cn.k(n).invert().transpose()}),i.updateModuleSettings({lightSources:Br}),i.draw(s)})),s.end()}async loadGLTF(e){const t=this.device.canvasContext.canvas;t.style.opacity="0.1";const n=await(0,or.H)("https://github.khronos.org/glTF-Sample-Viewer-Release/assets/models/Models/"+e+"/glTF/"+e+".gltf",Or.B),i=(0,Fr.R)(n),{scenes:r}=function(e,t,n){const i=new Mr(e,n);return{scenes:i.instantiate(t),animator:i.createAnimator()}}(this.device,i,{pbrDebug:!1,imageBasedLightingEnvironment:null,lights:!0});this.scenes=r;let s=[1/0,1/0,1/0],o=[0,0,0];this.scenes[0].traverse((e=>{const{bounds:t}=e;s=s.map(((e,n)=>Math.min(e,t[0][n],t[1][n]))),o=o.map(((e,n)=>Math.max(e,t[0][n],t[1][n])))})),this.vantage=[2*(o[0]+o[2]),o[1],2*(o[0]+o[2])],this.center=[.5*(s[0]+o[0]),.5*(s[1]+o[1]),.5*(s[2]+o[2])],t.style.opacity="1"}}Dr.info="\nHave to start somewhere...\n";const Br={ambientLight:{color:[255,133,133],intensity:1,type:"ambient"},directionalLights:[{color:[222,244,255],direction:[1,-.5,.5],intensity:10,position:[0,0,0],type:"directional"}],pointLights:[{attenuation:0,color:[255,222,222],position:[3,10,0],intensity:5,type:"point"}]};var Ur;const Gr=Je(Ur||(Ur=function(e,t){return t||(t=e.slice(0)),e.raw=t,e}(["precision highp int;\n\n// #if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\nstruct AmbientLight {\n  vec3 color;\n};\n\nstruct PointLight {\n  vec3 color;\n  vec3 position;\n  vec3 attenuation; // 2nd order x:Constant-y:Linear-z:Exponential\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform lightingUniforms {\n  int enabled;\n  int pointLightCount;\n  int directionalLightCount;\n\n  vec3 ambientColor;\n\n  int lightType;\n  vec3 lightColor;\n  vec3 lightDirection;\n  vec3 lightPosition;\n  vec3 lightAttenuation;\n\n  // AmbientLight ambientLight;\n  // PointLight pointLight[MAX_LIGHTS];\n  // DirectionalLight directionalLight[MAX_LIGHTS];\n} lighting;\n\nPointLight lighting_getPointLight(int index) {\n  return PointLight(lighting.lightColor, lighting.lightPosition, lighting.lightAttenuation);\n}\n\nDirectionalLight lighting_getDirectionalLight(int index) {\n  return DirectionalLight(lighting.lightColor, lighting.lightDirection);\n} \n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n// #endif\n"],["\\\nprecision highp int;\n\n// #if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\nstruct AmbientLight {\n  vec3 color;\n};\n\nstruct PointLight {\n  vec3 color;\n  vec3 position;\n  vec3 attenuation; // 2nd order x:Constant-y:Linear-z:Exponential\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform lightingUniforms {\n  int enabled;\n  int pointLightCount;\n  int directionalLightCount;\n\n  vec3 ambientColor;\n\n  int lightType;\n  vec3 lightColor;\n  vec3 lightDirection;\n  vec3 lightPosition;\n  vec3 lightAttenuation;\n\n  // AmbientLight ambientLight;\n  // PointLight pointLight[MAX_LIGHTS];\n  // DirectionalLight directionalLight[MAX_LIGHTS];\n} lighting;\n\nPointLight lighting_getPointLight(int index) {\n  return PointLight(lighting.lightColor, lighting.lightPosition, lighting.lightAttenuation);\n}\n\nDirectionalLight lighting_getDirectionalLight(int index) {\n  return DirectionalLight(lighting.lightColor, lighting.lightDirection);\n} \n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n// #endif\n"]))),kr=255;let Hr=function(e){return e[e.POINT=0]="POINT",e[e.DIRECTIONAL=1]="DIRECTIONAL",e}({});const Vr={name:"lighting",defines:{MAX_LIGHTS:5},uniformTypes:{enabled:"i32",ambientLightColor:"vec3<f32>",numberOfLights:"i32",lightType:"i32",lightColor:"vec3<f32>",lightPosition:"vec3<f32>",lightDirection:"vec3<f32>",lightAttenuation:"vec3<f32>"},defaultUniforms:{enabled:1,ambientLightColor:[.1,.1,.1],numberOfLights:0,lightType:Hr.POINT,lightColor:[1,1,1],lightPosition:[1,1,2],lightDirection:[1,1,1],lightAttenuation:[1,1,1]},vs:Gr,fs:Gr,props:{},uniforms:{},getUniforms:function(e,t){void 0===t&&(t={});if(!(e=e?{...e}:e))return{...Vr.defaultUniforms};e.lights&&(e={...e,...Wr(e.lights),lights:void 0});const{ambientLight:n,pointLights:i,directionalLights:r}=e||{};if(!(n||i&&i.length>0||r&&r.length>0))return{...Vr.defaultUniforms,enabled:0};const s={...Vr.defaultUniforms,...t,...Xr({ambientLight:n,pointLights:i,directionalLights:r})};void 0!==e.enabled&&(s.enabled=e.enabled?1:0);return s}};function Xr(e){let{ambientLight:t,pointLights:n=[],directionalLights:i=[]}=e;const r={};r.ambientLightColor=Kr(t);let s=0;for(const o of n)r.lightType=Hr.POINT,r.lightColor=Kr(o),r.lightPosition=o.position,r.lightAttenuation=[o.attenuation||1,0,0],s++;for(const o of i)r.lightType=Hr.DIRECTIONAL,r.lightColor=Kr(o),r.lightPosition=o.position,r.lightDirection=o.direction,s++;return r.numberOfLights=s,r}function Wr(e){var t,n;const i={pointLights:[],directionalLights:[]};for(const r of e||[])switch(r.type){case"ambient":i.ambientLight=r;break;case"directional":null==(t=i.directionalLights)||t.push(r);break;case"point":null==(n=i.pointLights)||n.push(r)}return i}function Kr(e){void 0===e&&(e={});const{color:t=[0,0,0],intensity:n=1}=e;return t.map((e=>e*n/kr))}var zr,Yr;function jr(e,t){return t||(t=e.slice(0)),e.raw=t,e}const qr={name:"phong-lighting",vs:Je(zr||(zr=jr(["uniform phongMaterialUniforms {\n  uniform float ambient;\n  uniform float diffuse;\n  uniform float shininess;\n  uniform vec3  specularColor;\n} material;\n"],["\\\nuniform phongMaterialUniforms {\n  uniform float ambient;\n  uniform float diffuse;\n  uniform float shininess;\n  uniform vec3  specularColor;\n} material;\n"]))),fs:Je(Yr||(Yr=jr(["uniform phongMaterialUniforms {\n  uniform float ambient;\n  uniform float diffuse;\n  uniform float shininess;\n  uniform vec3  specularColor;\n} material;\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {\n  vec3 halfway_direction = normalize(light_direction + view_direction);\n  float lambertian = dot(light_direction, normal_worldspace);\n  float specular = 0.0;\n  if (lambertian > 0.0) {\n    float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\n    specular = pow(specular_angle, material.shininess);\n  }\n  lambertian = max(lambertian, 0.0);\n  return (lambertian * material.diffuse * surfaceColor + specular * material.specularColor) * color;\n}\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\n  vec3 lightColor = surfaceColor;\n\n  if (lighting.enabled == 0) {\n    return lightColor;\n  }\n\n  vec3 view_direction = normalize(cameraPosition - position_worldspace);\n  lightColor = material.ambient * surfaceColor * lighting.ambientColor;\n\n  if (lighting.lightType == 0) {\n    PointLight pointLight = lighting_getPointLight(0);\n    vec3 light_position_worldspace = pointLight.position;\n    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n  } else if (lighting.lightType == 1) {\n    DirectionalLight directionalLight = lighting_getDirectionalLight(0);\n    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n  }\n  \n  /*\n  for (int i = 0; i < MAX_LIGHTS; i++) {\n    if (i >= lighting.pointLightCount) {\n      break;\n    }\n    PointLight pointLight = lighting.pointLight[i];\n    vec3 light_position_worldspace = pointLight.position;\n    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n  }\n\n  for (int i = 0; i < MAX_LIGHTS; i++) {\n    if (i >= lighting.directionalLightCount) {\n      break;\n    }\n    DirectionalLight directionalLight = lighting.directionalLight[i];\n    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n  }\n  */\n  return lightColor;\n}\n\nvec3 lighting_getSpecularLightColor(vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\n  vec3 lightColor = vec3(0, 0, 0);\n  vec3 surfaceColor = vec3(0, 0, 0);\n\n  if (lighting.enabled == 0) {\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\n\n    switch (lighting.lightType) {\n      case 0:\n        PointLight pointLight = lighting_getPointLight(0);\n        vec3 light_position_worldspace = pointLight.position;\n        vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n        lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n        break;\n\n      case 1:\n        DirectionalLight directionalLight = lighting_getDirectionalLight(0);\n        lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n        break;\n    }\n  }\n  return lightColor;\n}\n"],["\\\nuniform phongMaterialUniforms {\n  uniform float ambient;\n  uniform float diffuse;\n  uniform float shininess;\n  uniform vec3  specularColor;\n} material;\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {\n  vec3 halfway_direction = normalize(light_direction + view_direction);\n  float lambertian = dot(light_direction, normal_worldspace);\n  float specular = 0.0;\n  if (lambertian > 0.0) {\n    float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\n    specular = pow(specular_angle, material.shininess);\n  }\n  lambertian = max(lambertian, 0.0);\n  return (lambertian * material.diffuse * surfaceColor + specular * material.specularColor) * color;\n}\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\n  vec3 lightColor = surfaceColor;\n\n  if (lighting.enabled == 0) {\n    return lightColor;\n  }\n\n  vec3 view_direction = normalize(cameraPosition - position_worldspace);\n  lightColor = material.ambient * surfaceColor * lighting.ambientColor;\n\n  if (lighting.lightType == 0) {\n    PointLight pointLight = lighting_getPointLight(0);\n    vec3 light_position_worldspace = pointLight.position;\n    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n  } else if (lighting.lightType == 1) {\n    DirectionalLight directionalLight = lighting_getDirectionalLight(0);\n    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n  }\n  \n  /*\n  for (int i = 0; i < MAX_LIGHTS; i++) {\n    if (i >= lighting.pointLightCount) {\n      break;\n    }\n    PointLight pointLight = lighting.pointLight[i];\n    vec3 light_position_worldspace = pointLight.position;\n    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n  }\n\n  for (int i = 0; i < MAX_LIGHTS; i++) {\n    if (i >= lighting.directionalLightCount) {\n      break;\n    }\n    DirectionalLight directionalLight = lighting.directionalLight[i];\n    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n  }\n  */\n  return lightColor;\n}\n\nvec3 lighting_getSpecularLightColor(vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\n  vec3 lightColor = vec3(0, 0, 0);\n  vec3 surfaceColor = vec3(0, 0, 0);\n\n  if (lighting.enabled == 0) {\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\n\n    switch (lighting.lightType) {\n      case 0:\n        PointLight pointLight = lighting_getPointLight(0);\n        vec3 light_position_worldspace = pointLight.position;\n        vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n        lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n        break;\n\n      case 1:\n        DirectionalLight directionalLight = lighting_getDirectionalLight(0);\n        lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n        break;\n    }\n  }\n  return lightColor;\n}\n"]))),defines:{LIGHTING_FRAGMENT:1},dependencies:[Vr],uniformTypes:{ambient:"f32",diffuse:"f32",shininess:"f32",specularColor:"vec3<f32>"},defaultUniforms:{ambient:.35,diffuse:.6,shininess:32,specularColor:[.15,.15,.15]},props:{},uniforms:{},getUniforms:e=>({...qr.defaultUniforms,...e})};var Qr,Zr;function Jr(e,t){return t||(t=e.slice(0)),e.raw=t,e}const $r=s(Qr||(Qr=Jr(["#version 300 es\n\nin vec3 positions;\nin vec3 normals;\nin vec2 texCoords;\n\nout vec3 vPosition;\nout vec3 vNormal;\nout vec2 vUV;\n\nuniform appUniforms {\n  mat4 modelMatrix;\n  mat4 mvpMatrix;\n  vec3 eyePosition;\n} app;\n\nvoid main(void) {\n  vPosition = (app.modelMatrix * vec4(positions, 1.0)).xyz;\n  vNormal = mat3(app.modelMatrix) * normals;\n  vUV = texCoords;\n  gl_Position = app.mvpMatrix * vec4(positions, 1.0);\n}\n"],["\\\n#version 300 es\n\nin vec3 positions;\nin vec3 normals;\nin vec2 texCoords;\n\nout vec3 vPosition;\nout vec3 vNormal;\nout vec2 vUV;\n\nuniform appUniforms {\n  mat4 modelMatrix;\n  mat4 mvpMatrix;\n  vec3 eyePosition;\n} app;\n\nvoid main(void) {\n  vPosition = (app.modelMatrix * vec4(positions, 1.0)).xyz;\n  vNormal = mat3(app.modelMatrix) * normals;\n  vUV = texCoords;\n  gl_Position = app.mvpMatrix * vec4(positions, 1.0);\n}\n"]))),es=s(Zr||(Zr=Jr(["#version 300 es\nprecision highp float;\n\nin vec3 vPosition;\nin vec3 vNormal;\nin vec2 vUV;\n\nuniform sampler2D uTexture;\n\nuniform appUniforms {\n  mat4 modelMatrix;\n  mat4 mvpMatrix;\n  vec3 eyePosition;\n} uApp;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  vec3 surfaceColor = texture(uTexture, vec2(vUV.x, 1.0 - vUV.y)).rgb;\n  surfaceColor = lighting_getLightColor(surfaceColor, uApp.eyePosition, vPosition, normalize(vNormal));\n\n  fragColor = vec4(surfaceColor, 1.0);\n}\n"],["\\\n#version 300 es\nprecision highp float;\n\nin vec3 vPosition;\nin vec3 vNormal;\nin vec2 vUV;\n\nuniform sampler2D uTexture;\n\nuniform appUniforms {\n  mat4 modelMatrix;\n  mat4 mvpMatrix;\n  vec3 eyePosition;\n} uApp;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  vec3 surfaceColor = texture(uTexture, vec2(vUV.x, 1.0 - vUV.y)).rgb;\n  surfaceColor = lighting_getLightColor(surfaceColor, uApp.eyePosition, vPosition, normalize(vNormal));\n\n  fragColor = vec4(surfaceColor, 1.0);\n}\n"]))),ts={name:"app",uniformTypes:{modelMatrix:"mat4x4<f32>",mvpMatrix:"mat4x4<f32>",eyePosition:"vec3<f32>"}},ns=[0,0,5];class is extends f{constructor(e){let{device:t}=e;super(),this.shaderInputs=new $t({app:ts,lighting:Vr,phongMaterial:qr}),this.modelMatrix=new Cn.k,this.viewMatrix=(new Cn.k).lookAt({eye:ns}),this.mvpMatrix=new Cn.k,this.shaderInputs.setProps({lighting:{lights:[{type:"ambient",color:[255,255,255]},{type:"point",color:[255,255,255],position:[1,2,1]}]},phongMaterial:{specularColor:[255,255,255]}});const n=new tn(t,{data:(0,en.yt)("vis-logo.png")});this.model=new rn(t,{vs:$r,fs:es,shaderInputs:this.shaderInputs,geometry:new cn,bindings:{uTexture:n},parameters:{depthWriteEnabled:!0,depthCompare:"less-equal"}})}onFinalize(){this.model.destroy()}onRender(e){let{device:t,aspect:n,tick:i}=e;this.modelMatrix.identity().rotateX(.01*i).rotateY(.013*i),this.mvpMatrix.perspective({fovy:Math.PI/3,aspect:n}).multiplyRight(this.viewMatrix).multiplyRight(this.modelMatrix),this.shaderInputs.setProps({app:{mvpMatrix:this.mvpMatrix,modelMatrix:this.modelMatrix}});const r=t.beginRenderPass({clearColor:[0,0,0,1],clearDepth:!0});this.model.draw(r),r.end()}}is.info="\n<p>\nDrawing a phong-shaded cube\n</p>\n";const rs="#version 300 es\n\nin vec2 position;\n\nvoid main() {\n  gl_Position = vec4(position, 0.0, 1.0);\n  OFFSET_POSITION(gl_Position);\n}\n",ss="#version 300 es\n\nuniform appUniforms {  \n  vec3 color;\n} app;\n\nout vec4 fragColor;\n\nvoid main() {\n  fragColor = vec4(app.color, 1.0);\n}\n",os={name:"offsetLeft",inject:{"vs:OFFSET_POSITION":"position.x -= 0.5;"}},as={name:"offsetRight",inject:{"vs:OFFSET_POSITION":"position.x += 0.5;"}};class ls extends f{constructor(e){let{device:t}=e;super(),this.uniformStore=new p({app:{uniformTypes:{color:"vec3<f32>"}}});const n=Gt.getDefaultShaderAssembler();n.addShaderHook("vs:OFFSET_POSITION(inout vec4 position)"),this.positionBuffer=t.createBuffer(new Float32Array([-.3,-.5,.3,-.5,0,.5])),this.uniformBuffer1=this.uniformStore.createUniformBuffer(t,"app",{app:{color:[1,0,0]}});const i=this.uniformStore.getUniformBufferData("app");this.uniformBuffer1.write(i),this.uniformBuffer2=this.uniformStore.createUniformBuffer(t,"app",{app:{color:[0,0,1]}}),this.model1=new rn(t,{vs:rs,fs:ss,shaderAssembler:n,modules:[os],bufferLayout:[{name:"position",format:"float32x2"}],attributes:{position:this.positionBuffer},vertexCount:3,bindings:{app:this.uniformBuffer1}}),this.model2=new rn(t,{vs:rs,fs:ss,shaderAssembler:n,modules:[as],bufferLayout:[{name:"position",format:"float32x2"}],vertexCount:3,attributes:{position:this.positionBuffer},bindings:{app:this.uniformBuffer2}})}onFinalize(){this.model1.destroy(),this.model2.destroy(),this.positionBuffer.destroy(),this.uniformStore.destroy(),this.uniformBuffer1.destroy(),this.uniformBuffer2.destroy()}onRender(e){let{device:t}=e;const n=t.beginRenderPass({clearColor:[0,0,0,1]});this.model1.draw(n),this.model2.draw(n),n.end()}}ls.info="\nModifying shader behavior with shader hooks\n";const cs={name:"color",fs:"\nvec3 color_hsv2rgb(vec3 hsv) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(hsv.xxx + K.xyz) * 6.0 - K.www);\n  vec3 rgb = hsv.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), hsv.y);\n  return rgb;\n}\n  ",uniformTypes:{hsv:"vec3<f32>"}};class us extends f{constructor(e){let{device:t}=e;super(),this.shaderInputs1=new $t({color:cs}),this.shaderInputs2=new $t({color:cs}),this.positionBuffer=t.createBuffer(new Float32Array([-.3,-.5,.3,-.5,0,.5])),this.shaderInputs1.setProps({color:{hsv:[.7,1,1]}}),this.shaderInputs2.setProps({color:{hsv:[1,1,1]}}),this.model1=new rn(t,{vs:"#version 300 es\nin vec2 position;\nvoid main() {\n  gl_Position = vec4(position - vec2(0.5, 0.0), 0.0, 1.0);\n}\n",fs:"#version 300 es\nprecision highp float;\n\nuniform colorUniforms {\n  vec3 hsv;\n} color;\n\nout vec4 fragColor;\n\nvoid main() {\n  fragColor = vec4(color_hsv2rgb(color.hsv), 1.0);\n}\n",shaderInputs:this.shaderInputs1,bufferLayout:[{name:"position",format:"float32x2"}],attributes:{position:this.positionBuffer},vertexCount:3}),this.model2=new rn(t,{vs:"#version 300 es\nin vec2 position;\nvoid main() {\n  gl_Position = vec4(position + vec2(0.5, 0.0), 0.0, 1.0);\n}\n",fs:"#version 300 es\n\nprecision highp float;\n\nuniform colorUniforms {\n  vec3 hsv;\n} color;\n\nout vec4 fragColor;\n\nvoid main() {\n  fragColor = vec4(color_hsv2rgb(color.hsv) - 0.3, 1.0);\n}\n",shaderInputs:this.shaderInputs2,bufferLayout:[{name:"position",format:"float32x2"}],attributes:{position:this.positionBuffer},vertexCount:3})}onFinalize(){this.model1.destroy(),this.model2.destroy(),this.positionBuffer.destroy()}onRender(e){let{device:t}=e;const n=t.beginRenderPass({clearColor:[0,0,0,1]});this.model1.draw(n),this.model2.draw(n),n.end()}}var hs,ds;function _s(e,t){return t||(t=e.slice(0)),e.raw=t,e}us.info="\nRe-using shader code with shader modules\n";const ps=s(hs||(hs=_s(["#version 300 es\nconst vec2 pos[3] = vec2[3](vec2(0.0f, 0.5f), vec2(-0.5f, -0.5f), vec2(0.5f, -0.5f));\nvoid main() {\n  gl_Position = vec4(pos[gl_VertexID], 0.0, 1.0);\n}\n"],["\\\n#version 300 es\nconst vec2 pos[3] = vec2[3](vec2(0.0f, 0.5f), vec2(-0.5f, -0.5f), vec2(0.5f, -0.5f));\nvoid main() {\n  gl_Position = vec4(pos[gl_VertexID], 0.0, 1.0);\n}\n"]))),fs=s(ds||(ds=_s(["#version 300 es\nprecision highp float;\nlayout(location = 0) out vec4 outColor;\nvoid main() {\n    outColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n"],["\\\n#version 300 es\nprecision highp float;\nlayout(location = 0) out vec4 outColor;\nvoid main() {\n    outColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n"])));class gs extends f{constructor(e){let{device:t}=e;super(),this.model=new rn(t,{source:"@vertex\nfn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> @builtin(position) vec4<f32> {\n  var positions = array<vec2<f32>, 3>(vec2(0.0, 0.5), vec2(-0.5, -0.5), vec2(0.5, -0.5));\n  return vec4<f32>(positions[vertexIndex], 0.0, 1.0);\n}\n\n@fragment\nfn fragmentMain() -> @location(0) vec4<f32> {\n  return vec4<f32>(1.0, 0.0, 0.0, 1.0);\n}\n",vs:ps,fs:fs,topology:"triangle-list",vertexCount:3,shaderLayout:{attributes:[],bindings:[]},parameters:{depthFormat:"depth24plus"}})}onFinalize(){this.model.destroy()}onRender(e){let{device:t}=e;const n=t.beginRenderPass({clearColor:[1,1,1,1]});this.model.draw(n),n.end()}}var ms,Es;function As(e,t){return t||(t=e.slice(0)),e.raw=t,e}const Rs=s(ms||(ms=As(["#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix[16];\n} app;\n\n// CUBE GEOMETRY\nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix[gl_InstanceID] * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = vec4(positions, 1.);\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix[16];\n} app;\n\n// CUBE GEOMETRY\nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix[gl_InstanceID] * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = vec4(positions, 1.);\n}\n"]))),vs=s(Es||(Es=As(["#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = fragPosition;\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = fragPosition;\n}\n"])));class Ts extends f{constructor(e){let{device:t}=e;super(),this.uniformBuffer=t.createBuffer({id:"uniforms",usage:o.h.UNIFORM|o.h.COPY_DST,byteLength:1024}),this.cubeModel=new rn(t,{id:"cube",source:"struct Uniforms {\n  modelViewProjectionMatrix : array<mat4x4<f32>, 16>,\n};\n\n@binding(0) @group(0) var<uniform> app : Uniforms;\n\nstruct VertexInputs {\n  @builtin(instance_index) instanceIdx : u32,\n  // CUBE GEOMETRY\n  @location(0) positions : vec4<f32>,\n  @location(1) texCoords : vec2<f32>\n}\n\nstruct FragmentInputs {\n  @builtin(position) Position : vec4<f32>,\n  @location(0) fragUV : vec2<f32>,\n  @location(1) fragPosition: vec4<f32>,\n}\n\n@vertex\nfn vertexMain(inputs: VertexInputs) -> FragmentInputs {\n  var outputs : FragmentInputs;\n  outputs.Position = app.modelViewProjectionMatrix[inputs.instanceIdx] * inputs.positions;\n  outputs.fragUV = inputs.texCoords;\n  outputs.fragPosition = 0.5 * (inputs.positions + vec4<f32>(1.0, 1.0, 1.0, 1.0));\n  return outputs;\n}\n\n@fragment\nfn fragmentMain(inputs: FragmentInputs) -> @location(0) vec4<f32> {\n  return inputs.fragPosition;\n}\n",vs:Rs,fs:vs,geometry:new cn({indices:!1}),instanceCount:16,parameters:{depthWriteEnabled:!0,depthCompare:"less",depthFormat:"depth24plus",cullMode:"back"},bindings:{app:this.uniformBuffer}})}onFinalize(e){this.uniformBuffer.destroy(),this.cubeModel.destroy()}onRender(e){var t;let{device:n}=e;const i=new Cn.k,r=null==(t=n.canvasContext)?void 0:t.getAspect(),s=Date.now()/1e3;i.perspective({fovy:2*Math.PI/5,aspect:r,near:1,far:100});const o=function(e,t){const n=(new Cn.k).translate([0,0,-12]),i=new Cn.k;let r=0,s=0;for(let o=0;o<4;o++)for(let a=0;a<4;a++)i.copy(Ss[r]).rotateAxis(1,[Math.sin((o+.5)*t),Math.cos((a+.5)*t),0]).multiplyLeft(n).multiplyLeft(e),bs.set(i,s),r++,s+=16;return bs}(i,s);this.uniformBuffer.write(o);const a=n.beginRenderPass();this.cubeModel.draw(a),a.end()}}const Ss=[];for(let io=0;io<4;io++)for(let e=0;e<4;e++)Ss.push((new Cn.k).translate([4*(io-2+.5),4*(e-2+.5),0]));const bs=new Float32Array(256);var Cs,Is;function Ns(e,t){return t||(t=e.slice(0)),e.raw=t,e}const ys=s(Cs||(Cs=Ns(["#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\n// CUBE GEOMETRY \nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = vec4(positions, 1.);\n  // fragPosition = 0.5 * (vec4(position, 1.) + vec4(1., 1., 1., 1.));\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\n// CUBE GEOMETRY \nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = vec4(positions, 1.);\n  // fragPosition = 0.5 * (vec4(position, 1.) + vec4(1., 1., 1., 1.));\n}\n"]))),Ls=s(Is||(Is=Ns(["#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\n\nuniform sampler2D uTexture;\n\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = texture(uTexture, vec2(fragUV.x, 1.0 - fragUV.y));;\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\n\nuniform sampler2D uTexture;\n\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = texture(uTexture, vec2(fragUV.x, 1.0 - fragUV.y));;\n}\n"])));class Ps extends f{constructor(e){let{device:t}=e;super();const n=new tn(t,{data:(0,en.Dt)("https://raw.githubusercontent.com/uber/luma.gl/8.5-release/examples/getting-started/hello-cube/vis-logo.png"),mipmaps:!0,sampler:{magFilter:"linear",minFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}});this.uniformBuffer=t.createBuffer({id:"uniforms",byteLength:64,usage:o.h.UNIFORM|o.h.COPY_DST}),this.model=new rn(t,{id:"cube",source:"\nstruct Uniforms {\n  modelViewProjectionMatrix : mat4x4<f32>,\n};\n@binding(0) @ group(0) var<uniform> app : Uniforms;\n\nstruct VertexOutput {\n  @builtin(position) Position : vec4<f32>,\n  @location(0) fragUV : vec2<f32>,\n  @location(1) fragPosition: vec4<f32>,\n};\n\n@vertex\nfn vertedMain(\n  @location(0) positions : vec4<f32>,\n  @location(1) texCoords : vec2<f32>) -> VertexOutput \n{\n  var output : VertexOutput;\n  output.Position = app.modelViewProjectionMatrix * positions;\n  output.fragUV = texCoords;\n  output.fragPosition = 0.5 * (positions + vec4<f32>(1.0, 1.0, 1.0, 1.0));\n  return output;\n}\n\n@group(0) @binding(1) var uSampler: sampler;\n@group(0) @binding(2) var uTexture: texture_2d<f32>;\n\n@fragment\nfn fragmentMain(@location(0) fragUV: vec2<f32>,\n        @location(1) fragPosition: vec4<f32>) -> @location(0) vec4<f32> {\n  let flippedUV = vec2<f32>(1.0 - fragUV.x, fragUV.y);\n  return textureSample(uTexture, uSampler, flippedUV) * fragPosition;\n}\n",vs:ys,fs:Ls,geometry:new cn({indices:!1}),bindings:{app:this.uniformBuffer,uSampler:n.sampler,uTexture:n},parameters:{depthWriteEnabled:!0,depthCompare:"less"}})}onFinalize(){this.model.destroy(),this.uniformBuffer.destroy()}onRender(e){var t;let{device:n}=e;const i=new Cn.k,r=new Cn.k,s=new Cn.k,o=null==(t=n.canvasContext)?void 0:t.getAspect(),a=Date.now()/1e3;r.identity().translate([0,0,-4]).rotateAxis(1,[Math.sin(a),Math.cos(a),0]),i.perspective({fovy:2*Math.PI/5,aspect:o,near:1,far:100}),s.copy(r).multiplyLeft(i),this.uniformBuffer.write(new Float32Array(s));const l=n.beginRenderPass({clearColor:[0,0,0,1]});this.model.draw(l),l.end()}}var ws,xs;function Ms(e,t){return t||(t=e.slice(0)),e.raw=t,e}const Os=s(ws||(ws=Ms(["#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = vec4(positions, 1.);\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-vs\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nlayout(location=0) in vec3 positions;\nlayout(location=1) in vec2 texCoords;\n\nout vec2 fragUV;\nout vec4 fragPosition;\n\nvoid main() {\n  gl_Position = app.modelViewProjectionMatrix * vec4(positions, 1.0);\n  fragUV = texCoords;\n  fragPosition = vec4(positions, 1.);\n}\n"]))),Fs=s(xs||(xs=Ms(["#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = fragPosition;\n}\n"],["\\\n#version 300 es\n#define SHADER_NAME cube-fs\nprecision highp float;\n\nuniform appUniforms {\n  mat4 modelViewProjectionMatrix;\n} app;\n\nin vec2 fragUV;\nin vec4 fragPosition;\n\nlayout (location=0) out vec4 fragColor;\n\nvoid main() {\n  fragColor = fragPosition;\n}\n"])));class Ds extends f{constructor(e){let{device:t}=e;super(),this.uniformBuffer1=t.createBuffer({id:"uniforms-1",usage:o.h.UNIFORM|o.h.COPY_DST,byteLength:64}),this.uniformBuffer2=t.createBuffer({id:"uniforms-2",usage:o.h.UNIFORM|o.h.COPY_DST,byteLength:64}),this.cubeModel=new rn(t,{id:"cube",source:"struct Uniforms {\n  modelViewProjectionMatrix : mat4x4<f32>,\n};\n@binding(0) @group(0) var<uniform> app : Uniforms;\n\nstruct VertexInputs {\n  @location(0) positions : vec4<f32>,\n  @location(1) texCoords : vec2<f32>\n};\n\nstruct FragmentInputs {\n  @builtin(position) Position : vec4<f32>,\n  @location(0) fragUV : vec2<f32>,\n  @location(1) fragPosition: vec4<f32>,\n}\n\n@vertex\nfn vertexMain(inputs: VertexInputs) -> FragmentInputs {\n  var outputs : FragmentInputs;\n  outputs.Position = app.modelViewProjectionMatrix * inputs.positions;\n  outputs.fragUV = inputs.texCoords;\n  outputs.fragPosition = 0.5 * (inputs.positions + vec4(1.0, 1.0, 1.0, 1.0));\n  return outputs;\n}\n\n@fragment\nfn fragmentMain(inputs: FragmentInputs) -> @location(0) vec4<f32> {\n  return inputs.fragPosition;\n}\n",vs:Os,fs:Fs,geometry:new cn({indices:!1}),parameters:{depthWriteEnabled:!0,depthCompare:"less",depthFormat:"depth24plus",cullMode:"back"},bindings:{app:this.uniformBuffer1}})}onFinalize(){this.cubeModel.destroy(),this.uniformBuffer1.destroy(),this.uniformBuffer2.destroy()}onRender(e){var t;let{device:n}=e;const i=new Cn.k,r=new Cn.k,s=new Cn.k,o=null==(t=n.canvasContext)?void 0:t.getAspect(),a=Date.now()/1e3;i.perspective({fovy:2*Math.PI/5,aspect:o,near:1,far:100}),r.identity().translate([-2,0,-7]).rotateAxis(1,[Math.sin(a),Math.cos(a),0]),s.copy(r).multiplyLeft(i),this.uniformBuffer1.write(new Float32Array(s)),r.identity().translate([2,0,-7]).rotateAxis(1,[Math.cos(a),Math.sin(a),0]),s.copy(r).multiplyLeft(i),this.uniformBuffer2.write(new Float32Array(s));const l=n.beginRenderPass({clearColor:[0,0,0,1]});this.cubeModel.setBindings({app:this.uniformBuffer1}),this.cubeModel.draw(l),this.cubeModel.setBindings({app:this.uniformBuffer2}),this.cubeModel.draw(l),l.end()}}const Bs={},Us=()=>i.createElement(r.fo,{id:"animation",directory:"api",template:Mn,config:Bs}),Gs=()=>i.createElement(r.fo,{id:"cubemap",directory:"api",template:Hn,config:Bs}),ks=()=>i.createElement(r.fo,{id:"texture-3d",directory:"api-3d",template:$n,config:Bs}),Hs=()=>i.createElement(r.fo,{id:"instancing",directory:"showcase",template:gi,config:Bs}),Vs=()=>i.createElement(r.fo,{id:"persistence",directory:"showcase/persistence",template:Hi,config:Bs}),Xs=()=>i.createElement(r.fo,{id:"hello-cube",directory:"tutorials",template:qi,config:Bs}),Ws=()=>i.createElement(r.fo,{id:"hello-instancing",directory:"tutorials",template:nr,config:Bs}),Ks=()=>i.createElement(r.fo,{id:"hello-triangle",directory:"tutorials",template:sr,config:Bs}),zs=()=>i.createElement("h2",null,i.createElement("i",null,"Note: Transform examples temporarily disabled")),Ys=()=>i.createElement(r.fo,{id:"lighting",directory:"tutorials",template:is,config:Bs}),js=()=>i.createElement(r.fo,{id:"hello-gltf",directory:"tutorials",template:Dr,config:Bs}),qs=()=>i.createElement(r.fo,{id:"shader-hooks",directory:"tutorials",template:ls,config:Bs}),Qs=()=>i.createElement(r.fo,{id:"shader-modules",directory:"tutorials",template:us,config:Bs}),Zs=()=>i.createElement("h2",null,i.createElement("i",null,"Note: Transform examples temporarily disabled")),Js=()=>i.createElement("h2",null,i.createElement("i",null,"Note: Transform examples temporarily disabled")),$s=()=>i.createElement(r.fo,{id:"hello-triangle-webgpu",directory:"webgpu",template:gs,config:Bs}),eo=()=>i.createElement(r.fo,{id:"instanced-cubes-webgpu",directory:"webgpu",template:Ts,config:Bs}),to=()=>i.createElement(r.fo,{id:"textured-cube-webgpu",directory:"webgpu",template:Ps,config:Bs}),no=()=>i.createElement(r.fo,{id:"two-cubes-webgpu",directory:"webgpu",template:Ds,config:Bs})},6254:(e,t,n)=>{"use strict";n.d(t,{xN:()=>Ai,Xj:()=>Ti,dJ:()=>bi,yL:()=>Si,R2:()=>Ri,I$:()=>vi,fo:()=>Pi,dw:()=>Ci});var i=n(6540),r=n(5556),s=n.n(r);function o(){return o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o.apply(this,arguments)}class a extends i.Component{render(){const{height:e,width:t,viewBox:n,style:r={},children:s,predefinedClassName:a,className:l,colors:c,totalColor:u,...h}=this.props,d=e,_=t||d;r.fill="currentColor";const p=Array.isArray(c)&&u&&((e,t)=>new Array(e).fill(1).reduce(((e,n,i)=>e+".cr"+(i+1)+" {fill:"+t[i%t.length]+";}"),""))(u,c);return i.createElement("svg",o({viewBox:n,width:_,height:d,style:r,className:a+" "+l},h),p?i.createElement("style",{type:"text/css"},p):null,s)}}a.displayName="Base Icon",a.propTypes={height:s().string,width:s().string,viewBox:s().string,children:s().node,predefinedClassName:s().string,className:s().string},a.defaultProps={height:null,width:null,viewBox:"0 0 64 64",predefinedClassName:"",className:""};const l=e=>i.createElement(a,e,i.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M5.02167 13.7625C4.69623 13.4459 4.69623 12.9325 5.02167 12.6159L9.76574 8.00002L5.02167 3.38416C4.69623 3.06752 4.69623 2.55415 5.02167 2.2375C5.3471 1.92086 5.87474 1.92086 6.20018 2.2375L11.5335 7.42669C11.6898 7.57875 11.7776 7.78498 11.7776 8.00002C11.7776 8.21506 11.6898 8.4213 11.5335 8.57335L6.20018 13.7625C5.87474 14.0792 5.3471 14.0792 5.02167 13.7625Z"}));l.propTypes={height:s().string},l.defaultProps={height:"16px",viewBox:"0 0 17 16",predefinedClassName:"unfolded-icons-arrowbigright"};var c=n(4745),u=n(6769),h=n(3522),d=n(6237);const _=new class{constructor(){this.stats=new Map}getStats(e){return this.get(e)}get(e){return this.stats.has(e)||this.stats.set(e,new d.A({id:e})),this.stats.get(e)}};const p=function(){const e="undefined"!=typeof __VERSION__?__VERSION__:"running from source";if(globalThis.luma&&globalThis.luma.VERSION!==e)throw new Error("luma.gl - multiple VERSIONs detected: "+globalThis.luma.VERSION+" vs "+e);return globalThis.luma||((0,u.B)()&&h.R.log(1,e+" - set luma.log.level=1 (or higher) to trace rendering")(),globalThis.luma=globalThis.luma||{VERSION:e,version:e,log:h.R,stats:_}),e}();var f=n(1166),g=n(5056),m=n(2112);const E=["bc1","bc2","bc3","bc4","bc5","bc6","bc7","etc1","etc2","eac","atc","astc","pvrtc"],A=/^(rg?b?a?)([0-9]*)([a-z]*)(-srgb)?(-webgl|-unsized)?$/;function R(e){const t=A.exec(e);if(t){const[,e,n,i,r,s]=t;if(e){const t=""+i+n,o=(0,m.l)(t);return{format:e,components:e.length,srgb:"-srgb"===r,unsized:"-unsized"===s,webgl:"-webgl"===s,...o}}}return function(e){var t;const n=v[e];if(!n)throw new Error("Unknown format "+e);return{format:n.format||"",components:n.components||(null==(t=n.format)?void 0:t.length)||1,byteLength:n.bpp||1,srgb:!1,unsized:!1}}(e)}const v={"rgba4unorm-webgl":{format:"rgba",bpp:2},"rgb565unorm-webgl":{format:"rgb",bpp:2},"rgb5a1unorm-webgl":{format:"rgba",bbp:2},rgb9e5ufloat:{format:"rgb",bbp:4},rg11b10ufloat:{format:"rgb",bbp:4},rgb10a2unorm:{format:"rgba",bbp:4},"rgb10a2uint-webgl":{format:"rgba",bbp:4},stencil8:{components:1,bpp:1,a:"stencil"},depth16unorm:{components:1,bpp:2,a:"depth"},depth24plus:{components:1,bpp:3,a:"depth"},depth32float:{components:1,bpp:4,a:"depth"},"depth24plus-stencil8":{components:2,bpp:4,a:"depth-stencil"},"depth24unorm-stencil8":{components:2,bpp:4,a:"depth-stencil"},"depth32float-stencil8":{components:2,bpp:4,a:"depth-stencil"}};let T;class S{}class b{constructor(e,t){void 0===e&&(e=[]),this.features=new Set(e),this.disabledFeatures=t||{}}*[Symbol.iterator](){yield*this.features}has(e){var t;return!(null!=(t=this.disabledFeatures)&&t[e])&&this.features.has(e)}}T=Symbol.toStringTag;class C{get[T](){return"Device"}constructor(e){this.userData={},this.statsManager=_,this._lumaData={},this.timestamp=0,this.props={...C.defaultProps,...e},this.id=this.props.id||(0,f.L)(this[Symbol.toStringTag].toLowerCase())}isTextureFormatCompressed(e){return t=e,E.some((e=>t.startsWith(e)));var t}loseDevice(){return!1}error(e){this.props.onError(e)}getCanvasContext(){if(!this.canvasContext)throw new Error("Device has no CanvasContext");return this.canvasContext}createTexture(e){return this._createTexture(e)}createCommandEncoder(e){throw void 0===e&&(e={}),new Error("not implemented")}readPixelsToArrayWebGL(e,t){throw new Error("not implemented")}readPixelsToBufferWebGL(e,t){throw new Error("not implemented")}setParametersWebGL(e){throw new Error("not implemented")}getParametersWebGL(e){throw new Error("not implemented")}withParametersWebGL(e,t){throw new Error("not implemented")}clearWebGL(e){throw new Error("not implemented")}incrementTimestamp(){return this.timestamp++}onError(e){this.props.onError(e)}_getBufferProps(e){(e instanceof ArrayBuffer||ArrayBuffer.isView(e))&&(e={data:e});const t={...e};return(e.usage||0)&g.h.INDEX&&!e.indexType&&(e.data instanceof Uint32Array?t.indexType="uint32":e.data instanceof Uint16Array?t.indexType="uint16":h.R.warn("indices buffer content must be of integer type")()),t}}C.defaultProps={id:null,canvas:null,container:null,manageState:!0,width:800,height:600,requestMaxLimits:!0,onError:e=>h.R.error(e.message),gl:null,debug:Boolean(h.R.get("debug")),spector:Boolean(h.R.get("spector")),break:h.R.get("break")||[],initalizeFeatures:!0,disabledFeatures:{"compilation-status-async-webgl":!0},_factoryDestroyPolicy:"unused"},C.VERSION=p;const I=new Map;class N{static registerDevices(e){for(const t of e)I.set(t.type,t)}static getAvailableDevices(){return Array.from(I).map((e=>e.type))}static getSupportedDevices(){return Array.from(I).filter((e=>e.isSupported())).map((e=>e.type))}static setDefaultDeviceProps(e){Object.assign(N.defaultProps,e)}static async attachDevice(e){const t=y(e.devices)||I;if(e.handle instanceof WebGL2RenderingContext){const n=t.get("webgl");if(n)return await n.attach(e.handle)}if(null===e.handle){const e=t.get("unknown");if(e)return await e.attach(null)}throw new Error("Failed to attach device. Ensure `@luma.gl/webgl` and/or `@luma.gl/webgpu` modules are imported.")}static async createDevice(e){var t,n;void 0===e&&(e={}),(e={...N.defaultProps,...e}).gl&&(e.type="webgl");const i=y(e.devices)||I;let r,s;switch(e.type){case"webgpu":if(r=i.get("webgpu"),r)return await r.create(e);break;case"webgl":if(s=i.get("webgl"),s)return await s.create(e);break;case"unknown":const o=i.get("unknown");if(o)return await o.create(e);break;case"best-available":if(r=i.get("webgpu"),null!=(t=r)&&null!=t.isSupported&&t.isSupported())return await r.create(e);if(s=i.get("webgl"),null!=(n=s)&&null!=n.isSupported&&n.isSupported())return await s.create(e)}throw new Error("No matching device found. Ensure `@luma.gl/webgl` and/or `@luma.gl/webgpu` modules are imported.")}}function y(e){if(!e||0===(null==e?void 0:e.length))return null;const t=new Map;for(const n of e)t.set(n.type,n);return t}N.defaultProps={...C.defaultProps,type:"best-available",devices:void 0},N.stats=_,N.log=h.R;const L=(0,u.B)()&&"undefined"!=typeof document,P=()=>L&&"complete"===document.readyState,w={canvas:null,width:800,height:600,useDevicePixels:!0,autoResize:!0,container:null,visible:!0,colorSpace:"srgb",alphaMode:"opaque"};class x{static get isPageLoaded(){return P()}constructor(e){if(this.width=1,this.height=1,this._canvasSizeInfo={clientWidth:0,clientHeight:0,devicePixelRatio:1},this.props={...w,...e},e=this.props,!(0,u.B)())return this.id="node-canvas-context",this.type="node",this.width=this.props.width,this.height=this.props.height,void(this.canvas=null);if(e.canvas)"string"==typeof e.canvas?this.canvas=function(e){const t=document.getElementById(e);if(!t&&!P())throw new Error("Accessing '"+e+"' before page was loaded");if(!(t instanceof HTMLCanvasElement))throw new Error("Object is not a canvas element");return t}(e.canvas):this.canvas=e.canvas;else{var t,n;const i=function(e){const{width:t,height:n}=e,i=document.createElement("canvas");return i.id="lumagl-auto-created-canvas",i.width=t||1,i.height=n||1,i.style.width=Number.isFinite(t)?t+"px":"100%",i.style.height=Number.isFinite(n)?n+"px":"100%",i}(e),r=function(e){if("string"==typeof e){const t=document.getElementById(e);if(!t&&!P())throw new Error("Accessing '"+e+"' before page was loaded");if(!t)throw new Error(e+" is not an HTML element");return t}if(e)return e;return document.body}((null==(t=e)?void 0:t.container)||null);r.insertBefore(i,r.firstChild),this.canvas=i,null!=(n=e)&&n.visible||(this.canvas.style.visibility="hidden")}this.canvas instanceof HTMLCanvasElement?(this.id=this.canvas.id,this.type="html-canvas",this.htmlCanvas=this.canvas):(this.id="offscreen-canvas",this.type="offscreen-canvas",this.offscreenCanvas=this.canvas),this.canvas instanceof HTMLCanvasElement&&e.autoResize&&(this.resizeObserver=new ResizeObserver((e=>{for(const t of e)t.target===this.canvas&&this.update()})),this.resizeObserver.observe(this.canvas))}getDevicePixelRatio(e){if("undefined"!=typeof OffscreenCanvas&&this.canvas instanceof OffscreenCanvas)return 1;if(!(e=void 0===e?this.props.useDevicePixels:e)||e<=0)return 1;if(!0===e){return"undefined"!=typeof window&&window.devicePixelRatio||1}return e}getPixelSize(){switch(this.type){case"node":return[this.width,this.height];case"offscreen-canvas":return[this.canvas.width,this.canvas.height];case"html-canvas":const e=this.getDevicePixelRatio(),t=this.canvas;return t.parentElement?[t.clientWidth*e,t.clientHeight*e]:[this.canvas.width,this.canvas.height];default:throw new Error(this.type)}}getAspect(){const[e,t]=this.getPixelSize();return e/t}cssToDeviceRatio(){try{const[e]=this.getDrawingBufferSize(),{clientWidth:t}=this._canvasSizeInfo;return t?e/t:1}catch{return 1}}cssToDevicePixels(e,t){void 0===t&&(t=!0);const n=this.cssToDeviceRatio(),[i,r]=this.getDrawingBufferSize();return function(e,t,n,i,r){const s=e,o=M(s[0],t,n);let a=O(s[1],t,i,r),l=M(s[0]+1,t,n);const c=l===n-1?l:l-1;let u;l=O(s[1]+1,t,i,r),r?(l=0===l?l:l+1,u=a,a=l):u=l===i-1?l:l-1;return{x:o,y:a,width:Math.max(c-o+1,1),height:Math.max(u-a+1,1)}}(e,n,i,r,t)}setDevicePixelRatio(e,t){if(void 0===t&&(t={}),!this.htmlCanvas)return;let n="width"in t?t.width:this.htmlCanvas.clientWidth,i="height"in t?t.height:this.htmlCanvas.clientHeight;n&&i||(h.R.log(1,"Canvas clientWidth/clientHeight is 0")(),e=1,n=this.htmlCanvas.width||1,i=this.htmlCanvas.height||1);const r=this._canvasSizeInfo;if(r.clientWidth!==n||r.clientHeight!==i||r.devicePixelRatio!==e){let t=e;const r=Math.floor(n*t),s=Math.floor(i*t);this.htmlCanvas.width=r,this.htmlCanvas.height=s;const[o,a]=this.getDrawingBufferSize();o===r&&a===s||(t=Math.min(o/n,a/i),this.htmlCanvas.width=Math.floor(n*t),this.htmlCanvas.height=Math.floor(i*t),h.R.warn("Device pixel ratio clamped")()),this._canvasSizeInfo.clientWidth=n,this._canvasSizeInfo.clientHeight=i,this._canvasSizeInfo.devicePixelRatio=e}}getDrawingBufferSize(){const e=this.device.gl;if(!e)throw new Error("canvas size");return[e.drawingBufferWidth,e.drawingBufferHeight]}_setAutoCreatedCanvasId(e){var t;"lumagl-auto-created-canvas"===(null==(t=this.htmlCanvas)?void 0:t.id)&&(this.htmlCanvas.id=e)}}function M(e,t,n){return Math.min(Math.round(e*t),n-1)}function O(e,t,n,i){return i?Math.max(0,n-1-Math.round(e*t)):Math.min(Math.round(e*t),n-1)}x.pageLoaded=function(){if(P()||"undefined"==typeof window)return Promise.resolve();return new Promise((e=>{window.addEventListener("load",(()=>e()))}))}();var F=function(e){return e[e.DEPTH_BUFFER_BIT=256]="DEPTH_BUFFER_BIT",e[e.STENCIL_BUFFER_BIT=1024]="STENCIL_BUFFER_BIT",e[e.COLOR_BUFFER_BIT=16384]="COLOR_BUFFER_BIT",e[e.POINTS=0]="POINTS",e[e.LINES=1]="LINES",e[e.LINE_LOOP=2]="LINE_LOOP",e[e.LINE_STRIP=3]="LINE_STRIP",e[e.TRIANGLES=4]="TRIANGLES",e[e.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=6]="TRIANGLE_FAN",e[e.ZERO=0]="ZERO",e[e.ONE=1]="ONE",e[e.SRC_COLOR=768]="SRC_COLOR",e[e.ONE_MINUS_SRC_COLOR=769]="ONE_MINUS_SRC_COLOR",e[e.SRC_ALPHA=770]="SRC_ALPHA",e[e.ONE_MINUS_SRC_ALPHA=771]="ONE_MINUS_SRC_ALPHA",e[e.DST_ALPHA=772]="DST_ALPHA",e[e.ONE_MINUS_DST_ALPHA=773]="ONE_MINUS_DST_ALPHA",e[e.DST_COLOR=774]="DST_COLOR",e[e.ONE_MINUS_DST_COLOR=775]="ONE_MINUS_DST_COLOR",e[e.SRC_ALPHA_SATURATE=776]="SRC_ALPHA_SATURATE",e[e.CONSTANT_COLOR=32769]="CONSTANT_COLOR",e[e.ONE_MINUS_CONSTANT_COLOR=32770]="ONE_MINUS_CONSTANT_COLOR",e[e.CONSTANT_ALPHA=32771]="CONSTANT_ALPHA",e[e.ONE_MINUS_CONSTANT_ALPHA=32772]="ONE_MINUS_CONSTANT_ALPHA",e[e.FUNC_ADD=32774]="FUNC_ADD",e[e.FUNC_SUBTRACT=32778]="FUNC_SUBTRACT",e[e.FUNC_REVERSE_SUBTRACT=32779]="FUNC_REVERSE_SUBTRACT",e[e.BLEND_EQUATION=32777]="BLEND_EQUATION",e[e.BLEND_EQUATION_RGB=32777]="BLEND_EQUATION_RGB",e[e.BLEND_EQUATION_ALPHA=34877]="BLEND_EQUATION_ALPHA",e[e.BLEND_DST_RGB=32968]="BLEND_DST_RGB",e[e.BLEND_SRC_RGB=32969]="BLEND_SRC_RGB",e[e.BLEND_DST_ALPHA=32970]="BLEND_DST_ALPHA",e[e.BLEND_SRC_ALPHA=32971]="BLEND_SRC_ALPHA",e[e.BLEND_COLOR=32773]="BLEND_COLOR",e[e.ARRAY_BUFFER_BINDING=34964]="ARRAY_BUFFER_BINDING",e[e.ELEMENT_ARRAY_BUFFER_BINDING=34965]="ELEMENT_ARRAY_BUFFER_BINDING",e[e.LINE_WIDTH=2849]="LINE_WIDTH",e[e.ALIASED_POINT_SIZE_RANGE=33901]="ALIASED_POINT_SIZE_RANGE",e[e.ALIASED_LINE_WIDTH_RANGE=33902]="ALIASED_LINE_WIDTH_RANGE",e[e.CULL_FACE_MODE=2885]="CULL_FACE_MODE",e[e.FRONT_FACE=2886]="FRONT_FACE",e[e.DEPTH_RANGE=2928]="DEPTH_RANGE",e[e.DEPTH_WRITEMASK=2930]="DEPTH_WRITEMASK",e[e.DEPTH_CLEAR_VALUE=2931]="DEPTH_CLEAR_VALUE",e[e.DEPTH_FUNC=2932]="DEPTH_FUNC",e[e.STENCIL_CLEAR_VALUE=2961]="STENCIL_CLEAR_VALUE",e[e.STENCIL_FUNC=2962]="STENCIL_FUNC",e[e.STENCIL_FAIL=2964]="STENCIL_FAIL",e[e.STENCIL_PASS_DEPTH_FAIL=2965]="STENCIL_PASS_DEPTH_FAIL",e[e.STENCIL_PASS_DEPTH_PASS=2966]="STENCIL_PASS_DEPTH_PASS",e[e.STENCIL_REF=2967]="STENCIL_REF",e[e.STENCIL_VALUE_MASK=2963]="STENCIL_VALUE_MASK",e[e.STENCIL_WRITEMASK=2968]="STENCIL_WRITEMASK",e[e.STENCIL_BACK_FUNC=34816]="STENCIL_BACK_FUNC",e[e.STENCIL_BACK_FAIL=34817]="STENCIL_BACK_FAIL",e[e.STENCIL_BACK_PASS_DEPTH_FAIL=34818]="STENCIL_BACK_PASS_DEPTH_FAIL",e[e.STENCIL_BACK_PASS_DEPTH_PASS=34819]="STENCIL_BACK_PASS_DEPTH_PASS",e[e.STENCIL_BACK_REF=36003]="STENCIL_BACK_REF",e[e.STENCIL_BACK_VALUE_MASK=36004]="STENCIL_BACK_VALUE_MASK",e[e.STENCIL_BACK_WRITEMASK=36005]="STENCIL_BACK_WRITEMASK",e[e.VIEWPORT=2978]="VIEWPORT",e[e.SCISSOR_BOX=3088]="SCISSOR_BOX",e[e.COLOR_CLEAR_VALUE=3106]="COLOR_CLEAR_VALUE",e[e.COLOR_WRITEMASK=3107]="COLOR_WRITEMASK",e[e.UNPACK_ALIGNMENT=3317]="UNPACK_ALIGNMENT",e[e.PACK_ALIGNMENT=3333]="PACK_ALIGNMENT",e[e.MAX_TEXTURE_SIZE=3379]="MAX_TEXTURE_SIZE",e[e.MAX_VIEWPORT_DIMS=3386]="MAX_VIEWPORT_DIMS",e[e.SUBPIXEL_BITS=3408]="SUBPIXEL_BITS",e[e.RED_BITS=3410]="RED_BITS",e[e.GREEN_BITS=3411]="GREEN_BITS",e[e.BLUE_BITS=3412]="BLUE_BITS",e[e.ALPHA_BITS=3413]="ALPHA_BITS",e[e.DEPTH_BITS=3414]="DEPTH_BITS",e[e.STENCIL_BITS=3415]="STENCIL_BITS",e[e.POLYGON_OFFSET_UNITS=10752]="POLYGON_OFFSET_UNITS",e[e.POLYGON_OFFSET_FACTOR=32824]="POLYGON_OFFSET_FACTOR",e[e.TEXTURE_BINDING_2D=32873]="TEXTURE_BINDING_2D",e[e.SAMPLE_BUFFERS=32936]="SAMPLE_BUFFERS",e[e.SAMPLES=32937]="SAMPLES",e[e.SAMPLE_COVERAGE_VALUE=32938]="SAMPLE_COVERAGE_VALUE",e[e.SAMPLE_COVERAGE_INVERT=32939]="SAMPLE_COVERAGE_INVERT",e[e.COMPRESSED_TEXTURE_FORMATS=34467]="COMPRESSED_TEXTURE_FORMATS",e[e.VENDOR=7936]="VENDOR",e[e.RENDERER=7937]="RENDERER",e[e.VERSION=7938]="VERSION",e[e.IMPLEMENTATION_COLOR_READ_TYPE=35738]="IMPLEMENTATION_COLOR_READ_TYPE",e[e.IMPLEMENTATION_COLOR_READ_FORMAT=35739]="IMPLEMENTATION_COLOR_READ_FORMAT",e[e.BROWSER_DEFAULT_WEBGL=37444]="BROWSER_DEFAULT_WEBGL",e[e.STATIC_DRAW=35044]="STATIC_DRAW",e[e.STREAM_DRAW=35040]="STREAM_DRAW",e[e.DYNAMIC_DRAW=35048]="DYNAMIC_DRAW",e[e.ARRAY_BUFFER=34962]="ARRAY_BUFFER",e[e.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER",e[e.BUFFER_SIZE=34660]="BUFFER_SIZE",e[e.BUFFER_USAGE=34661]="BUFFER_USAGE",e[e.CURRENT_VERTEX_ATTRIB=34342]="CURRENT_VERTEX_ATTRIB",e[e.VERTEX_ATTRIB_ARRAY_ENABLED=34338]="VERTEX_ATTRIB_ARRAY_ENABLED",e[e.VERTEX_ATTRIB_ARRAY_SIZE=34339]="VERTEX_ATTRIB_ARRAY_SIZE",e[e.VERTEX_ATTRIB_ARRAY_STRIDE=34340]="VERTEX_ATTRIB_ARRAY_STRIDE",e[e.VERTEX_ATTRIB_ARRAY_TYPE=34341]="VERTEX_ATTRIB_ARRAY_TYPE",e[e.VERTEX_ATTRIB_ARRAY_NORMALIZED=34922]="VERTEX_ATTRIB_ARRAY_NORMALIZED",e[e.VERTEX_ATTRIB_ARRAY_POINTER=34373]="VERTEX_ATTRIB_ARRAY_POINTER",e[e.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING=34975]="VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",e[e.CULL_FACE=2884]="CULL_FACE",e[e.FRONT=1028]="FRONT",e[e.BACK=1029]="BACK",e[e.FRONT_AND_BACK=1032]="FRONT_AND_BACK",e[e.BLEND=3042]="BLEND",e[e.DEPTH_TEST=2929]="DEPTH_TEST",e[e.DITHER=3024]="DITHER",e[e.POLYGON_OFFSET_FILL=32823]="POLYGON_OFFSET_FILL",e[e.SAMPLE_ALPHA_TO_COVERAGE=32926]="SAMPLE_ALPHA_TO_COVERAGE",e[e.SAMPLE_COVERAGE=32928]="SAMPLE_COVERAGE",e[e.SCISSOR_TEST=3089]="SCISSOR_TEST",e[e.STENCIL_TEST=2960]="STENCIL_TEST",e[e.NO_ERROR=0]="NO_ERROR",e[e.INVALID_ENUM=1280]="INVALID_ENUM",e[e.INVALID_VALUE=1281]="INVALID_VALUE",e[e.INVALID_OPERATION=1282]="INVALID_OPERATION",e[e.OUT_OF_MEMORY=1285]="OUT_OF_MEMORY",e[e.CONTEXT_LOST_WEBGL=37442]="CONTEXT_LOST_WEBGL",e[e.CW=2304]="CW",e[e.CCW=2305]="CCW",e[e.DONT_CARE=4352]="DONT_CARE",e[e.FASTEST=4353]="FASTEST",e[e.NICEST=4354]="NICEST",e[e.GENERATE_MIPMAP_HINT=33170]="GENERATE_MIPMAP_HINT",e[e.BYTE=5120]="BYTE",e[e.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",e[e.SHORT=5122]="SHORT",e[e.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",e[e.INT=5124]="INT",e[e.UNSIGNED_INT=5125]="UNSIGNED_INT",e[e.FLOAT=5126]="FLOAT",e[e.DOUBLE=5130]="DOUBLE",e[e.DEPTH_COMPONENT=6402]="DEPTH_COMPONENT",e[e.ALPHA=6406]="ALPHA",e[e.RGB=6407]="RGB",e[e.RGBA=6408]="RGBA",e[e.LUMINANCE=6409]="LUMINANCE",e[e.LUMINANCE_ALPHA=6410]="LUMINANCE_ALPHA",e[e.UNSIGNED_SHORT_4_4_4_4=32819]="UNSIGNED_SHORT_4_4_4_4",e[e.UNSIGNED_SHORT_5_5_5_1=32820]="UNSIGNED_SHORT_5_5_5_1",e[e.UNSIGNED_SHORT_5_6_5=33635]="UNSIGNED_SHORT_5_6_5",e[e.FRAGMENT_SHADER=35632]="FRAGMENT_SHADER",e[e.VERTEX_SHADER=35633]="VERTEX_SHADER",e[e.COMPILE_STATUS=35713]="COMPILE_STATUS",e[e.DELETE_STATUS=35712]="DELETE_STATUS",e[e.LINK_STATUS=35714]="LINK_STATUS",e[e.VALIDATE_STATUS=35715]="VALIDATE_STATUS",e[e.ATTACHED_SHADERS=35717]="ATTACHED_SHADERS",e[e.ACTIVE_ATTRIBUTES=35721]="ACTIVE_ATTRIBUTES",e[e.ACTIVE_UNIFORMS=35718]="ACTIVE_UNIFORMS",e[e.MAX_VERTEX_ATTRIBS=34921]="MAX_VERTEX_ATTRIBS",e[e.MAX_VERTEX_UNIFORM_VECTORS=36347]="MAX_VERTEX_UNIFORM_VECTORS",e[e.MAX_VARYING_VECTORS=36348]="MAX_VARYING_VECTORS",e[e.MAX_COMBINED_TEXTURE_IMAGE_UNITS=35661]="MAX_COMBINED_TEXTURE_IMAGE_UNITS",e[e.MAX_VERTEX_TEXTURE_IMAGE_UNITS=35660]="MAX_VERTEX_TEXTURE_IMAGE_UNITS",e[e.MAX_TEXTURE_IMAGE_UNITS=34930]="MAX_TEXTURE_IMAGE_UNITS",e[e.MAX_FRAGMENT_UNIFORM_VECTORS=36349]="MAX_FRAGMENT_UNIFORM_VECTORS",e[e.SHADER_TYPE=35663]="SHADER_TYPE",e[e.SHADING_LANGUAGE_VERSION=35724]="SHADING_LANGUAGE_VERSION",e[e.CURRENT_PROGRAM=35725]="CURRENT_PROGRAM",e[e.NEVER=512]="NEVER",e[e.LESS=513]="LESS",e[e.EQUAL=514]="EQUAL",e[e.LEQUAL=515]="LEQUAL",e[e.GREATER=516]="GREATER",e[e.NOTEQUAL=517]="NOTEQUAL",e[e.GEQUAL=518]="GEQUAL",e[e.ALWAYS=519]="ALWAYS",e[e.KEEP=7680]="KEEP",e[e.REPLACE=7681]="REPLACE",e[e.INCR=7682]="INCR",e[e.DECR=7683]="DECR",e[e.INVERT=5386]="INVERT",e[e.INCR_WRAP=34055]="INCR_WRAP",e[e.DECR_WRAP=34056]="DECR_WRAP",e[e.NEAREST=9728]="NEAREST",e[e.LINEAR=9729]="LINEAR",e[e.NEAREST_MIPMAP_NEAREST=9984]="NEAREST_MIPMAP_NEAREST",e[e.LINEAR_MIPMAP_NEAREST=9985]="LINEAR_MIPMAP_NEAREST",e[e.NEAREST_MIPMAP_LINEAR=9986]="NEAREST_MIPMAP_LINEAR",e[e.LINEAR_MIPMAP_LINEAR=9987]="LINEAR_MIPMAP_LINEAR",e[e.TEXTURE_MAG_FILTER=10240]="TEXTURE_MAG_FILTER",e[e.TEXTURE_MIN_FILTER=10241]="TEXTURE_MIN_FILTER",e[e.TEXTURE_WRAP_S=10242]="TEXTURE_WRAP_S",e[e.TEXTURE_WRAP_T=10243]="TEXTURE_WRAP_T",e[e.TEXTURE_2D=3553]="TEXTURE_2D",e[e.TEXTURE=5890]="TEXTURE",e[e.TEXTURE_CUBE_MAP=34067]="TEXTURE_CUBE_MAP",e[e.TEXTURE_BINDING_CUBE_MAP=34068]="TEXTURE_BINDING_CUBE_MAP",e[e.TEXTURE_CUBE_MAP_POSITIVE_X=34069]="TEXTURE_CUBE_MAP_POSITIVE_X",e[e.TEXTURE_CUBE_MAP_NEGATIVE_X=34070]="TEXTURE_CUBE_MAP_NEGATIVE_X",e[e.TEXTURE_CUBE_MAP_POSITIVE_Y=34071]="TEXTURE_CUBE_MAP_POSITIVE_Y",e[e.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072]="TEXTURE_CUBE_MAP_NEGATIVE_Y",e[e.TEXTURE_CUBE_MAP_POSITIVE_Z=34073]="TEXTURE_CUBE_MAP_POSITIVE_Z",e[e.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074]="TEXTURE_CUBE_MAP_NEGATIVE_Z",e[e.MAX_CUBE_MAP_TEXTURE_SIZE=34076]="MAX_CUBE_MAP_TEXTURE_SIZE",e[e.TEXTURE0=33984]="TEXTURE0",e[e.ACTIVE_TEXTURE=34016]="ACTIVE_TEXTURE",e[e.REPEAT=10497]="REPEAT",e[e.CLAMP_TO_EDGE=33071]="CLAMP_TO_EDGE",e[e.MIRRORED_REPEAT=33648]="MIRRORED_REPEAT",e[e.TEXTURE_WIDTH=4096]="TEXTURE_WIDTH",e[e.TEXTURE_HEIGHT=4097]="TEXTURE_HEIGHT",e[e.FLOAT_VEC2=35664]="FLOAT_VEC2",e[e.FLOAT_VEC3=35665]="FLOAT_VEC3",e[e.FLOAT_VEC4=35666]="FLOAT_VEC4",e[e.INT_VEC2=35667]="INT_VEC2",e[e.INT_VEC3=35668]="INT_VEC3",e[e.INT_VEC4=35669]="INT_VEC4",e[e.BOOL=35670]="BOOL",e[e.BOOL_VEC2=35671]="BOOL_VEC2",e[e.BOOL_VEC3=35672]="BOOL_VEC3",e[e.BOOL_VEC4=35673]="BOOL_VEC4",e[e.FLOAT_MAT2=35674]="FLOAT_MAT2",e[e.FLOAT_MAT3=35675]="FLOAT_MAT3",e[e.FLOAT_MAT4=35676]="FLOAT_MAT4",e[e.SAMPLER_2D=35678]="SAMPLER_2D",e[e.SAMPLER_CUBE=35680]="SAMPLER_CUBE",e[e.LOW_FLOAT=36336]="LOW_FLOAT",e[e.MEDIUM_FLOAT=36337]="MEDIUM_FLOAT",e[e.HIGH_FLOAT=36338]="HIGH_FLOAT",e[e.LOW_INT=36339]="LOW_INT",e[e.MEDIUM_INT=36340]="MEDIUM_INT",e[e.HIGH_INT=36341]="HIGH_INT",e[e.FRAMEBUFFER=36160]="FRAMEBUFFER",e[e.RENDERBUFFER=36161]="RENDERBUFFER",e[e.RGBA4=32854]="RGBA4",e[e.RGB5_A1=32855]="RGB5_A1",e[e.RGB565=36194]="RGB565",e[e.DEPTH_COMPONENT16=33189]="DEPTH_COMPONENT16",e[e.STENCIL_INDEX=6401]="STENCIL_INDEX",e[e.STENCIL_INDEX8=36168]="STENCIL_INDEX8",e[e.DEPTH_STENCIL=34041]="DEPTH_STENCIL",e[e.RENDERBUFFER_WIDTH=36162]="RENDERBUFFER_WIDTH",e[e.RENDERBUFFER_HEIGHT=36163]="RENDERBUFFER_HEIGHT",e[e.RENDERBUFFER_INTERNAL_FORMAT=36164]="RENDERBUFFER_INTERNAL_FORMAT",e[e.RENDERBUFFER_RED_SIZE=36176]="RENDERBUFFER_RED_SIZE",e[e.RENDERBUFFER_GREEN_SIZE=36177]="RENDERBUFFER_GREEN_SIZE",e[e.RENDERBUFFER_BLUE_SIZE=36178]="RENDERBUFFER_BLUE_SIZE",e[e.RENDERBUFFER_ALPHA_SIZE=36179]="RENDERBUFFER_ALPHA_SIZE",e[e.RENDERBUFFER_DEPTH_SIZE=36180]="RENDERBUFFER_DEPTH_SIZE",e[e.RENDERBUFFER_STENCIL_SIZE=36181]="RENDERBUFFER_STENCIL_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE=36048]="FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",e[e.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME=36049]="FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",e[e.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL=36050]="FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",e[e.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE=36051]="FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",e[e.COLOR_ATTACHMENT0=36064]="COLOR_ATTACHMENT0",e[e.DEPTH_ATTACHMENT=36096]="DEPTH_ATTACHMENT",e[e.STENCIL_ATTACHMENT=36128]="STENCIL_ATTACHMENT",e[e.DEPTH_STENCIL_ATTACHMENT=33306]="DEPTH_STENCIL_ATTACHMENT",e[e.NONE=0]="NONE",e[e.FRAMEBUFFER_COMPLETE=36053]="FRAMEBUFFER_COMPLETE",e[e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT=36054]="FRAMEBUFFER_INCOMPLETE_ATTACHMENT",e[e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=36055]="FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",e[e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS=36057]="FRAMEBUFFER_INCOMPLETE_DIMENSIONS",e[e.FRAMEBUFFER_UNSUPPORTED=36061]="FRAMEBUFFER_UNSUPPORTED",e[e.FRAMEBUFFER_BINDING=36006]="FRAMEBUFFER_BINDING",e[e.RENDERBUFFER_BINDING=36007]="RENDERBUFFER_BINDING",e[e.READ_FRAMEBUFFER=36008]="READ_FRAMEBUFFER",e[e.DRAW_FRAMEBUFFER=36009]="DRAW_FRAMEBUFFER",e[e.MAX_RENDERBUFFER_SIZE=34024]="MAX_RENDERBUFFER_SIZE",e[e.INVALID_FRAMEBUFFER_OPERATION=1286]="INVALID_FRAMEBUFFER_OPERATION",e[e.UNPACK_FLIP_Y_WEBGL=37440]="UNPACK_FLIP_Y_WEBGL",e[e.UNPACK_PREMULTIPLY_ALPHA_WEBGL=37441]="UNPACK_PREMULTIPLY_ALPHA_WEBGL",e[e.UNPACK_COLORSPACE_CONVERSION_WEBGL=37443]="UNPACK_COLORSPACE_CONVERSION_WEBGL",e[e.READ_BUFFER=3074]="READ_BUFFER",e[e.UNPACK_ROW_LENGTH=3314]="UNPACK_ROW_LENGTH",e[e.UNPACK_SKIP_ROWS=3315]="UNPACK_SKIP_ROWS",e[e.UNPACK_SKIP_PIXELS=3316]="UNPACK_SKIP_PIXELS",e[e.PACK_ROW_LENGTH=3330]="PACK_ROW_LENGTH",e[e.PACK_SKIP_ROWS=3331]="PACK_SKIP_ROWS",e[e.PACK_SKIP_PIXELS=3332]="PACK_SKIP_PIXELS",e[e.TEXTURE_BINDING_3D=32874]="TEXTURE_BINDING_3D",e[e.UNPACK_SKIP_IMAGES=32877]="UNPACK_SKIP_IMAGES",e[e.UNPACK_IMAGE_HEIGHT=32878]="UNPACK_IMAGE_HEIGHT",e[e.MAX_3D_TEXTURE_SIZE=32883]="MAX_3D_TEXTURE_SIZE",e[e.MAX_ELEMENTS_VERTICES=33e3]="MAX_ELEMENTS_VERTICES",e[e.MAX_ELEMENTS_INDICES=33001]="MAX_ELEMENTS_INDICES",e[e.MAX_TEXTURE_LOD_BIAS=34045]="MAX_TEXTURE_LOD_BIAS",e[e.MAX_FRAGMENT_UNIFORM_COMPONENTS=35657]="MAX_FRAGMENT_UNIFORM_COMPONENTS",e[e.MAX_VERTEX_UNIFORM_COMPONENTS=35658]="MAX_VERTEX_UNIFORM_COMPONENTS",e[e.MAX_ARRAY_TEXTURE_LAYERS=35071]="MAX_ARRAY_TEXTURE_LAYERS",e[e.MIN_PROGRAM_TEXEL_OFFSET=35076]="MIN_PROGRAM_TEXEL_OFFSET",e[e.MAX_PROGRAM_TEXEL_OFFSET=35077]="MAX_PROGRAM_TEXEL_OFFSET",e[e.MAX_VARYING_COMPONENTS=35659]="MAX_VARYING_COMPONENTS",e[e.FRAGMENT_SHADER_DERIVATIVE_HINT=35723]="FRAGMENT_SHADER_DERIVATIVE_HINT",e[e.RASTERIZER_DISCARD=35977]="RASTERIZER_DISCARD",e[e.VERTEX_ARRAY_BINDING=34229]="VERTEX_ARRAY_BINDING",e[e.MAX_VERTEX_OUTPUT_COMPONENTS=37154]="MAX_VERTEX_OUTPUT_COMPONENTS",e[e.MAX_FRAGMENT_INPUT_COMPONENTS=37157]="MAX_FRAGMENT_INPUT_COMPONENTS",e[e.MAX_SERVER_WAIT_TIMEOUT=37137]="MAX_SERVER_WAIT_TIMEOUT",e[e.MAX_ELEMENT_INDEX=36203]="MAX_ELEMENT_INDEX",e[e.RED=6403]="RED",e[e.RGB8=32849]="RGB8",e[e.RGBA8=32856]="RGBA8",e[e.RGB10_A2=32857]="RGB10_A2",e[e.TEXTURE_3D=32879]="TEXTURE_3D",e[e.TEXTURE_WRAP_R=32882]="TEXTURE_WRAP_R",e[e.TEXTURE_MIN_LOD=33082]="TEXTURE_MIN_LOD",e[e.TEXTURE_MAX_LOD=33083]="TEXTURE_MAX_LOD",e[e.TEXTURE_BASE_LEVEL=33084]="TEXTURE_BASE_LEVEL",e[e.TEXTURE_MAX_LEVEL=33085]="TEXTURE_MAX_LEVEL",e[e.TEXTURE_COMPARE_MODE=34892]="TEXTURE_COMPARE_MODE",e[e.TEXTURE_COMPARE_FUNC=34893]="TEXTURE_COMPARE_FUNC",e[e.SRGB=35904]="SRGB",e[e.SRGB8=35905]="SRGB8",e[e.SRGB8_ALPHA8=35907]="SRGB8_ALPHA8",e[e.COMPARE_REF_TO_TEXTURE=34894]="COMPARE_REF_TO_TEXTURE",e[e.RGBA32F=34836]="RGBA32F",e[e.RGB32F=34837]="RGB32F",e[e.RGBA16F=34842]="RGBA16F",e[e.RGB16F=34843]="RGB16F",e[e.TEXTURE_2D_ARRAY=35866]="TEXTURE_2D_ARRAY",e[e.TEXTURE_BINDING_2D_ARRAY=35869]="TEXTURE_BINDING_2D_ARRAY",e[e.R11F_G11F_B10F=35898]="R11F_G11F_B10F",e[e.RGB9_E5=35901]="RGB9_E5",e[e.RGBA32UI=36208]="RGBA32UI",e[e.RGB32UI=36209]="RGB32UI",e[e.RGBA16UI=36214]="RGBA16UI",e[e.RGB16UI=36215]="RGB16UI",e[e.RGBA8UI=36220]="RGBA8UI",e[e.RGB8UI=36221]="RGB8UI",e[e.RGBA32I=36226]="RGBA32I",e[e.RGB32I=36227]="RGB32I",e[e.RGBA16I=36232]="RGBA16I",e[e.RGB16I=36233]="RGB16I",e[e.RGBA8I=36238]="RGBA8I",e[e.RGB8I=36239]="RGB8I",e[e.RED_INTEGER=36244]="RED_INTEGER",e[e.RGB_INTEGER=36248]="RGB_INTEGER",e[e.RGBA_INTEGER=36249]="RGBA_INTEGER",e[e.R8=33321]="R8",e[e.RG8=33323]="RG8",e[e.R16F=33325]="R16F",e[e.R32F=33326]="R32F",e[e.RG16F=33327]="RG16F",e[e.RG32F=33328]="RG32F",e[e.R8I=33329]="R8I",e[e.R8UI=33330]="R8UI",e[e.R16I=33331]="R16I",e[e.R16UI=33332]="R16UI",e[e.R32I=33333]="R32I",e[e.R32UI=33334]="R32UI",e[e.RG8I=33335]="RG8I",e[e.RG8UI=33336]="RG8UI",e[e.RG16I=33337]="RG16I",e[e.RG16UI=33338]="RG16UI",e[e.RG32I=33339]="RG32I",e[e.RG32UI=33340]="RG32UI",e[e.R8_SNORM=36756]="R8_SNORM",e[e.RG8_SNORM=36757]="RG8_SNORM",e[e.RGB8_SNORM=36758]="RGB8_SNORM",e[e.RGBA8_SNORM=36759]="RGBA8_SNORM",e[e.RGB10_A2UI=36975]="RGB10_A2UI",e[e.TEXTURE_IMMUTABLE_FORMAT=37167]="TEXTURE_IMMUTABLE_FORMAT",e[e.TEXTURE_IMMUTABLE_LEVELS=33503]="TEXTURE_IMMUTABLE_LEVELS",e[e.UNSIGNED_INT_2_10_10_10_REV=33640]="UNSIGNED_INT_2_10_10_10_REV",e[e.UNSIGNED_INT_10F_11F_11F_REV=35899]="UNSIGNED_INT_10F_11F_11F_REV",e[e.UNSIGNED_INT_5_9_9_9_REV=35902]="UNSIGNED_INT_5_9_9_9_REV",e[e.FLOAT_32_UNSIGNED_INT_24_8_REV=36269]="FLOAT_32_UNSIGNED_INT_24_8_REV",e[e.UNSIGNED_INT_24_8=34042]="UNSIGNED_INT_24_8",e[e.HALF_FLOAT=5131]="HALF_FLOAT",e[e.RG=33319]="RG",e[e.RG_INTEGER=33320]="RG_INTEGER",e[e.INT_2_10_10_10_REV=36255]="INT_2_10_10_10_REV",e[e.CURRENT_QUERY=34917]="CURRENT_QUERY",e[e.QUERY_RESULT=34918]="QUERY_RESULT",e[e.QUERY_RESULT_AVAILABLE=34919]="QUERY_RESULT_AVAILABLE",e[e.ANY_SAMPLES_PASSED=35887]="ANY_SAMPLES_PASSED",e[e.ANY_SAMPLES_PASSED_CONSERVATIVE=36202]="ANY_SAMPLES_PASSED_CONSERVATIVE",e[e.MAX_DRAW_BUFFERS=34852]="MAX_DRAW_BUFFERS",e[e.DRAW_BUFFER0=34853]="DRAW_BUFFER0",e[e.DRAW_BUFFER1=34854]="DRAW_BUFFER1",e[e.DRAW_BUFFER2=34855]="DRAW_BUFFER2",e[e.DRAW_BUFFER3=34856]="DRAW_BUFFER3",e[e.DRAW_BUFFER4=34857]="DRAW_BUFFER4",e[e.DRAW_BUFFER5=34858]="DRAW_BUFFER5",e[e.DRAW_BUFFER6=34859]="DRAW_BUFFER6",e[e.DRAW_BUFFER7=34860]="DRAW_BUFFER7",e[e.DRAW_BUFFER8=34861]="DRAW_BUFFER8",e[e.DRAW_BUFFER9=34862]="DRAW_BUFFER9",e[e.DRAW_BUFFER10=34863]="DRAW_BUFFER10",e[e.DRAW_BUFFER11=34864]="DRAW_BUFFER11",e[e.DRAW_BUFFER12=34865]="DRAW_BUFFER12",e[e.DRAW_BUFFER13=34866]="DRAW_BUFFER13",e[e.DRAW_BUFFER14=34867]="DRAW_BUFFER14",e[e.DRAW_BUFFER15=34868]="DRAW_BUFFER15",e[e.MAX_COLOR_ATTACHMENTS=36063]="MAX_COLOR_ATTACHMENTS",e[e.COLOR_ATTACHMENT1=36065]="COLOR_ATTACHMENT1",e[e.COLOR_ATTACHMENT2=36066]="COLOR_ATTACHMENT2",e[e.COLOR_ATTACHMENT3=36067]="COLOR_ATTACHMENT3",e[e.COLOR_ATTACHMENT4=36068]="COLOR_ATTACHMENT4",e[e.COLOR_ATTACHMENT5=36069]="COLOR_ATTACHMENT5",e[e.COLOR_ATTACHMENT6=36070]="COLOR_ATTACHMENT6",e[e.COLOR_ATTACHMENT7=36071]="COLOR_ATTACHMENT7",e[e.COLOR_ATTACHMENT8=36072]="COLOR_ATTACHMENT8",e[e.COLOR_ATTACHMENT9=36073]="COLOR_ATTACHMENT9",e[e.COLOR_ATTACHMENT10=36074]="COLOR_ATTACHMENT10",e[e.COLOR_ATTACHMENT11=36075]="COLOR_ATTACHMENT11",e[e.COLOR_ATTACHMENT12=36076]="COLOR_ATTACHMENT12",e[e.COLOR_ATTACHMENT13=36077]="COLOR_ATTACHMENT13",e[e.COLOR_ATTACHMENT14=36078]="COLOR_ATTACHMENT14",e[e.COLOR_ATTACHMENT15=36079]="COLOR_ATTACHMENT15",e[e.SAMPLER_3D=35679]="SAMPLER_3D",e[e.SAMPLER_2D_SHADOW=35682]="SAMPLER_2D_SHADOW",e[e.SAMPLER_2D_ARRAY=36289]="SAMPLER_2D_ARRAY",e[e.SAMPLER_2D_ARRAY_SHADOW=36292]="SAMPLER_2D_ARRAY_SHADOW",e[e.SAMPLER_CUBE_SHADOW=36293]="SAMPLER_CUBE_SHADOW",e[e.INT_SAMPLER_2D=36298]="INT_SAMPLER_2D",e[e.INT_SAMPLER_3D=36299]="INT_SAMPLER_3D",e[e.INT_SAMPLER_CUBE=36300]="INT_SAMPLER_CUBE",e[e.INT_SAMPLER_2D_ARRAY=36303]="INT_SAMPLER_2D_ARRAY",e[e.UNSIGNED_INT_SAMPLER_2D=36306]="UNSIGNED_INT_SAMPLER_2D",e[e.UNSIGNED_INT_SAMPLER_3D=36307]="UNSIGNED_INT_SAMPLER_3D",e[e.UNSIGNED_INT_SAMPLER_CUBE=36308]="UNSIGNED_INT_SAMPLER_CUBE",e[e.UNSIGNED_INT_SAMPLER_2D_ARRAY=36311]="UNSIGNED_INT_SAMPLER_2D_ARRAY",e[e.MAX_SAMPLES=36183]="MAX_SAMPLES",e[e.SAMPLER_BINDING=35097]="SAMPLER_BINDING",e[e.PIXEL_PACK_BUFFER=35051]="PIXEL_PACK_BUFFER",e[e.PIXEL_UNPACK_BUFFER=35052]="PIXEL_UNPACK_BUFFER",e[e.PIXEL_PACK_BUFFER_BINDING=35053]="PIXEL_PACK_BUFFER_BINDING",e[e.PIXEL_UNPACK_BUFFER_BINDING=35055]="PIXEL_UNPACK_BUFFER_BINDING",e[e.COPY_READ_BUFFER=36662]="COPY_READ_BUFFER",e[e.COPY_WRITE_BUFFER=36663]="COPY_WRITE_BUFFER",e[e.COPY_READ_BUFFER_BINDING=36662]="COPY_READ_BUFFER_BINDING",e[e.COPY_WRITE_BUFFER_BINDING=36663]="COPY_WRITE_BUFFER_BINDING",e[e.FLOAT_MAT2x3=35685]="FLOAT_MAT2x3",e[e.FLOAT_MAT2x4=35686]="FLOAT_MAT2x4",e[e.FLOAT_MAT3x2=35687]="FLOAT_MAT3x2",e[e.FLOAT_MAT3x4=35688]="FLOAT_MAT3x4",e[e.FLOAT_MAT4x2=35689]="FLOAT_MAT4x2",e[e.FLOAT_MAT4x3=35690]="FLOAT_MAT4x3",e[e.UNSIGNED_INT_VEC2=36294]="UNSIGNED_INT_VEC2",e[e.UNSIGNED_INT_VEC3=36295]="UNSIGNED_INT_VEC3",e[e.UNSIGNED_INT_VEC4=36296]="UNSIGNED_INT_VEC4",e[e.UNSIGNED_NORMALIZED=35863]="UNSIGNED_NORMALIZED",e[e.SIGNED_NORMALIZED=36764]="SIGNED_NORMALIZED",e[e.VERTEX_ATTRIB_ARRAY_INTEGER=35069]="VERTEX_ATTRIB_ARRAY_INTEGER",e[e.VERTEX_ATTRIB_ARRAY_DIVISOR=35070]="VERTEX_ATTRIB_ARRAY_DIVISOR",e[e.TRANSFORM_FEEDBACK_BUFFER_MODE=35967]="TRANSFORM_FEEDBACK_BUFFER_MODE",e[e.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS=35968]="MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS",e[e.TRANSFORM_FEEDBACK_VARYINGS=35971]="TRANSFORM_FEEDBACK_VARYINGS",e[e.TRANSFORM_FEEDBACK_BUFFER_START=35972]="TRANSFORM_FEEDBACK_BUFFER_START",e[e.TRANSFORM_FEEDBACK_BUFFER_SIZE=35973]="TRANSFORM_FEEDBACK_BUFFER_SIZE",e[e.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN=35976]="TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN",e[e.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS=35978]="MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS",e[e.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS=35979]="MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS",e[e.INTERLEAVED_ATTRIBS=35980]="INTERLEAVED_ATTRIBS",e[e.SEPARATE_ATTRIBS=35981]="SEPARATE_ATTRIBS",e[e.TRANSFORM_FEEDBACK_BUFFER=35982]="TRANSFORM_FEEDBACK_BUFFER",e[e.TRANSFORM_FEEDBACK_BUFFER_BINDING=35983]="TRANSFORM_FEEDBACK_BUFFER_BINDING",e[e.TRANSFORM_FEEDBACK=36386]="TRANSFORM_FEEDBACK",e[e.TRANSFORM_FEEDBACK_PAUSED=36387]="TRANSFORM_FEEDBACK_PAUSED",e[e.TRANSFORM_FEEDBACK_ACTIVE=36388]="TRANSFORM_FEEDBACK_ACTIVE",e[e.TRANSFORM_FEEDBACK_BINDING=36389]="TRANSFORM_FEEDBACK_BINDING",e[e.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING=33296]="FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING",e[e.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE=33297]="FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE",e[e.FRAMEBUFFER_ATTACHMENT_RED_SIZE=33298]="FRAMEBUFFER_ATTACHMENT_RED_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE=33299]="FRAMEBUFFER_ATTACHMENT_GREEN_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE=33300]="FRAMEBUFFER_ATTACHMENT_BLUE_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE=33301]="FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE=33302]="FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE=33303]="FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE",e[e.FRAMEBUFFER_DEFAULT=33304]="FRAMEBUFFER_DEFAULT",e[e.DEPTH24_STENCIL8=35056]="DEPTH24_STENCIL8",e[e.DRAW_FRAMEBUFFER_BINDING=36006]="DRAW_FRAMEBUFFER_BINDING",e[e.READ_FRAMEBUFFER_BINDING=36010]="READ_FRAMEBUFFER_BINDING",e[e.RENDERBUFFER_SAMPLES=36011]="RENDERBUFFER_SAMPLES",e[e.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER=36052]="FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER",e[e.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE=36182]="FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",e[e.UNIFORM_BUFFER=35345]="UNIFORM_BUFFER",e[e.UNIFORM_BUFFER_BINDING=35368]="UNIFORM_BUFFER_BINDING",e[e.UNIFORM_BUFFER_START=35369]="UNIFORM_BUFFER_START",e[e.UNIFORM_BUFFER_SIZE=35370]="UNIFORM_BUFFER_SIZE",e[e.MAX_VERTEX_UNIFORM_BLOCKS=35371]="MAX_VERTEX_UNIFORM_BLOCKS",e[e.MAX_FRAGMENT_UNIFORM_BLOCKS=35373]="MAX_FRAGMENT_UNIFORM_BLOCKS",e[e.MAX_COMBINED_UNIFORM_BLOCKS=35374]="MAX_COMBINED_UNIFORM_BLOCKS",e[e.MAX_UNIFORM_BUFFER_BINDINGS=35375]="MAX_UNIFORM_BUFFER_BINDINGS",e[e.MAX_UNIFORM_BLOCK_SIZE=35376]="MAX_UNIFORM_BLOCK_SIZE",e[e.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS=35377]="MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS",e[e.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS=35379]="MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS",e[e.UNIFORM_BUFFER_OFFSET_ALIGNMENT=35380]="UNIFORM_BUFFER_OFFSET_ALIGNMENT",e[e.ACTIVE_UNIFORM_BLOCKS=35382]="ACTIVE_UNIFORM_BLOCKS",e[e.UNIFORM_TYPE=35383]="UNIFORM_TYPE",e[e.UNIFORM_SIZE=35384]="UNIFORM_SIZE",e[e.UNIFORM_BLOCK_INDEX=35386]="UNIFORM_BLOCK_INDEX",e[e.UNIFORM_OFFSET=35387]="UNIFORM_OFFSET",e[e.UNIFORM_ARRAY_STRIDE=35388]="UNIFORM_ARRAY_STRIDE",e[e.UNIFORM_MATRIX_STRIDE=35389]="UNIFORM_MATRIX_STRIDE",e[e.UNIFORM_IS_ROW_MAJOR=35390]="UNIFORM_IS_ROW_MAJOR",e[e.UNIFORM_BLOCK_BINDING=35391]="UNIFORM_BLOCK_BINDING",e[e.UNIFORM_BLOCK_DATA_SIZE=35392]="UNIFORM_BLOCK_DATA_SIZE",e[e.UNIFORM_BLOCK_ACTIVE_UNIFORMS=35394]="UNIFORM_BLOCK_ACTIVE_UNIFORMS",e[e.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES=35395]="UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES",e[e.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER=35396]="UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER",e[e.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER=35398]="UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER",e[e.OBJECT_TYPE=37138]="OBJECT_TYPE",e[e.SYNC_CONDITION=37139]="SYNC_CONDITION",e[e.SYNC_STATUS=37140]="SYNC_STATUS",e[e.SYNC_FLAGS=37141]="SYNC_FLAGS",e[e.SYNC_FENCE=37142]="SYNC_FENCE",e[e.SYNC_GPU_COMMANDS_COMPLETE=37143]="SYNC_GPU_COMMANDS_COMPLETE",e[e.UNSIGNALED=37144]="UNSIGNALED",e[e.SIGNALED=37145]="SIGNALED",e[e.ALREADY_SIGNALED=37146]="ALREADY_SIGNALED",e[e.TIMEOUT_EXPIRED=37147]="TIMEOUT_EXPIRED",e[e.CONDITION_SATISFIED=37148]="CONDITION_SATISFIED",e[e.WAIT_FAILED=37149]="WAIT_FAILED",e[e.SYNC_FLUSH_COMMANDS_BIT=1]="SYNC_FLUSH_COMMANDS_BIT",e[e.COLOR=6144]="COLOR",e[e.DEPTH=6145]="DEPTH",e[e.STENCIL=6146]="STENCIL",e[e.MIN=32775]="MIN",e[e.MAX=32776]="MAX",e[e.DEPTH_COMPONENT24=33190]="DEPTH_COMPONENT24",e[e.STREAM_READ=35041]="STREAM_READ",e[e.STREAM_COPY=35042]="STREAM_COPY",e[e.STATIC_READ=35045]="STATIC_READ",e[e.STATIC_COPY=35046]="STATIC_COPY",e[e.DYNAMIC_READ=35049]="DYNAMIC_READ",e[e.DYNAMIC_COPY=35050]="DYNAMIC_COPY",e[e.DEPTH_COMPONENT32F=36012]="DEPTH_COMPONENT32F",e[e.DEPTH32F_STENCIL8=36013]="DEPTH32F_STENCIL8",e[e.INVALID_INDEX=4294967295]="INVALID_INDEX",e[e.TIMEOUT_IGNORED=-1]="TIMEOUT_IGNORED",e[e.MAX_CLIENT_WAIT_TIMEOUT_WEBGL=37447]="MAX_CLIENT_WAIT_TIMEOUT_WEBGL",e[e.UNMASKED_VENDOR_WEBGL=37445]="UNMASKED_VENDOR_WEBGL",e[e.UNMASKED_RENDERER_WEBGL=37446]="UNMASKED_RENDERER_WEBGL",e[e.MAX_TEXTURE_MAX_ANISOTROPY_EXT=34047]="MAX_TEXTURE_MAX_ANISOTROPY_EXT",e[e.TEXTURE_MAX_ANISOTROPY_EXT=34046]="TEXTURE_MAX_ANISOTROPY_EXT",e[e.R16_EXT=33322]="R16_EXT",e[e.RG16_EXT=33324]="RG16_EXT",e[e.RGB16_EXT=32852]="RGB16_EXT",e[e.RGBA16_EXT=32859]="RGBA16_EXT",e[e.R16_SNORM_EXT=36760]="R16_SNORM_EXT",e[e.RG16_SNORM_EXT=36761]="RG16_SNORM_EXT",e[e.RGB16_SNORM_EXT=36762]="RGB16_SNORM_EXT",e[e.RGBA16_SNORM_EXT=36763]="RGBA16_SNORM_EXT",e[e.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777]="COMPRESSED_RGBA_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778]="COMPRESSED_RGBA_S3TC_DXT3_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",e[e.COMPRESSED_SRGB_S3TC_DXT1_EXT=35916]="COMPRESSED_SRGB_S3TC_DXT1_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT=35917]="COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT=35918]="COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT=35919]="COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT",e[e.COMPRESSED_RED_RGTC1_EXT=36283]="COMPRESSED_RED_RGTC1_EXT",e[e.COMPRESSED_SIGNED_RED_RGTC1_EXT=36284]="COMPRESSED_SIGNED_RED_RGTC1_EXT",e[e.COMPRESSED_RED_GREEN_RGTC2_EXT=36285]="COMPRESSED_RED_GREEN_RGTC2_EXT",e[e.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT=36286]="COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT",e[e.COMPRESSED_RGBA_BPTC_UNORM_EXT=36492]="COMPRESSED_RGBA_BPTC_UNORM_EXT",e[e.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT=36493]="COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT",e[e.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT=36494]="COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT",e[e.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT=36495]="COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT",e[e.COMPRESSED_R11_EAC=37488]="COMPRESSED_R11_EAC",e[e.COMPRESSED_SIGNED_R11_EAC=37489]="COMPRESSED_SIGNED_R11_EAC",e[e.COMPRESSED_RG11_EAC=37490]="COMPRESSED_RG11_EAC",e[e.COMPRESSED_SIGNED_RG11_EAC=37491]="COMPRESSED_SIGNED_RG11_EAC",e[e.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",e[e.COMPRESSED_RGBA8_ETC2_EAC=37493]="COMPRESSED_RGBA8_ETC2_EAC",e[e.COMPRESSED_SRGB8_ETC2=37494]="COMPRESSED_SRGB8_ETC2",e[e.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37495]="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC",e[e.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37496]="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37497]="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",e[e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",e[e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG=35841]="COMPRESSED_RGB_PVRTC_2BPPV1_IMG",e[e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG=35843]="COMPRESSED_RGBA_PVRTC_2BPPV1_IMG",e[e.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",e[e.COMPRESSED_RGB_ATC_WEBGL=35986]="COMPRESSED_RGB_ATC_WEBGL",e[e.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL=35986]="COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL",e[e.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL=34798]="COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL",e[e.COMPRESSED_RGBA_ASTC_4x4_KHR=37808]="COMPRESSED_RGBA_ASTC_4x4_KHR",e[e.COMPRESSED_RGBA_ASTC_5x4_KHR=37809]="COMPRESSED_RGBA_ASTC_5x4_KHR",e[e.COMPRESSED_RGBA_ASTC_5x5_KHR=37810]="COMPRESSED_RGBA_ASTC_5x5_KHR",e[e.COMPRESSED_RGBA_ASTC_6x5_KHR=37811]="COMPRESSED_RGBA_ASTC_6x5_KHR",e[e.COMPRESSED_RGBA_ASTC_6x6_KHR=37812]="COMPRESSED_RGBA_ASTC_6x6_KHR",e[e.COMPRESSED_RGBA_ASTC_8x5_KHR=37813]="COMPRESSED_RGBA_ASTC_8x5_KHR",e[e.COMPRESSED_RGBA_ASTC_8x6_KHR=37814]="COMPRESSED_RGBA_ASTC_8x6_KHR",e[e.COMPRESSED_RGBA_ASTC_8x8_KHR=37815]="COMPRESSED_RGBA_ASTC_8x8_KHR",e[e.COMPRESSED_RGBA_ASTC_10x5_KHR=37816]="COMPRESSED_RGBA_ASTC_10x5_KHR",e[e.COMPRESSED_RGBA_ASTC_10x6_KHR=37817]="COMPRESSED_RGBA_ASTC_10x6_KHR",e[e.COMPRESSED_RGBA_ASTC_10x8_KHR=37818]="COMPRESSED_RGBA_ASTC_10x8_KHR",e[e.COMPRESSED_RGBA_ASTC_10x10_KHR=37819]="COMPRESSED_RGBA_ASTC_10x10_KHR",e[e.COMPRESSED_RGBA_ASTC_12x10_KHR=37820]="COMPRESSED_RGBA_ASTC_12x10_KHR",e[e.COMPRESSED_RGBA_ASTC_12x12_KHR=37821]="COMPRESSED_RGBA_ASTC_12x12_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR=37840]="COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR=37841]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR=37842]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR=37843]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR=37844]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR=37845]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR=37846]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR=37847]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR=37848]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR=37849]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR=37850]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR=37851]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR=37852]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR=37853]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR",e[e.QUERY_COUNTER_BITS_EXT=34916]="QUERY_COUNTER_BITS_EXT",e[e.CURRENT_QUERY_EXT=34917]="CURRENT_QUERY_EXT",e[e.QUERY_RESULT_EXT=34918]="QUERY_RESULT_EXT",e[e.QUERY_RESULT_AVAILABLE_EXT=34919]="QUERY_RESULT_AVAILABLE_EXT",e[e.TIME_ELAPSED_EXT=35007]="TIME_ELAPSED_EXT",e[e.TIMESTAMP_EXT=36392]="TIMESTAMP_EXT",e[e.GPU_DISJOINT_EXT=36795]="GPU_DISJOINT_EXT",e[e.COMPLETION_STATUS_KHR=37297]="COMPLETION_STATUS_KHR",e[e.DEPTH_CLAMP_EXT=34383]="DEPTH_CLAMP_EXT",e[e.FIRST_VERTEX_CONVENTION_WEBGL=36429]="FIRST_VERTEX_CONVENTION_WEBGL",e[e.LAST_VERTEX_CONVENTION_WEBGL=36430]="LAST_VERTEX_CONVENTION_WEBGL",e[e.PROVOKING_VERTEX_WEBL=36431]="PROVOKING_VERTEX_WEBL",e[e.POLYGON_MODE_WEBGL=2880]="POLYGON_MODE_WEBGL",e[e.POLYGON_OFFSET_LINE_WEBGL=10754]="POLYGON_OFFSET_LINE_WEBGL",e[e.LINE_WEBGL=6913]="LINE_WEBGL",e[e.FILL_WEBGL=6914]="FILL_WEBGL",e[e.MAX_CLIP_DISTANCES_WEBGL=3378]="MAX_CLIP_DISTANCES_WEBGL",e[e.MAX_CULL_DISTANCES_WEBGL=33529]="MAX_CULL_DISTANCES_WEBGL",e[e.MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL=33530]="MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL",e[e.CLIP_DISTANCE0_WEBGL=12288]="CLIP_DISTANCE0_WEBGL",e[e.CLIP_DISTANCE1_WEBGL=12289]="CLIP_DISTANCE1_WEBGL",e[e.CLIP_DISTANCE2_WEBGL=12290]="CLIP_DISTANCE2_WEBGL",e[e.CLIP_DISTANCE3_WEBGL=12291]="CLIP_DISTANCE3_WEBGL",e[e.CLIP_DISTANCE4_WEBGL=12292]="CLIP_DISTANCE4_WEBGL",e[e.CLIP_DISTANCE5_WEBGL=12293]="CLIP_DISTANCE5_WEBGL",e[e.CLIP_DISTANCE6_WEBGL=12294]="CLIP_DISTANCE6_WEBGL",e[e.CLIP_DISTANCE7_WEBGL=12295]="CLIP_DISTANCE7_WEBGL",e[e.POLYGON_OFFSET_CLAMP_EXT=36379]="POLYGON_OFFSET_CLAMP_EXT",e[e.LOWER_LEFT_EXT=36001]="LOWER_LEFT_EXT",e[e.UPPER_LEFT_EXT=36002]="UPPER_LEFT_EXT",e[e.NEGATIVE_ONE_TO_ONE_EXT=37726]="NEGATIVE_ONE_TO_ONE_EXT",e[e.ZERO_TO_ONE_EXT=37727]="ZERO_TO_ONE_EXT",e[e.CLIP_ORIGIN_EXT=37724]="CLIP_ORIGIN_EXT",e[e.CLIP_DEPTH_MODE_EXT=37725]="CLIP_DEPTH_MODE_EXT",e[e.SRC1_COLOR_WEBGL=35065]="SRC1_COLOR_WEBGL",e[e.SRC1_ALPHA_WEBGL=34185]="SRC1_ALPHA_WEBGL",e[e.ONE_MINUS_SRC1_COLOR_WEBGL=35066]="ONE_MINUS_SRC1_COLOR_WEBGL",e[e.ONE_MINUS_SRC1_ALPHA_WEBGL=35067]="ONE_MINUS_SRC1_ALPHA_WEBGL",e[e.MAX_DUAL_SOURCE_DRAW_BUFFERS_WEBGL=35068]="MAX_DUAL_SOURCE_DRAW_BUFFERS_WEBGL",e[e.MIRROR_CLAMP_TO_EDGE_EXT=34627]="MIRROR_CLAMP_TO_EDGE_EXT",e}(F||{});const D={[F.BLEND]:!1,[F.BLEND_COLOR]:new Float32Array([0,0,0,0]),[F.BLEND_EQUATION_RGB]:F.FUNC_ADD,[F.BLEND_EQUATION_ALPHA]:F.FUNC_ADD,[F.BLEND_SRC_RGB]:F.ONE,[F.BLEND_DST_RGB]:F.ZERO,[F.BLEND_SRC_ALPHA]:F.ONE,[F.BLEND_DST_ALPHA]:F.ZERO,[F.COLOR_CLEAR_VALUE]:new Float32Array([0,0,0,0]),[F.COLOR_WRITEMASK]:[!0,!0,!0,!0],[F.CULL_FACE]:!1,[F.CULL_FACE_MODE]:F.BACK,[F.DEPTH_TEST]:!1,[F.DEPTH_CLEAR_VALUE]:1,[F.DEPTH_FUNC]:F.LESS,[F.DEPTH_RANGE]:new Float32Array([0,1]),[F.DEPTH_WRITEMASK]:!0,[F.DITHER]:!0,[F.CURRENT_PROGRAM]:null,[F.FRAMEBUFFER_BINDING]:null,[F.RENDERBUFFER_BINDING]:null,[F.VERTEX_ARRAY_BINDING]:null,[F.ARRAY_BUFFER_BINDING]:null,[F.FRONT_FACE]:F.CCW,[F.GENERATE_MIPMAP_HINT]:F.DONT_CARE,[F.LINE_WIDTH]:1,[F.POLYGON_OFFSET_FILL]:!1,[F.POLYGON_OFFSET_FACTOR]:0,[F.POLYGON_OFFSET_UNITS]:0,[F.SAMPLE_ALPHA_TO_COVERAGE]:!1,[F.SAMPLE_COVERAGE]:!1,[F.SAMPLE_COVERAGE_VALUE]:1,[F.SAMPLE_COVERAGE_INVERT]:!1,[F.SCISSOR_TEST]:!1,[F.SCISSOR_BOX]:new Int32Array([0,0,1024,1024]),[F.STENCIL_TEST]:!1,[F.STENCIL_CLEAR_VALUE]:0,[F.STENCIL_WRITEMASK]:4294967295,[F.STENCIL_BACK_WRITEMASK]:4294967295,[F.STENCIL_FUNC]:F.ALWAYS,[F.STENCIL_REF]:0,[F.STENCIL_VALUE_MASK]:4294967295,[F.STENCIL_BACK_FUNC]:F.ALWAYS,[F.STENCIL_BACK_REF]:0,[F.STENCIL_BACK_VALUE_MASK]:4294967295,[F.STENCIL_FAIL]:F.KEEP,[F.STENCIL_PASS_DEPTH_FAIL]:F.KEEP,[F.STENCIL_PASS_DEPTH_PASS]:F.KEEP,[F.STENCIL_BACK_FAIL]:F.KEEP,[F.STENCIL_BACK_PASS_DEPTH_FAIL]:F.KEEP,[F.STENCIL_BACK_PASS_DEPTH_PASS]:F.KEEP,[F.VIEWPORT]:[0,0,1024,1024],[F.TRANSFORM_FEEDBACK_BINDING]:null,[F.COPY_READ_BUFFER_BINDING]:null,[F.COPY_WRITE_BUFFER_BINDING]:null,[F.PIXEL_PACK_BUFFER_BINDING]:null,[F.PIXEL_UNPACK_BUFFER_BINDING]:null,[F.FRAGMENT_SHADER_DERIVATIVE_HINT]:F.DONT_CARE,[F.READ_FRAMEBUFFER_BINDING]:null,[F.RASTERIZER_DISCARD]:!1,[F.PACK_ALIGNMENT]:4,[F.UNPACK_ALIGNMENT]:4,[F.UNPACK_FLIP_Y_WEBGL]:!1,[F.UNPACK_PREMULTIPLY_ALPHA_WEBGL]:!1,[F.UNPACK_COLORSPACE_CONVERSION_WEBGL]:F.BROWSER_DEFAULT_WEBGL,[F.PACK_ROW_LENGTH]:0,[F.PACK_SKIP_PIXELS]:0,[F.PACK_SKIP_ROWS]:0,[F.UNPACK_ROW_LENGTH]:0,[F.UNPACK_IMAGE_HEIGHT]:0,[F.UNPACK_SKIP_PIXELS]:0,[F.UNPACK_SKIP_ROWS]:0,[F.UNPACK_SKIP_IMAGES]:0},B=(e,t,n)=>t?e.enable(n):e.disable(n),U=(e,t,n)=>e.hint(n,t),G=(e,t,n)=>e.pixelStorei(n,t),k=(e,t,n)=>{const i=n===F.FRAMEBUFFER_BINDING?F.DRAW_FRAMEBUFFER:F.READ_FRAMEBUFFER;return e.bindFramebuffer(i,t)},H=(e,t,n)=>{const i={[F.ARRAY_BUFFER_BINDING]:F.ARRAY_BUFFER,[F.COPY_READ_BUFFER_BINDING]:F.COPY_READ_BUFFER,[F.COPY_WRITE_BUFFER_BINDING]:F.COPY_WRITE_BUFFER,[F.PIXEL_PACK_BUFFER_BINDING]:F.PIXEL_PACK_BUFFER,[F.PIXEL_UNPACK_BUFFER_BINDING]:F.PIXEL_UNPACK_BUFFER}[n];e.bindBuffer(i,t)};function V(e){return Array.isArray(e)||ArrayBuffer.isView(e)&&!(e instanceof DataView)}const X={[F.BLEND]:B,[F.BLEND_COLOR]:(e,t)=>e.blendColor(...t),[F.BLEND_EQUATION_RGB]:"blendEquation",[F.BLEND_EQUATION_ALPHA]:"blendEquation",[F.BLEND_SRC_RGB]:"blendFunc",[F.BLEND_DST_RGB]:"blendFunc",[F.BLEND_SRC_ALPHA]:"blendFunc",[F.BLEND_DST_ALPHA]:"blendFunc",[F.COLOR_CLEAR_VALUE]:(e,t)=>e.clearColor(...t),[F.COLOR_WRITEMASK]:(e,t)=>e.colorMask(...t),[F.CULL_FACE]:B,[F.CULL_FACE_MODE]:(e,t)=>e.cullFace(t),[F.DEPTH_TEST]:B,[F.DEPTH_CLEAR_VALUE]:(e,t)=>e.clearDepth(t),[F.DEPTH_FUNC]:(e,t)=>e.depthFunc(t),[F.DEPTH_RANGE]:(e,t)=>e.depthRange(...t),[F.DEPTH_WRITEMASK]:(e,t)=>e.depthMask(t),[F.DITHER]:B,[F.FRAGMENT_SHADER_DERIVATIVE_HINT]:U,[F.CURRENT_PROGRAM]:(e,t)=>e.useProgram(t),[F.RENDERBUFFER_BINDING]:(e,t)=>e.bindRenderbuffer(F.RENDERBUFFER,t),[F.TRANSFORM_FEEDBACK_BINDING]:(e,t)=>null==e.bindTransformFeedback?void 0:e.bindTransformFeedback(F.TRANSFORM_FEEDBACK,t),[F.VERTEX_ARRAY_BINDING]:(e,t)=>e.bindVertexArray(t),[F.FRAMEBUFFER_BINDING]:k,[F.READ_FRAMEBUFFER_BINDING]:k,[F.ARRAY_BUFFER_BINDING]:H,[F.COPY_READ_BUFFER_BINDING]:H,[F.COPY_WRITE_BUFFER_BINDING]:H,[F.PIXEL_PACK_BUFFER_BINDING]:H,[F.PIXEL_UNPACK_BUFFER_BINDING]:H,[F.FRONT_FACE]:(e,t)=>e.frontFace(t),[F.GENERATE_MIPMAP_HINT]:U,[F.LINE_WIDTH]:(e,t)=>e.lineWidth(t),[F.POLYGON_OFFSET_FILL]:B,[F.POLYGON_OFFSET_FACTOR]:"polygonOffset",[F.POLYGON_OFFSET_UNITS]:"polygonOffset",[F.RASTERIZER_DISCARD]:B,[F.SAMPLE_ALPHA_TO_COVERAGE]:B,[F.SAMPLE_COVERAGE]:B,[F.SAMPLE_COVERAGE_VALUE]:"sampleCoverage",[F.SAMPLE_COVERAGE_INVERT]:"sampleCoverage",[F.SCISSOR_TEST]:B,[F.SCISSOR_BOX]:(e,t)=>e.scissor(...t),[F.STENCIL_TEST]:B,[F.STENCIL_CLEAR_VALUE]:(e,t)=>e.clearStencil(t),[F.STENCIL_WRITEMASK]:(e,t)=>e.stencilMaskSeparate(F.FRONT,t),[F.STENCIL_BACK_WRITEMASK]:(e,t)=>e.stencilMaskSeparate(F.BACK,t),[F.STENCIL_FUNC]:"stencilFuncFront",[F.STENCIL_REF]:"stencilFuncFront",[F.STENCIL_VALUE_MASK]:"stencilFuncFront",[F.STENCIL_BACK_FUNC]:"stencilFuncBack",[F.STENCIL_BACK_REF]:"stencilFuncBack",[F.STENCIL_BACK_VALUE_MASK]:"stencilFuncBack",[F.STENCIL_FAIL]:"stencilOpFront",[F.STENCIL_PASS_DEPTH_FAIL]:"stencilOpFront",[F.STENCIL_PASS_DEPTH_PASS]:"stencilOpFront",[F.STENCIL_BACK_FAIL]:"stencilOpBack",[F.STENCIL_BACK_PASS_DEPTH_FAIL]:"stencilOpBack",[F.STENCIL_BACK_PASS_DEPTH_PASS]:"stencilOpBack",[F.VIEWPORT]:(e,t)=>e.viewport(...t),[F.DEPTH_CLAMP_EXT]:B,[F.POLYGON_OFFSET_LINE_WEBGL]:B,[F.CLIP_DISTANCE0_WEBGL]:B,[F.CLIP_DISTANCE1_WEBGL]:B,[F.CLIP_DISTANCE2_WEBGL]:B,[F.CLIP_DISTANCE3_WEBGL]:B,[F.CLIP_DISTANCE4_WEBGL]:B,[F.CLIP_DISTANCE5_WEBGL]:B,[F.CLIP_DISTANCE6_WEBGL]:B,[F.CLIP_DISTANCE7_WEBGL]:B,[F.PACK_ALIGNMENT]:G,[F.UNPACK_ALIGNMENT]:G,[F.UNPACK_FLIP_Y_WEBGL]:G,[F.UNPACK_PREMULTIPLY_ALPHA_WEBGL]:G,[F.UNPACK_COLORSPACE_CONVERSION_WEBGL]:G,[F.PACK_ROW_LENGTH]:G,[F.PACK_SKIP_PIXELS]:G,[F.PACK_SKIP_ROWS]:G,[F.UNPACK_ROW_LENGTH]:G,[F.UNPACK_IMAGE_HEIGHT]:G,[F.UNPACK_SKIP_PIXELS]:G,[F.UNPACK_SKIP_ROWS]:G,[F.UNPACK_SKIP_IMAGES]:G,framebuffer:(e,t)=>{const n=t&&"handle"in t?t.handle:t;return e.bindFramebuffer(F.FRAMEBUFFER,n)},blend:(e,t)=>t?e.enable(F.BLEND):e.disable(F.BLEND),blendColor:(e,t)=>e.blendColor(...t),blendEquation:(e,t)=>{const n="number"==typeof t?[t,t]:t;e.blendEquationSeparate(...n)},blendFunc:(e,t)=>{const n=2===(null==t?void 0:t.length)?[...t,...t]:t;e.blendFuncSeparate(...n)},clearColor:(e,t)=>e.clearColor(...t),clearDepth:(e,t)=>e.clearDepth(t),clearStencil:(e,t)=>e.clearStencil(t),colorMask:(e,t)=>e.colorMask(...t),cull:(e,t)=>t?e.enable(F.CULL_FACE):e.disable(F.CULL_FACE),cullFace:(e,t)=>e.cullFace(t),depthTest:(e,t)=>t?e.enable(F.DEPTH_TEST):e.disable(F.DEPTH_TEST),depthFunc:(e,t)=>e.depthFunc(t),depthMask:(e,t)=>e.depthMask(t),depthRange:(e,t)=>e.depthRange(...t),dither:(e,t)=>t?e.enable(F.DITHER):e.disable(F.DITHER),derivativeHint:(e,t)=>{e.hint(F.FRAGMENT_SHADER_DERIVATIVE_HINT,t)},frontFace:(e,t)=>e.frontFace(t),mipmapHint:(e,t)=>e.hint(F.GENERATE_MIPMAP_HINT,t),lineWidth:(e,t)=>e.lineWidth(t),polygonOffsetFill:(e,t)=>t?e.enable(F.POLYGON_OFFSET_FILL):e.disable(F.POLYGON_OFFSET_FILL),polygonOffset:(e,t)=>e.polygonOffset(...t),sampleCoverage:(e,t)=>e.sampleCoverage(...t),scissorTest:(e,t)=>t?e.enable(F.SCISSOR_TEST):e.disable(F.SCISSOR_TEST),scissor:(e,t)=>e.scissor(...t),stencilTest:(e,t)=>t?e.enable(F.STENCIL_TEST):e.disable(F.STENCIL_TEST),stencilMask:(e,t)=>{t=V(t)?t:[t,t];const[n,i]=t;e.stencilMaskSeparate(F.FRONT,n),e.stencilMaskSeparate(F.BACK,i)},stencilFunc:(e,t)=>{t=V(t)&&3===t.length?[...t,...t]:t;const[n,i,r,s,o,a]=t;e.stencilFuncSeparate(F.FRONT,n,i,r),e.stencilFuncSeparate(F.BACK,s,o,a)},stencilOp:(e,t)=>{t=V(t)&&3===t.length?[...t,...t]:t;const[n,i,r,s,o,a]=t;e.stencilOpSeparate(F.FRONT,n,i,r),e.stencilOpSeparate(F.BACK,s,o,a)},viewport:(e,t)=>e.viewport(...t)};function W(e,t,n){return void 0!==t[e]?t[e]:n[e]}const K={blendEquation:(e,t,n)=>e.blendEquationSeparate(W(F.BLEND_EQUATION_RGB,t,n),W(F.BLEND_EQUATION_ALPHA,t,n)),blendFunc:(e,t,n)=>e.blendFuncSeparate(W(F.BLEND_SRC_RGB,t,n),W(F.BLEND_DST_RGB,t,n),W(F.BLEND_SRC_ALPHA,t,n),W(F.BLEND_DST_ALPHA,t,n)),polygonOffset:(e,t,n)=>e.polygonOffset(W(F.POLYGON_OFFSET_FACTOR,t,n),W(F.POLYGON_OFFSET_UNITS,t,n)),sampleCoverage:(e,t,n)=>e.sampleCoverage(W(F.SAMPLE_COVERAGE_VALUE,t,n),W(F.SAMPLE_COVERAGE_INVERT,t,n)),stencilFuncFront:(e,t,n)=>e.stencilFuncSeparate(F.FRONT,W(F.STENCIL_FUNC,t,n),W(F.STENCIL_REF,t,n),W(F.STENCIL_VALUE_MASK,t,n)),stencilFuncBack:(e,t,n)=>e.stencilFuncSeparate(F.BACK,W(F.STENCIL_BACK_FUNC,t,n),W(F.STENCIL_BACK_REF,t,n),W(F.STENCIL_BACK_VALUE_MASK,t,n)),stencilOpFront:(e,t,n)=>e.stencilOpSeparate(F.FRONT,W(F.STENCIL_FAIL,t,n),W(F.STENCIL_PASS_DEPTH_FAIL,t,n),W(F.STENCIL_PASS_DEPTH_PASS,t,n)),stencilOpBack:(e,t,n)=>e.stencilOpSeparate(F.BACK,W(F.STENCIL_BACK_FAIL,t,n),W(F.STENCIL_BACK_PASS_DEPTH_FAIL,t,n),W(F.STENCIL_BACK_PASS_DEPTH_PASS,t,n))},z={enable:(e,t)=>e({[t]:!0}),disable:(e,t)=>e({[t]:!1}),pixelStorei:(e,t,n)=>e({[t]:n}),hint:(e,t,n)=>e({[t]:n}),useProgram:(e,t)=>e({[F.CURRENT_PROGRAM]:t}),bindRenderbuffer:(e,t,n)=>e({[F.RENDERBUFFER_BINDING]:n}),bindTransformFeedback:(e,t,n)=>e({[F.TRANSFORM_FEEDBACK_BINDING]:n}),bindVertexArray:(e,t)=>e({[F.VERTEX_ARRAY_BINDING]:t}),bindFramebuffer:(e,t,n)=>{switch(t){case F.FRAMEBUFFER:return e({[F.DRAW_FRAMEBUFFER_BINDING]:n,[F.READ_FRAMEBUFFER_BINDING]:n});case F.DRAW_FRAMEBUFFER:return e({[F.DRAW_FRAMEBUFFER_BINDING]:n});case F.READ_FRAMEBUFFER:return e({[F.READ_FRAMEBUFFER_BINDING]:n});default:return null}},bindBuffer:(e,t,n)=>{const i={[F.ARRAY_BUFFER]:[F.ARRAY_BUFFER_BINDING],[F.COPY_READ_BUFFER]:[F.COPY_READ_BUFFER_BINDING],[F.COPY_WRITE_BUFFER]:[F.COPY_WRITE_BUFFER_BINDING],[F.PIXEL_PACK_BUFFER]:[F.PIXEL_PACK_BUFFER_BINDING],[F.PIXEL_UNPACK_BUFFER]:[F.PIXEL_UNPACK_BUFFER_BINDING]}[t];return i?e({[i]:n}):{valueChanged:!0}},blendColor:(e,t,n,i,r)=>e({[F.BLEND_COLOR]:new Float32Array([t,n,i,r])}),blendEquation:(e,t)=>e({[F.BLEND_EQUATION_RGB]:t,[F.BLEND_EQUATION_ALPHA]:t}),blendEquationSeparate:(e,t,n)=>e({[F.BLEND_EQUATION_RGB]:t,[F.BLEND_EQUATION_ALPHA]:n}),blendFunc:(e,t,n)=>e({[F.BLEND_SRC_RGB]:t,[F.BLEND_DST_RGB]:n,[F.BLEND_SRC_ALPHA]:t,[F.BLEND_DST_ALPHA]:n}),blendFuncSeparate:(e,t,n,i,r)=>e({[F.BLEND_SRC_RGB]:t,[F.BLEND_DST_RGB]:n,[F.BLEND_SRC_ALPHA]:i,[F.BLEND_DST_ALPHA]:r}),clearColor:(e,t,n,i,r)=>e({[F.COLOR_CLEAR_VALUE]:new Float32Array([t,n,i,r])}),clearDepth:(e,t)=>e({[F.DEPTH_CLEAR_VALUE]:t}),clearStencil:(e,t)=>e({[F.STENCIL_CLEAR_VALUE]:t}),colorMask:(e,t,n,i,r)=>e({[F.COLOR_WRITEMASK]:[t,n,i,r]}),cullFace:(e,t)=>e({[F.CULL_FACE_MODE]:t}),depthFunc:(e,t)=>e({[F.DEPTH_FUNC]:t}),depthRange:(e,t,n)=>e({[F.DEPTH_RANGE]:new Float32Array([t,n])}),depthMask:(e,t)=>e({[F.DEPTH_WRITEMASK]:t}),frontFace:(e,t)=>e({[F.FRONT_FACE]:t}),lineWidth:(e,t)=>e({[F.LINE_WIDTH]:t}),polygonOffset:(e,t,n)=>e({[F.POLYGON_OFFSET_FACTOR]:t,[F.POLYGON_OFFSET_UNITS]:n}),sampleCoverage:(e,t,n)=>e({[F.SAMPLE_COVERAGE_VALUE]:t,[F.SAMPLE_COVERAGE_INVERT]:n}),scissor:(e,t,n,i,r)=>e({[F.SCISSOR_BOX]:new Int32Array([t,n,i,r])}),stencilMask:(e,t)=>e({[F.STENCIL_WRITEMASK]:t,[F.STENCIL_BACK_WRITEMASK]:t}),stencilMaskSeparate:(e,t,n)=>e({[t===F.FRONT?F.STENCIL_WRITEMASK:F.STENCIL_BACK_WRITEMASK]:n}),stencilFunc:(e,t,n,i)=>e({[F.STENCIL_FUNC]:t,[F.STENCIL_REF]:n,[F.STENCIL_VALUE_MASK]:i,[F.STENCIL_BACK_FUNC]:t,[F.STENCIL_BACK_REF]:n,[F.STENCIL_BACK_VALUE_MASK]:i}),stencilFuncSeparate:(e,t,n,i,r)=>e({[t===F.FRONT?F.STENCIL_FUNC:F.STENCIL_BACK_FUNC]:n,[t===F.FRONT?F.STENCIL_REF:F.STENCIL_BACK_REF]:i,[t===F.FRONT?F.STENCIL_VALUE_MASK:F.STENCIL_BACK_VALUE_MASK]:r}),stencilOp:(e,t,n,i)=>e({[F.STENCIL_FAIL]:t,[F.STENCIL_PASS_DEPTH_FAIL]:n,[F.STENCIL_PASS_DEPTH_PASS]:i,[F.STENCIL_BACK_FAIL]:t,[F.STENCIL_BACK_PASS_DEPTH_FAIL]:n,[F.STENCIL_BACK_PASS_DEPTH_PASS]:i}),stencilOpSeparate:(e,t,n,i,r)=>e({[t===F.FRONT?F.STENCIL_FAIL:F.STENCIL_BACK_FAIL]:n,[t===F.FRONT?F.STENCIL_PASS_DEPTH_FAIL:F.STENCIL_BACK_PASS_DEPTH_FAIL]:i,[t===F.FRONT?F.STENCIL_PASS_DEPTH_PASS:F.STENCIL_BACK_PASS_DEPTH_PASS]:r}),viewport:(e,t,n,i,r)=>e({[F.VIEWPORT]:[t,n,i,r]})},Y=(e,t)=>e.isEnabled(t),j={[F.BLEND]:Y,[F.CULL_FACE]:Y,[F.DEPTH_TEST]:Y,[F.DITHER]:Y,[F.POLYGON_OFFSET_FILL]:Y,[F.SAMPLE_ALPHA_TO_COVERAGE]:Y,[F.SAMPLE_COVERAGE]:Y,[F.SCISSOR_TEST]:Y,[F.STENCIL_TEST]:Y,[F.RASTERIZER_DISCARD]:Y},q=new Set([F.ACTIVE_TEXTURE,F.TRANSFORM_FEEDBACK_ACTIVE,F.TRANSFORM_FEEDBACK_PAUSED,F.TRANSFORM_FEEDBACK_BUFFER_BINDING,F.UNIFORM_BUFFER_BINDING,F.ELEMENT_ARRAY_BUFFER_BINDING,F.IMPLEMENTATION_COLOR_READ_FORMAT,F.IMPLEMENTATION_COLOR_READ_TYPE,F.READ_BUFFER,F.DRAW_BUFFER0,F.DRAW_BUFFER1,F.DRAW_BUFFER2,F.DRAW_BUFFER3,F.DRAW_BUFFER4,F.DRAW_BUFFER5,F.DRAW_BUFFER6,F.DRAW_BUFFER7,F.DRAW_BUFFER8,F.DRAW_BUFFER9,F.DRAW_BUFFER10,F.DRAW_BUFFER11,F.DRAW_BUFFER12,F.DRAW_BUFFER13,F.DRAW_BUFFER14,F.DRAW_BUFFER15,F.SAMPLER_BINDING,F.TEXTURE_BINDING_2D,F.TEXTURE_BINDING_2D_ARRAY,F.TEXTURE_BINDING_3D,F.TEXTURE_BINDING_CUBE_MAP]);function Q(e,t){if(function(e){for(const t in e)return!1;return!0}(t))return;const n={};for(const r in t){const i=Number(r),s=X[r];s&&("string"==typeof s?n[s]=!0:s(e,t[r],i))}const i=e.state&&e.state.cache;if(i)for(const r in n){(0,K[r])(e,t,i)}}function Z(e,t){if(void 0===t&&(t=D),"number"==typeof t){const n=t,i=j[n];return i?i(e,n):e.getParameter(n)}const n=Array.isArray(t)?t:Object.keys(t),i={};for(const r of n){const t=j[r];i[r]=t?t(e,Number(r)):e.getParameter(Number(r))}return i}function J(e,t){if(e===t)return!0;const n=Array.isArray(e)||ArrayBuffer.isView(e),i=Array.isArray(t)||ArrayBuffer.isView(t);if(n&&i&&e.length===t.length){for(let n=0;n<e.length;++n)if(e[n]!==t[n])return!1;return!0}return!1}class ${constructor(e,t){let{copyState:n=!1,log:i=(()=>{})}=void 0===t?{}:t;this.program=null,this.stateStack=[],this.enable=!0,this.gl=e,this.cache=n?Z(e):Object.assign({},D),this.log=i,this._updateCache=this._updateCache.bind(this),Object.seal(this)}push(e){void 0===e&&(e={}),this.stateStack.push({})}pop(){const e=this.stateStack[this.stateStack.length-1];Q(this.gl,e),this.stateStack.pop()}_updateCache(e){let t,n=!1;const i=this.stateStack.length>0?this.stateStack[this.stateStack.length-1]:null;for(const r in e){const s=e[r],o=this.cache[r];J(s,o)||(n=!0,t=o,i&&!(r in i)&&(i[r]=o),this.cache[r]=s)}return{valueChanged:n,oldValue:t}}}function ee(e){return e.state}function te(e,t){const{enable:n=!0,copyState:i}=t;if(!e.state){e.state=new $(e,{copyState:i}),function(e){const t=e.useProgram.bind(e);e.useProgram=function(n){const i=ee(e);i.program!==n&&(t(n),i.program=n)}}(e);for(const t in z){se(e,t,z[t])}re(e,"getParameter"),re(e,"isEnabled")}return ee(e).enable=n,e}function ne(e){let t=ee(e);t||(te(e,{copyState:!1}),t=ee(e)),t.push()}function ie(e){ee(e).pop()}function re(e,t){const n=e[t].bind(e);e[t]=function(t){if(void 0===t||q.has(t))return n(t);const i=ee(e);return t in i.cache||(i.cache[t]=n(t)),i.enable?i.cache[t]:n(t)},Object.defineProperty(e[t],"name",{value:t+"-from-cache",configurable:!1})}function se(e,t,n){if(!e[t])return;const i=e[t].bind(e);e[t]=function(){const t=ee(e);for(var r=arguments.length,s=new Array(r),o=0;o<r;o++)s[o]=arguments[o];const{valueChanged:a,oldValue:l}=n(t._updateCache,...s);return a&&i(...s),l},Object.defineProperty(e[t],"name",{value:t+"-to-cache",configurable:!1})}const oe={powerPreference:"high-performance",onContextLost:()=>console.error("WebGL context lost"),onContextRestored:()=>console.info("WebGL context restored")};function ae(e,t,n){return void 0===n[t]&&(n[t]=e.getExtension(t)||null),n[t]}function le(e,t){const n=e.getParameter(F.VENDOR),i=e.getParameter(F.RENDERER);ae(e,"WEBGL_debug_renderer_info",t);const r=t.WEBGL_debug_renderer_info,s=e.getParameter(r?r.UNMASKED_VENDOR_WEBGL:F.VENDOR)||n,o=e.getParameter(r?r.UNMASKED_RENDERER_WEBGL:F.RENDERER)||i,a=e.getParameter(F.VERSION),l=ce(s,o),c=function(e,t){if(/Metal/i.exec(e)||/Metal/i.exec(t))return"metal";if(/ANGLE/i.exec(e)||/ANGLE/i.exec(t))return"opengl";return"unknown"}(s,o),u=function(e,t){if(/SwiftShader/i.exec(e)||/SwiftShader/i.exec(t))return"cpu";switch(ce(e,t)){case"intel":return"integrated";case"software":return"cpu";case"unknown":return"unknown";default:return"discrete"}}(s,o);return{type:"webgl",gpu:l,gpuType:u,gpuBackend:c,vendor:s,renderer:o,version:a,shadingLanguage:"glsl",shadingLanguageVersion:300}}function ce(e,t){return/NVIDIA/i.exec(e)||/NVIDIA/i.exec(t)?"nvidia":/INTEL/i.exec(e)||/INTEL/i.exec(t)?"intel":/Apple/i.exec(e)||/Apple/i.exec(t)?"apple":/AMD/i.exec(e)||/AMD/i.exec(t)||/ATI/i.exec(e)||/ATI/i.exec(t)?"amd":/SwiftShader/i.exec(e)||/SwiftShader/i.exec(t)?"software":"unknown"}function ue(e){switch(e){case"uint8":case"unorm8":return F.UNSIGNED_BYTE;case"sint8":case"snorm8":return F.BYTE;case"uint16":case"unorm16":return F.UNSIGNED_SHORT;case"sint16":case"snorm16":return F.SHORT;case"uint32":return F.UNSIGNED_INT;case"sint32":return F.INT;case"float16":return F.HALF_FLOAT;case"float32":return F.FLOAT}throw new Error(String(e))}const he="texture-compression-bc",de="texture-compression-astc",_e="texture-compression-etc2",pe="texture-compression-pvrtc-webgl",fe="texture-compression-atc-webgl",ge="float32-renderable-webgl",me="float16-renderable-webgl",Ee="snorm8-renderable-webgl",Ae="norm16-renderable-webgl",Re="snorm16-renderable-webgl",ve="float32-filterable",Te="float16-filterable-webgl",Se="WEBGL_compressed_texture_s3tc",be="WEBGL_compressed_texture_s3tc_srgb",Ce="EXT_texture_compression_rgtc",Ie="EXT_texture_compression_bptc",Ne="EXT_texture_norm16",ye="EXT_render_snorm",Le={"float32-renderable-webgl":["EXT_color_buffer_float"],"float16-renderable-webgl":["EXT_color_buffer_half_float"],"rgb9e5ufloat_renderable-webgl":["WEBGL_render_shared_exponent"],"snorm8-renderable-webgl":[ye],"norm16-renderable-webgl":[Ne],"snorm16-renderable-webgl":[Ne,ye],"float32-filterable":["OES_texture_float_linear"],"float16-filterable-webgl":["OES_texture_half_float_linear"],"texture-filterable-anisotropic-webgl":["EXT_texture_filter_anisotropic"],"texture-blend-float-webgl":["EXT_float_blend"],"texture-compression-bc":[Se,be,Ce,Ie],"texture-compression-bc5-webgl":[Ce],"texture-compression-bc7-webgl":[Ie],"texture-compression-etc2":["WEBGL_compressed_texture_etc"],"texture-compression-astc":["WEBGL_compressed_texture_astc"],"texture-compression-etc1-webgl":["WEBGL_compressed_texture_etc1"],"texture-compression-pvrtc-webgl":["WEBGL_compressed_texture_pvrtc"],"texture-compression-atc-webgl":["WEBGL_compressed_texture_atc"]};function Pe(e,t,n){return(Le[t]||[]).every((t=>ae(e,t,n)))}const we={"rgb8unorm-unsized":{gl:F.RGB,b:4,c:2,bpp:4,dataFormat:F.RGB,types:[F.UNSIGNED_BYTE,F.UNSIGNED_SHORT_5_6_5]},"rgba8unorm-unsized":{gl:F.RGBA,b:4,c:2,bpp:4,dataFormat:F.RGBA,types:[F.UNSIGNED_BYTE,F.UNSIGNED_SHORT_4_4_4_4,F.UNSIGNED_SHORT_5_5_5_1]},r8unorm:{gl:F.R8,b:1,c:1,rb:!0},r8snorm:{gl:F.R8_SNORM,b:1,c:1,render:Ee},r8uint:{gl:F.R8UI,b:1,c:1,rb:!0},r8sint:{gl:F.R8I,b:1,c:1,rb:!0},rg8unorm:{gl:F.RG8,b:2,c:2,rb:!0},rg8snorm:{gl:F.RG8_SNORM,b:2,c:2,render:Ee},rg8uint:{gl:F.RG8UI,b:2,c:2,rb:!0},rg8sint:{gl:F.RG8I,b:2,c:2,rb:!0},r16uint:{gl:F.R16UI,b:2,c:1,rb:!0},r16sint:{gl:F.R16I,b:2,c:1,rb:!0},r16float:{gl:F.R16F,b:2,c:1,render:me,filter:"float16-filterable-webgl",rb:!0},"r16unorm-webgl":{gl:F.R16_EXT,b:2,c:1,f:Ae,rb:!0},"r16snorm-webgl":{gl:F.R16_SNORM_EXT,b:2,c:1,f:Re},"rgba4unorm-webgl":{gl:F.RGBA4,b:2,c:4,wgpu:!1,rb:!0},"rgb565unorm-webgl":{gl:F.RGB565,b:2,c:4,wgpu:!1,rb:!0},"rgb5a1unorm-webgl":{gl:F.RGB5_A1,b:2,c:4,wgpu:!1,rb:!0},"rgb8unorm-webgl":{gl:F.RGB8,b:3,c:3,wgpu:!1},"rgb8snorm-webgl":{gl:F.RGB8_SNORM,b:3,c:3,wgpu:!1},rgba8unorm:{gl:F.RGBA8,b:4,c:2,bpp:4},"rgba8unorm-srgb":{gl:F.SRGB8_ALPHA8,b:4,c:4,bpp:4},rgba8snorm:{gl:F.RGBA8_SNORM,b:4,c:4,render:Ee},rgba8uint:{gl:F.RGBA8UI,b:4,c:4,bpp:4},rgba8sint:{gl:F.RGBA8I,b:4,c:4,bpp:4},bgra8unorm:{b:4,c:4},"bgra8unorm-srgb":{b:4,c:4},rg16uint:{gl:F.RG16UI,b:4,c:1,bpp:4},rg16sint:{gl:F.RG16I,b:4,c:2,bpp:4},rg16float:{gl:F.RG16F,bpp:4,b:4,c:2,render:me,filter:Te,rb:!0},"rg16unorm-webgl":{gl:F.RG16_EXT,b:2,c:2,render:Ae},"rg16snorm-webgl":{gl:F.RG16_SNORM_EXT,b:2,c:2,render:Re},r32uint:{gl:F.R32UI,b:4,c:1,bpp:4,rb:!0},r32sint:{gl:F.R32I,b:4,c:1,bpp:4,rb:!0},r32float:{gl:F.R32F,bpp:4,b:4,c:1,render:ge,filter:ve},rgb9e5ufloat:{gl:F.RGB9_E5,b:4,c:3,p:1,render:"rgb9e5ufloat_renderable-webgl"},rg11b10ufloat:{gl:F.R11F_G11F_B10F,b:4,c:3,p:1,render:ge,rb:!0},rgb10a2unorm:{gl:F.RGB10_A2,b:4,c:4,p:1,rb:!0},"rgb10a2uint-webgl":{b:4,c:4,gl:F.RGB10_A2UI,p:1,wgpu:!1,bpp:4,rb:!0},"rgb16unorm-webgl":{gl:F.RGB16_EXT,b:2,c:3,f:Ae},"rgb16snorm-webgl":{gl:F.RGB16_SNORM_EXT,b:2,c:3,f:Ae},rg32uint:{gl:F.RG32UI,b:8,c:2,rb:!0},rg32sint:{gl:F.RG32I,b:8,c:2,rb:!0},rg32float:{gl:F.RG32F,b:8,c:2,render:ge,filter:ve,rb:!0},rgba16uint:{gl:F.RGBA16UI,b:8,c:4,rb:!0},rgba16sint:{gl:F.RGBA16I,b:8,c:4,rb:!0},rgba16float:{gl:F.RGBA16F,b:8,c:4,render:me,filter:Te},"rgba16unorm-webgl":{gl:F.RGBA16_EXT,b:2,c:4,render:Ae,rb:!0},"rgba16snorm-webgl":{gl:F.RGBA16_SNORM_EXT,b:2,c:4,render:Re},"rgb32float-webgl":{gl:F.RGB32F,render:ge,filter:ve,gl2ext:"EXT_color_buffer_float",dataFormat:F.RGB,types:[F.FLOAT]},rgba32uint:{gl:F.RGBA32UI,b:16,c:4,rb:!0},rgba32sint:{gl:F.RGBA32I,b:16,c:4,rb:!0},rgba32float:{gl:F.RGBA32F,b:16,c:4,render:ge,filter:ve,rb:!0},stencil8:{gl:F.STENCIL_INDEX8,b:1,c:1,attachment:F.STENCIL_ATTACHMENT,rb:!0},depth16unorm:{gl:F.DEPTH_COMPONENT16,b:2,c:1,attachment:F.DEPTH_ATTACHMENT,dataFormat:F.DEPTH_COMPONENT,types:[F.UNSIGNED_SHORT],rb:!0},depth24plus:{gl:F.DEPTH_COMPONENT24,b:3,c:1,attachment:F.DEPTH_ATTACHMENT,dataFormat:F.DEPTH_COMPONENT,types:[F.UNSIGNED_INT]},depth32float:{gl:F.DEPTH_COMPONENT32F,b:4,c:1,attachment:F.DEPTH_ATTACHMENT,dataFormat:F.DEPTH_COMPONENT,types:[F.FLOAT],rb:!0},"depth24plus-stencil8":{gl:F.DEPTH24_STENCIL8,b:4,c:2,p:1,attachment:F.DEPTH_STENCIL_ATTACHMENT,rb:!0,depthTexture:!0,dataFormat:F.DEPTH_STENCIL,types:[F.UNSIGNED_INT_24_8]},"depth24unorm-stencil8":{gl:F.DEPTH24_STENCIL8,b:4,c:2,p:1,attachment:F.DEPTH_STENCIL_ATTACHMENT,dataFormat:F.DEPTH_STENCIL,types:[F.UNSIGNED_INT_24_8],rb:!0},"depth32float-stencil8":{gl:F.DEPTH32F_STENCIL8,b:5,c:2,p:1,attachment:F.DEPTH_STENCIL_ATTACHMENT,dataFormat:F.DEPTH_STENCIL,types:[F.FLOAT_32_UNSIGNED_INT_24_8_REV],rb:!0},"bc1-rgb-unorm-webgl":{gl:F.COMPRESSED_RGB_S3TC_DXT1_EXT,x:Se,f:he},"bc1-rgb-unorm-srgb-webgl":{gl:F.COMPRESSED_SRGB_S3TC_DXT1_EXT,x:be,f:he},"bc1-rgba-unorm":{gl:F.COMPRESSED_RGBA_S3TC_DXT1_EXT,x:Se,f:he},"bc1-rgba-unorm-srgb":{gl:F.COMPRESSED_SRGB_S3TC_DXT1_EXT,x:be,f:he},"bc2-rgba-unorm":{gl:F.COMPRESSED_RGBA_S3TC_DXT3_EXT,x:Se,f:he},"bc2-rgba-unorm-srgb":{gl:F.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,x:be,f:he},"bc3-rgba-unorm":{gl:F.COMPRESSED_RGBA_S3TC_DXT5_EXT,x:Se,f:he},"bc3-rgba-unorm-srgb":{gl:F.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT,x:be,f:he},"bc4-r-unorm":{gl:F.COMPRESSED_RED_RGTC1_EXT,x:Ce,f:he},"bc4-r-snorm":{gl:F.COMPRESSED_SIGNED_RED_RGTC1_EXT,x:Ce,f:he},"bc5-rg-unorm":{gl:F.COMPRESSED_RED_GREEN_RGTC2_EXT,x:Ce,f:he},"bc5-rg-snorm":{gl:F.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT,x:Ce,f:he},"bc6h-rgb-ufloat":{gl:F.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT,x:Ie,f:he},"bc6h-rgb-float":{gl:F.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT,x:Ie,f:he},"bc7-rgba-unorm":{gl:F.COMPRESSED_RGBA_BPTC_UNORM_EXT,x:Ie,f:he},"bc7-rgba-unorm-srgb":{gl:F.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT,x:Ie,f:he},"etc2-rgb8unorm":{gl:F.COMPRESSED_RGB8_ETC2,f:_e},"etc2-rgb8unorm-srgb":{gl:F.COMPRESSED_SRGB8_ETC2,f:_e},"etc2-rgb8a1unorm":{gl:F.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,f:_e},"etc2-rgb8a1unorm-srgb":{gl:F.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,f:_e},"etc2-rgba8unorm":{gl:F.COMPRESSED_RGBA8_ETC2_EAC,f:_e},"etc2-rgba8unorm-srgb":{gl:F.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC,f:_e},"eac-r11unorm":{gl:F.COMPRESSED_R11_EAC,f:_e},"eac-r11snorm":{gl:F.COMPRESSED_SIGNED_R11_EAC,f:_e},"eac-rg11unorm":{gl:F.COMPRESSED_RG11_EAC,f:_e},"eac-rg11snorm":{gl:F.COMPRESSED_SIGNED_RG11_EAC,f:_e},"astc-4x4-unorm":{gl:F.COMPRESSED_RGBA_ASTC_4x4_KHR,f:de},"astc-4x4-unorm-srgb":{gl:F.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR,f:de},"astc-5x4-unorm":{gl:F.COMPRESSED_RGBA_ASTC_5x4_KHR,f:de},"astc-5x4-unorm-srgb":{gl:F.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR,f:de},"astc-5x5-unorm":{gl:F.COMPRESSED_RGBA_ASTC_5x5_KHR,f:de},"astc-5x5-unorm-srgb":{gl:F.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR,f:de},"astc-6x5-unorm":{gl:F.COMPRESSED_RGBA_ASTC_6x5_KHR,f:de},"astc-6x5-unorm-srgb":{gl:F.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR,f:de},"astc-6x6-unorm":{gl:F.COMPRESSED_RGBA_ASTC_6x6_KHR,f:de},"astc-6x6-unorm-srgb":{gl:F.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR,f:de},"astc-8x5-unorm":{gl:F.COMPRESSED_RGBA_ASTC_8x5_KHR,f:de},"astc-8x5-unorm-srgb":{gl:F.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR,f:de},"astc-8x6-unorm":{gl:F.COMPRESSED_RGBA_ASTC_8x6_KHR,f:de},"astc-8x6-unorm-srgb":{gl:F.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR,f:de},"astc-8x8-unorm":{gl:F.COMPRESSED_RGBA_ASTC_8x8_KHR,f:de},"astc-8x8-unorm-srgb":{gl:F.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR,f:de},"astc-10x5-unorm":{gl:F.COMPRESSED_RGBA_ASTC_10x10_KHR,f:de},"astc-10x5-unorm-srgb":{gl:F.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR,f:de},"astc-10x6-unorm":{gl:F.COMPRESSED_RGBA_ASTC_10x6_KHR,f:de},"astc-10x6-unorm-srgb":{gl:F.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR,f:de},"astc-10x8-unorm":{gl:F.COMPRESSED_RGBA_ASTC_10x8_KHR,f:de},"astc-10x8-unorm-srgb":{gl:F.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR,f:de},"astc-10x10-unorm":{gl:F.COMPRESSED_RGBA_ASTC_10x10_KHR,f:de},"astc-10x10-unorm-srgb":{gl:F.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR,f:de},"astc-12x10-unorm":{gl:F.COMPRESSED_RGBA_ASTC_12x10_KHR,f:de},"astc-12x10-unorm-srgb":{gl:F.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR,f:de},"astc-12x12-unorm":{gl:F.COMPRESSED_RGBA_ASTC_12x12_KHR,f:de},"astc-12x12-unorm-srgb":{gl:F.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR,f:de},"pvrtc-rgb4unorm-webgl":{gl:F.COMPRESSED_RGB_PVRTC_4BPPV1_IMG,f:pe},"pvrtc-rgba4unorm-webgl":{gl:F.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,f:pe},"pvrtc-rbg2unorm-webgl":{gl:F.COMPRESSED_RGB_PVRTC_2BPPV1_IMG,f:pe},"pvrtc-rgba2unorm-webgl":{gl:F.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG,f:pe},"etc1-rbg-unorm-webgl":{gl:F.COMPRESSED_RGB_ETC1_WEBGL,f:"texture-compression-etc1-webgl"},"atc-rgb-unorm-webgl":{gl:F.COMPRESSED_RGB_ATC_WEBGL,f:fe},"atc-rgba-unorm-webgl":{gl:F.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,f:fe},"atc-rgbai-unorm-webgl":{gl:F.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL,f:fe}};F.RED,F.RED_INTEGER,F.RG,F.RG_INTEGER,F.RGB,F.RGB_INTEGER,F.RGBA,F.RGBA_INTEGER,F.DEPTH_COMPONENT,F.DEPTH_STENCIL,F.ALPHA,F.LUMINANCE,F.LUMINANCE_ALPHA,F.FLOAT,F.UNSIGNED_INT,F.INT,F.UNSIGNED_SHORT,F.SHORT,F.HALF_FLOAT,F.BYTE,F.UNSIGNED_BYTE;function xe(e,t,n){const i=we[t];if(!i)return!1;if(void 0===i.gl)return!1;const r=i.x||i.gl2ext;return!r||Boolean(ae(e,r,n))}function Me(e){var t;const n=we[e],i=function(e){const t=we[e],n=null==t?void 0:t.gl;if(void 0===n)throw new Error("Unsupported texture format "+e);return n}(e),r=R(e);return{internalFormat:i,format:(null==n?void 0:n.dataFormat)||Oe(r.format,r.integer,r.normalized,i),type:r.dataType?ue(r.dataType):(null==n||null==(t=n.types)?void 0:t[0])||F.UNSIGNED_BYTE,compressed:r.compressed}}function Oe(e,t,n,i){if(i===F.RGBA||i===F.RGB)return i;switch(e){case"r":return t&&!n?F.RED_INTEGER:F.RED;case"rg":return t&&!n?F.RG_INTEGER:F.RG;case"rgb":return t&&!n?F.RGB_INTEGER:F.RGB;case"rgba":return t&&!n?F.RGBA_INTEGER:F.RGBA;default:return F.RGBA}}let Fe;const De={"depth-clip-control":"EXT_depth_clamp","timer-query-webgl":"EXT_disjoint_timer_query_webgl2","compilation-status-async-webgl":"KHR_parallel_shader_compile","polygon-mode-webgl":"WEBGL_polygon_mode","provoking-vertex-webgl":"WEBGL_provoking_vertex","shader-clip-cull-distance-webgl":"WEBGL_clip_cull_distance","shader-noperspective-interpolation-webgl":"NV_shader_noperspective_interpolation","shader-conservative-depth-webgl":"EXT_conservative_depth"};Fe=Symbol.iterator;class Be extends b{constructor(e,t,n){super([],n),this.testedFeatures=new Set,this.gl=e,this.extensions=t,ae(e,"EXT_color_buffer_float",t)}*[Fe](){const e=this.getFeatures();for(const t of e)this.has(t)&&(yield t);return[]}has(e){return!this.disabledFeatures[e]&&(this.testedFeatures.has(e)||(this.testedFeatures.add(e),function(e){return e in Le}(e)&&Pe(this.gl,e,this.extensions)&&this.features.add(e),this.getWebGLFeature(e)&&this.features.add(e)),this.features.has(e))}initializeFeatures(){const e=this.getFeatures().filter((e=>"polygon-mode-webgl"!==e));for(const t of e)this.has(t)}getFeatures(){return[...Object.keys(De),...Object.keys(Le)]}getWebGLFeature(e){const t=De[e];return"string"==typeof t?Boolean(ae(this.gl,t,this.extensions)):Boolean(t)}}class Ue extends S{get maxTextureDimension1D(){return 0}get maxTextureDimension2D(){return this.getParameter(F.MAX_TEXTURE_SIZE)}get maxTextureDimension3D(){return this.getParameter(F.MAX_3D_TEXTURE_SIZE)}get maxTextureArrayLayers(){return this.getParameter(F.MAX_ARRAY_TEXTURE_LAYERS)}get maxBindGroups(){return 0}get maxDynamicUniformBuffersPerPipelineLayout(){return 0}get maxDynamicStorageBuffersPerPipelineLayout(){return 0}get maxSampledTexturesPerShaderStage(){return this.getParameter(F.MAX_VERTEX_TEXTURE_IMAGE_UNITS)}get maxSamplersPerShaderStage(){return this.getParameter(F.MAX_COMBINED_TEXTURE_IMAGE_UNITS)}get maxStorageBuffersPerShaderStage(){return 0}get maxStorageTexturesPerShaderStage(){return 0}get maxUniformBuffersPerShaderStage(){return this.getParameter(F.MAX_UNIFORM_BUFFER_BINDINGS)}get maxUniformBufferBindingSize(){return this.getParameter(F.MAX_UNIFORM_BLOCK_SIZE)}get maxStorageBufferBindingSize(){return 0}get minUniformBufferOffsetAlignment(){return this.getParameter(F.UNIFORM_BUFFER_OFFSET_ALIGNMENT)}get minStorageBufferOffsetAlignment(){return 0}get maxVertexBuffers(){return 16}get maxVertexAttributes(){return this.getParameter(F.MAX_VERTEX_ATTRIBS)}get maxVertexBufferArrayStride(){return 2048}get maxInterStageShaderComponents(){return this.getParameter(F.MAX_VARYING_COMPONENTS)}get maxComputeWorkgroupStorageSize(){return 0}get maxComputeInvocationsPerWorkgroup(){return 0}get maxComputeWorkgroupSizeX(){return 0}get maxComputeWorkgroupSizeY(){return 0}get maxComputeWorkgroupSizeZ(){return 0}get maxComputeWorkgroupsPerDimension(){return 0}constructor(e){super(),this.limits={},this.gl=e}getParameter(e){return void 0===this.limits[e]&&(this.limits[e]=this.gl.getParameter(e)),this.limits[e]}}var Ge=n(7862),ke=n(7083);let He;He=Symbol.toStringTag;class Ve extends Ge.F{get[He](){return"Framebuffer"}constructor(e,t){void 0===t&&(t={}),super(e,t,Ve.defaultProps),this.width=this.props.width,this.height=this.props.height}resize(e){let t=!e;if(e){const[n,i]=Array.isArray(e)?e:[e.width,e.height];t=t||i!==this.height||n!==this.width,this.width=n,this.height=i}t&&(h.R.log(2,"Resizing framebuffer "+this.id+" to "+this.width+"x"+this.height)(),this.resizeAttachments(this.width,this.height))}autoCreateAttachmentTextures(){if(0===this.props.colorAttachments.length&&!this.props.depthStencilAttachment)throw new Error("Framebuffer has noattachments");this.colorAttachments=this.props.colorAttachments.map((e=>{if("string"==typeof e){const t=this.createColorTexture(e);return this.attachResource(t),t.view}return e instanceof ke.g?e.view:e}));const e=this.props.depthStencilAttachment;if(e)if("string"==typeof e){const t=this.createDepthStencilTexture(e);this.attachResource(t),this.depthStencilAttachment=t.view}else e instanceof ke.g?this.depthStencilAttachment=e.view:this.depthStencilAttachment=e}createColorTexture(e){return this.device.createTexture({id:"color-attachment",usage:ke.g.RENDER_ATTACHMENT,format:e,width:this.width,height:this.height})}createDepthStencilTexture(e){return this.device.createTexture({id:"depth-stencil-attachment",usage:ke.g.RENDER_ATTACHMENT,format:e,width:this.width,height:this.height})}resizeAttachments(e,t){for(let n=0;n<this.colorAttachments.length;++n)if(this.colorAttachments[n]){const i=this.device._createTexture({...this.colorAttachments[n].texture.props,width:e,height:t});this.destroyAttachedResource(this.colorAttachments[n]),this.colorAttachments[n]=i.view,this.attachResource(i.view)}if(this.depthStencilAttachment){const n=this.device._createTexture({...this.depthStencilAttachment.texture.props,width:e,height:t});this.destroyAttachedResource(this.depthStencilAttachment),this.depthStencilAttachment=n.view,this.attachResource(n)}}}function Xe(e,t,n){if(function(e){for(const t in e)return!1;return!0}(t))return n(e);const{nocatch:i=!0}=t;let r;if(ne(e),Q(e,t),i)r=n(e),ie(e);else try{r=n(e)}finally{ie(e)}return r}function We(e,t){const n=e,{gl:i}=n;if(t.cullMode)switch(t.cullMode){case"none":i.disable(F.CULL_FACE);break;case"front":i.enable(F.CULL_FACE),i.cullFace(F.FRONT);break;case"back":i.enable(F.CULL_FACE),i.cullFace(F.BACK)}if(t.frontFace&&i.frontFace(qe("frontFace",t.frontFace,{ccw:F.CCW,cw:F.CW})),t.unclippedDepth&&e.features.has("depth-clip-control")&&i.enable(F.DEPTH_CLAMP_EXT),void 0!==t.depthBias&&i.polygonOffset(t.depthBias,t.depthBiasSlopeScale||0),e.features.has("provoking-vertex-webgl")){const e=n.getExtension("WEBGL_provoking_vertex").WEBGL_provoking_vertex;if(t.provokingVertex){const n=qe("provokingVertex",t.provokingVertex,{first:F.FIRST_VERTEX_CONVENTION_WEBGL,last:F.LAST_VERTEX_CONVENTION_WEBGL});null==e||e.provokingVertexWEBGL(n)}}if(e.features.has("polygon-mode-webgl")){const e=n.getExtension("WEBGL_polygon_mode").WEBGL_polygon_mode;if(t.polygonMode){const n=qe("polygonMode",t.provokingVertex,{fill:F.FILL_WEBGL,lint:F.LINE_WEBGL});null==e||e.polygonModeWEBGL(F.FRONT,n),null==e||e.polygonModeWEBGL(F.BACK,n)}t.polygonOffsetLine&&i.enable(F.POLYGON_OFFSET_LINE_WEBGL)}if(e.features.has("shader-clip-cull-distance-webgl")&&(t.clipDistance0&&i.enable(F.CLIP_DISTANCE0_WEBGL),t.clipDistance1&&i.enable(F.CLIP_DISTANCE1_WEBGL),t.clipDistance2&&i.enable(F.CLIP_DISTANCE2_WEBGL),t.clipDistance3&&i.enable(F.CLIP_DISTANCE3_WEBGL),t.clipDistance4&&i.enable(F.CLIP_DISTANCE4_WEBGL),t.clipDistance5&&i.enable(F.CLIP_DISTANCE5_WEBGL),t.clipDistance6&&i.enable(F.CLIP_DISTANCE6_WEBGL),t.clipDistance7&&i.enable(F.CLIP_DISTANCE7_WEBGL)),void 0!==t.depthWriteEnabled&&i.depthMask(t.depthWriteEnabled),t.depthCompare&&("always"!==t.depthCompare?i.enable(F.DEPTH_TEST):i.disable(F.DEPTH_TEST),i.depthFunc(Ke("depthCompare",t.depthCompare))),t.stencilWriteMask){const e=t.stencilWriteMask;i.stencilMaskSeparate(F.FRONT,e),i.stencilMaskSeparate(F.BACK,e)}if(t.stencilReadMask&&h.R.warn("stencilReadMask not supported under WebGL"),t.stencilCompare){const e=t.stencilReadMask||4294967295,n=Ke("depthCompare",t.stencilCompare);"always"!==t.stencilCompare?i.enable(F.STENCIL_TEST):i.disable(F.STENCIL_TEST),i.stencilFuncSeparate(F.FRONT,n,0,e),i.stencilFuncSeparate(F.BACK,n,0,e)}if(t.stencilPassOperation&&t.stencilFailOperation&&t.stencilDepthFailOperation){const e=ze("stencilPassOperation",t.stencilPassOperation),n=ze("stencilFailOperation",t.stencilFailOperation),r=ze("stencilDepthFailOperation",t.stencilDepthFailOperation);i.stencilOpSeparate(F.FRONT,n,r,e),i.stencilOpSeparate(F.BACK,n,r,e)}if(t.blendColorOperation||t.blendAlphaOperation){i.enable(F.BLEND);const e=Ye("blendColorOperation",t.blendColorOperation||"add"),n=Ye("blendAlphaOperation",t.blendAlphaOperation||"add");i.blendEquationSeparate(e,n);const r=je("blendColorSrcFactor",t.blendColorSrcFactor||"one"),s=je("blendColorDstFactor",t.blendColorDstFactor||"zero"),o=je("blendAlphaSrcFactor",t.blendAlphaSrcFactor||"one"),a=je("blendAlphaDstFactor",t.blendAlphaDstFactor||"zero");i.blendFuncSeparate(r,s,o,a)}}function Ke(e,t){return qe(e,t,{never:F.NEVER,less:F.LESS,equal:F.EQUAL,"less-equal":F.LEQUAL,greater:F.GREATER,"not-equal":F.NOTEQUAL,"greater-equal":F.GEQUAL,always:F.ALWAYS})}function ze(e,t){return qe(e,t,{keep:F.KEEP,zero:F.ZERO,replace:F.REPLACE,invert:F.INVERT,"increment-clamp":F.INCR,"decrement-clamp":F.DECR,"increment-wrap":F.INCR_WRAP,"decrement-wrap":F.DECR_WRAP})}function Ye(e,t){return qe(e,t,{add:F.FUNC_ADD,subtract:F.FUNC_SUBTRACT,"reverse-subtract":F.FUNC_REVERSE_SUBTRACT,min:F.MIN,max:F.MAX})}function je(e,t){return qe(e,t,{one:F.ONE,zero:F.ZERO,"src-color":F.SRC_COLOR,"one-minus-src-color":F.ONE_MINUS_SRC_COLOR,"dst-color":F.DST_COLOR,"one-minus-dst-color":F.ONE_MINUS_DST_COLOR,"src-alpha":F.SRC_ALPHA,"one-minus-src-alpha":F.ONE_MINUS_SRC_ALPHA,"dst-alpha":F.DST_ALPHA,"one-minus-dst-alpha":F.ONE_MINUS_DST_ALPHA})}function qe(e,t,n){if(!(t in n))throw new Error(function(e,t){return"Illegal parameter "+t+" for "+e}(e,t));return n[t]}function Qe(e){let t=!0;for(const n in e){t=!1;break}return t}function Ze(e){const t={};return e.addressModeU&&(t[F.TEXTURE_WRAP_S]=Je(e.addressModeU)),e.addressModeV&&(t[F.TEXTURE_WRAP_T]=Je(e.addressModeV)),e.addressModeW&&(t[F.TEXTURE_WRAP_R]=Je(e.addressModeW)),e.magFilter&&(t[F.TEXTURE_MAG_FILTER]=$e(e.magFilter)),(e.minFilter||e.mipmapFilter)&&(t[F.TEXTURE_MIN_FILTER]=function(e,t){if(!t)return $e(e);switch(e){case"nearest":return"nearest"===t?F.NEAREST_MIPMAP_NEAREST:F.NEAREST_MIPMAP_LINEAR;case"linear":return"nearest"===t?F.LINEAR_MIPMAP_NEAREST:F.LINEAR_MIPMAP_LINEAR}}(e.minFilter||"linear",e.mipmapFilter)),void 0!==e.lodMinClamp&&(t[F.TEXTURE_MIN_LOD]=e.lodMinClamp),void 0!==e.lodMaxClamp&&(t[F.TEXTURE_MAX_LOD]=e.lodMaxClamp),"comparison-sampler"===e.type&&(t[F.TEXTURE_COMPARE_MODE]=F.COMPARE_REF_TO_TEXTURE),e.compare&&(t[F.TEXTURE_COMPARE_FUNC]=Ke("compare",e.compare)),e.maxAnisotropy&&(t[F.TEXTURE_MAX_ANISOTROPY_EXT]=e.maxAnisotropy),t}function Je(e){switch(e){case"clamp-to-edge":return F.CLAMP_TO_EDGE;case"repeat":return F.REPEAT;case"mirror-repeat":return F.MIRRORED_REPEAT}}function $e(e){switch(e){case"nearest":return F.NEAREST;case"linear":return F.LINEAR}}Ve.defaultProps={...Ge.F.defaultProps,width:1,height:1,colorAttachments:[],depthStencilAttachment:null};var et=n(5768);class tt extends et.L{constructor(e,t){super(e,t),this.device=e,this.parameters=Ze(t),this.handle=this.handle||this.device.gl.createSampler(),this._setSamplerParameters(this.parameters)}destroy(){this.handle&&(this.device.gl.deleteSampler(this.handle),this.handle=void 0)}toString(){return"Sampler("+this.id+","+JSON.stringify(this.props)+")"}_setSamplerParameters(e){for(const[t,n]of Object.entries(e)){const e=Number(t);switch(e){case F.TEXTURE_MIN_LOD:case F.TEXTURE_MAX_LOD:this.device.gl.samplerParameterf(this.handle,e,n);break;default:this.device.gl.samplerParameteri(this.handle,e,n)}}}}var nt=n(4353);class it extends nt.X{constructor(e,t){super(e,{...ke.g.defaultProps,...t}),this.device=e,this.gl=this.device.gl,this.handle=null,this.texture=t.texture}}function rt(e,t,n){const{dimension:i,width:r,height:s,depth:o=0,level:a=0,byteOffset:l=0}=n,{x:c=0,y:u=0,z:h=0}=n,{glFormat:d,glType:_,compressed:p}=n,f=st(n.glTarget,i,o);switch(i){case"2d-array":case"3d":p?e.compressedTexSubImage3D(f,a,c,u,h,r,s,o,d,t,l):e.texSubImage3D(f,a,c,u,h,r,s,o,d,_,t,l);break;case"2d":case"cube":p?e.compressedTexSubImage2D(f,a,c,u,r,s,d,t,l):e.texSubImage2D(f,a,c,u,r,s,d,_,t,l);break;default:throw new Error(i)}}function st(e,t,n){return"cube"===t?F.TEXTURE_CUBE_MAP_POSITIVE_X+n:e}class ot extends ke.g{constructor(e,t){super(e,{...ke.g.defaultProps,...t,data:void 0}),this.sampler=void 0,this.view=void 0,this.mipmaps=void 0,this.textureUnit=0,this.device=e,this.gl=this.device.gl,this.glTarget=function(e){switch(e){case"1d":case"cube-array":break;case"2d":return F.TEXTURE_2D;case"3d":return F.TEXTURE_3D;case"cube":return F.TEXTURE_CUBE_MAP;case"2d-array":return F.TEXTURE_2D_ARRAY}throw new Error(e)}(this.props.dimension);const n=Me(this.props.format);if(this.glInternalFormat=n.internalFormat,this.glFormat=n.format,this.glType=n.type,this.compressed=n.compressed,"undefined"!=typeof HTMLVideoElement&&t.data instanceof HTMLVideoElement&&t.data.readyState<HTMLVideoElement.HAVE_METADATA){const e=t.data;this._video=null,e.addEventListener("loadeddata",(()=>this.initialize(t)))}this.initialize({...this.props,data:t.data}),Object.seal(this)}initialize(e){void 0===e&&(e={}),this.handle=this.props.handle||this.gl.createTexture(),this.device.setSpectorMetadata(this.handle,{...this.props,data:typeof this.props.data});const t=e.data;let{width:n,height:i}=e;if(!n||!i){const e=this.getTextureDataSize(t);n=(null==e?void 0:e.width)||1,i=(null==e?void 0:e.height)||1}if(this.width=n,this.height=i,this.depth=e.depth,this.setSampler(e.sampler),this.view=new it(this.device,{...this.props,texture:this}),this.bind(),this.props.data||function(e,t,n){const{dimension:i,width:r,height:s,depth:o=0}=n,{glInternalFormat:a}=n,l=n.glTarget;switch(i){case"2d-array":case"3d":e.texStorage3D(l,t,a,r,s,o);break;default:e.texStorage2D(l,t,a,r,s)}}(this.gl,this.mipLevels,this),e.data)switch(e.dimension){case"1d":this.setTexture1DData(e.data);break;case"2d":this.setTexture2DData(e.data);break;case"3d":this.setTexture3DData(e.data);break;case"cube":this.setTextureCubeData(e.data);break;case"2d-array":this.setTextureArrayData(e.data);break;case"cube-array":this.setTextureCubeArrayData(e.data);break;default:throw new Error(e.dimension)}this.mipmaps=e.mipmaps,this.mipmaps&&this.generateMipmap()}destroy(){this.handle&&(this.gl.deleteTexture(this.handle),this.removeStats(),this.trackDeallocatedMemory("Texture"),this.destroyed=!0)}toString(){return"Texture("+this.id+","+this.width+"x"+this.height+")"}createView(e){return new it(this.device,{...e,texture:this})}setSampler(e){let t;void 0===e&&(e={}),e instanceof tt?(this.sampler=e,t=e.props):(this.sampler=new tt(this.device,e),t=e);const n=Ze(t);this._setSamplerParameters(n)}update(){h.R.warn("Texture.update() not implemented")}generateMipmap(e){void 0===e&&(e={}),this.props.data&&(this.mipmaps=!0,this.gl.bindTexture(this.glTarget,this.handle),Xe(this.gl,e,(()=>{this.gl.generateMipmap(this.glTarget)})),this.gl.bindTexture(this.glTarget,null))}setTexture1DData(e){throw new Error("setTexture1DData not supported in WebGL.")}setTexture2DData(e,t,n){void 0===t&&(t=0),void 0===n&&(n=this.glTarget),this.bind();const i=function(e,t){let n;return n=ArrayBuffer.isView(e)?[{data:e,width:t.width,height:t.height}]:Array.isArray(e)?e:[e],n}(e,this);i.length>1&&!1!==this.props.mipmaps&&h.R.warn("Texture "+this.id+" mipmap and multiple LODs.")();for(let r=0;r<i.length;r++){const e=i[r];this._setMipLevel(t,r,e)}this.unbind()}setTexture3DData(e){if("3d"!==this.props.dimension)throw new Error(this.id);ArrayBuffer.isView(e)&&rt(this.device.gl,e,this)}setTextureCubeData(e,t){if(void 0===t&&(t=0),"cube"!==this.props.dimension)throw new Error(this.id)}setTextureArrayData(e){if("2d-array"!==this.props.dimension)throw new Error(this.id);throw new Error("setTextureArrayData not implemented.")}setTextureCubeArrayData(e){throw new Error("setTextureCubeArrayData not supported in WebGL2.")}setTextureCubeFaceData(e,t,n){void 0===n&&(n=0),Array.isArray(e)&&e.length>1&&!1!==this.props.mipmaps&&h.R.warn(this.id+" has mipmap and multiple LODs.")(),this.bind(),this.unbind()}setImageDataForFace(e){const{face:t,width:n,height:i,pixels:r,data:s,format:o=F.RGBA,type:a=F.UNSIGNED_BYTE}=e,{gl:l}=this,c=r||s;this.bind(),c instanceof Promise?c.then((n=>this.setImageDataForFace(Object.assign({},e,{face:t,data:n,pixels:n})))):this.width||this.height?l.texImage2D(t,0,o,n,i,0,o,a,c):l.texImage2D(t,0,o,o,a,c)}_getImageDataMap(e){for(let t=0;t<ke.g.CubeFaces.length;++t){const n=ke.g.CubeFaces[t];e[n]&&(e[F.TEXTURE_CUBE_MAP_POSITIVE_X+t]=e[n],delete e[n])}return e}_setSamplerParameters(e){h.R.log(1,"texture sampler parameters",e)(),this.gl.bindTexture(this.glTarget,this.handle);for(const[t,n]of Object.entries(e)){const e=Number(t),i=n;switch(e){case F.TEXTURE_MIN_LOD:case F.TEXTURE_MAX_LOD:this.gl.texParameterf(this.glTarget,e,i);break;case F.TEXTURE_MIN_FILTER:case F.TEXTURE_WRAP_S:case F.TEXTURE_WRAP_T:this.gl.texParameteri(this.glTarget,e,i);break;case F.TEXTURE_MAX_ANISOTROPY_EXT:this.device.features.has("texture-filterable-anisotropic-webgl")&&this.gl.texParameteri(this.glTarget,e,i);break;default:this.gl.texParameteri(this.glTarget,e,i)}}this.gl.bindTexture(this.glTarget,null)}_setMipLevel(e,t,n,i){if(void 0===i&&(i=0),ke.g.isExternalImage(n))!function(e,t,n){const{dimension:i,width:r,height:s,depth:o=0,level:a=0}=n,{x:l=0,y:c=0,z:u=0}=n,{glFormat:h,glType:d}=n,_=st(n.glTarget,i,o);switch(i){case"2d-array":case"3d":e.texSubImage3D(_,a,l,c,u,r,s,o,h,d,t);break;case"2d":case"cube":e.texSubImage2D(_,a,l,c,r,s,h,d,t);break;default:throw new Error(i)}}(this.device.gl,n,{...this,depth:e,level:t});else{if(!this.isTextureLevelData(n))throw new Error("Texture: invalid image data");rt(this.device.gl,n.data,{...this,depth:e,level:t})}}getActiveUnit(){return this.gl.getParameter(F.ACTIVE_TEXTURE)-F.TEXTURE0}bind(e){const{gl:t}=this;return void 0!==e&&(this.textureUnit=e,t.activeTexture(t.TEXTURE0+e)),t.bindTexture(this.glTarget,this.handle),e}unbind(e){const{gl:t}=this;return void 0!==e&&(this.textureUnit=e,t.activeTexture(t.TEXTURE0+e)),t.bindTexture(this.glTarget,null),e}}class at extends Ve{constructor(e,t){super(e,t),this.colorAttachments=[],this.depthStencilAttachment=null;const n=null===t.handle;if(this.device=e,this.gl=e.gl,this.handle=this.props.handle||n?this.props.handle:this.gl.createFramebuffer(),!n){e.setSpectorMetadata(this.handle,{id:this.props.id,props:this.props}),this.autoCreateAttachmentTextures(),this.gl.bindFramebuffer(F.FRAMEBUFFER,this.handle);for(let e=0;e<this.colorAttachments.length;++e){const t=this.colorAttachments[e],n=F.COLOR_ATTACHMENT0+e;t&&this._attachTexture(n,t)}if(this.depthStencilAttachment&&this._attachTexture(function(e){const t=we[e];if(null==t||!t.attachment)throw new Error(e+" is not a depth stencil format");return t.attachment}(this.depthStencilAttachment.props.format),this.depthStencilAttachment),!1!==t.check){const e=this.gl.checkFramebufferStatus(F.FRAMEBUFFER);if(e!==F.FRAMEBUFFER_COMPLETE)throw new Error("Framebuffer "+function(e){switch(e){case F.FRAMEBUFFER_COMPLETE:return"success";case F.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"Mismatched attachments";case F.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"No attachments";case F.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"Height/width mismatch";case F.FRAMEBUFFER_UNSUPPORTED:return"Unsupported or split attachments";case F.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:return"Samples mismatch";default:return""+e}}(e))}this.gl.bindFramebuffer(F.FRAMEBUFFER,null)}}destroy(){super.destroy(),this.destroyed||null===this.handle||this.gl.deleteFramebuffer(this.handle)}createDepthStencilTexture(e){return new ot(this.device,{id:this.id+"-depth-stencil",format:e,width:this.width,height:this.height,mipmaps:!1})}_attachTexture(e,t){this._attachTextureView(e,t)}_attachTextureView(e,t){const{gl:n}=this.device,{texture:i}=t,r=t.props.baseMipLevel,s=t.props.baseArrayLayer;switch(n.bindTexture(i.glTarget,i.handle),i.glTarget){case F.TEXTURE_2D_ARRAY:case F.TEXTURE_3D:n.framebufferTextureLayer(F.FRAMEBUFFER,e,i.glTarget,r,s);break;case F.TEXTURE_CUBE_MAP:const t=function(e){return e<F.TEXTURE_CUBE_MAP_POSITIVE_X?e+F.TEXTURE_CUBE_MAP_POSITIVE_X:e}(s);n.framebufferTexture2D(F.FRAMEBUFFER,e,t,i.handle,r);break;case F.TEXTURE_2D:n.framebufferTexture2D(F.FRAMEBUFFER,e,F.TEXTURE_2D,i.handle,r);break;default:throw new Error("Illegal texture type")}n.bindTexture(i.glTarget,null)}}class lt extends x{constructor(e,t){super(t),this.format="rgba8unorm",this.depthStencilFormat="depth24plus",this._framebuffer=null,this.device=e,this.presentationSize=[-1,-1],this._setAutoCreatedCanvasId(this.device.id+"-canvas"),this.update()}getCurrentFramebuffer(){return this.update(),this._framebuffer=this._framebuffer||new at(this.device,{handle:null}),this._framebuffer}update(){const e=this.getPixelSize();(e[0]!==this.presentationSize[0]||e[1]!==this.presentationSize[1])&&(this.presentationSize=e,this.resize())}resize(e){if(this.device.gl)if(this.canvas){const t=this.getDevicePixelRatio(null==e?void 0:e.useDevicePixels);this.setDevicePixelRatio(t,e)}else;}commit(){}}async function ct(e,t){const n=document.getElementsByTagName("head")[0];if(!n)throw new Error("loadScript");const i=document.createElement("script");return i.setAttribute("type","text/javascript"),i.setAttribute("src",e),t&&(i.id=t),new Promise(((t,r)=>{i.onload=t,i.onerror=t=>r(new Error("Unable to load script '"+e+"': "+t)),n.appendChild(i)}))}const ut={spector:h.R.get("spector")||h.R.get("inspect")};let ht=null,dt=!1;function _t(e){return e.luma=e.luma||{},e.luma}function pt(e,t){return void 0===t&&(t={}),e?t.debug?function(e,t){if(!globalThis.WebGLDebugUtils)return h.R.warn("webgl-debug not loaded")(),e;const n=_t(e);if(n.debugContext)return n.debugContext;globalThis.WebGLDebugUtils.init({...F,...e});const i=globalThis.WebGLDebugUtils.makeDebugContext(e,gt.bind(null,t),mt.bind(null,t));for(const o in F)o in i||"number"!=typeof F[o]||(i[o]=F[o]);class r{}Object.setPrototypeOf(i,Object.getPrototypeOf(e)),Object.setPrototypeOf(r,i);const s=Object.create(r);return n.realContext=e,n.debugContext=s,s.debug=!0,s}(e,t):function(e){const t=_t(e);return t.realContext?t.realContext:e}(e):null}function ft(e,t){t=Array.from(t).map((e=>void 0===e?"undefined":e));let n=globalThis.WebGLDebugUtils.glFunctionArgsToString(e,t);return n=n.slice(0,100)+(n.length>100?"...":""),"gl."+e+"("+n+")"}function gt(e,t,n,i){i=Array.from(i).map((e=>void 0===e?"undefined":e));const r=globalThis.WebGLDebugUtils.glEnumToString(t)+" in gl."+n+"("+globalThis.WebGLDebugUtils.glFunctionArgsToString(n,i)+")";if(h.R.error(r)(),e.throwOnError)throw new Error(r)}function mt(e,t,n){let i="";if(h.R.level>=1&&(i=ft(t,n),h.R.log(1,i)()),e.break&&e.break.length>0){i=i||ft(t,n);e.break.every((e=>-1!==i.indexOf(e)))}for(const r of n)if(void 0===r){if(i=i||ft(t,n),e.throwOnError)throw new Error("Undefined argument: "+i);h.R.error("Undefined argument: "+i)()}}class Et extends g.h{constructor(e,t){void 0===t&&(t={}),super(e,t),this.glIndexType=F.UNSIGNED_SHORT,this.device=e,this.gl=this.device.gl;const n="object"==typeof t?t.handle:void 0;this.handle=n||this.gl.createBuffer(),e.setSpectorMetadata(this.handle,{...this.props,data:typeof this.props.data}),this.glTarget=function(e){if(e&g.h.INDEX)return F.ELEMENT_ARRAY_BUFFER;if(e&g.h.VERTEX)return F.ARRAY_BUFFER;if(e&g.h.UNIFORM)return F.UNIFORM_BUFFER;return F.ARRAY_BUFFER}(this.props.usage),this.glUsage=function(e){if(e&g.h.INDEX)return F.STATIC_DRAW;if(e&g.h.VERTEX)return F.STATIC_DRAW;if(e&g.h.UNIFORM)return F.DYNAMIC_DRAW;return F.STATIC_DRAW}(this.props.usage),this.glIndexType="uint32"===this.props.indexType?F.UNSIGNED_INT:F.UNSIGNED_SHORT,t.data?this._initWithData(t.data,t.byteOffset,t.byteLength):this._initWithByteLength(t.byteLength||0)}_initWithData(e,t,n){void 0===t&&(t=0),void 0===n&&(n=e.byteLength+t);const i=this.glTarget;this.gl.bindBuffer(i,this.handle),this.gl.bufferData(i,n,this.glUsage),this.gl.bufferSubData(i,t,e),this.gl.bindBuffer(i,null),this.bytesUsed=n,this.byteLength=n,this._setDebugData(e,t,n),this.trackAllocatedMemory(n)}_initWithByteLength(e){let t=e;0===e&&(t=new Float32Array(0));const n=this.glTarget;return this.gl.bindBuffer(n,this.handle),this.gl.bufferData(n,t,this.glUsage),this.gl.bindBuffer(n,null),this.bytesUsed=e,this.byteLength=e,this._setDebugData(null,0,e),this.trackAllocatedMemory(e),this}destroy(){!this.destroyed&&this.handle&&(this.removeStats(),this.trackDeallocatedMemory(),this.gl.deleteBuffer(this.handle),this.destroyed=!0,this.handle=null)}write(e,t){void 0===t&&(t=0);const n=F.COPY_WRITE_BUFFER;this.gl.bindBuffer(n,this.handle),this.gl.bufferSubData(n,t,e),this.gl.bindBuffer(n,null),this._setDebugData(e,t,e.byteLength)}async readAsync(e,t){return void 0===e&&(e=0),this.readSyncWebGL(e,t)}readSyncWebGL(e,t){var n;void 0===e&&(e=0),t=null!=(n=t)?n:this.byteLength-e;const i=new Uint8Array(t);return this.gl.bindBuffer(F.COPY_READ_BUFFER,this.handle),this.gl.getBufferSubData(F.COPY_READ_BUFFER,e,i,0,t),this.gl.bindBuffer(F.COPY_READ_BUFFER,null),this._setDebugData(i,e,t),i}}var At=n(7468);function Rt(e){const t=e.toLowerCase();return["warning","error","info"].includes(t)?t:"info"}class vt extends At.M{constructor(e,t){switch(super(e,t),this.device=e,this.props.stage){case"vertex":this.handle=this.props.handle||this.device.gl.createShader(F.VERTEX_SHADER);break;case"fragment":this.handle=this.props.handle||this.device.gl.createShader(F.FRAGMENT_SHADER);break;default:throw new Error(this.props.stage)}this._compile(this.source)}destroy(){this.handle&&(this.removeStats(),this.device.gl.deleteShader(this.handle),this.destroyed=!0)}async getCompilationInfo(){return await this._waitForCompilationComplete(),this.getCompilationInfoSync()}getCompilationInfoSync(){return function(e){const t=e.split(/\r?\n/),n=[];for(const i of t){if(i.length<=1)continue;const e=i.split(":");if(2===e.length){const[t,i]=e;n.push({message:i.trim(),type:Rt(t),lineNum:0,linePos:0});continue}const[t,r,s,...o]=e;let a=parseInt(s,10);isNaN(a)&&(a=0);let l=parseInt(r,10);isNaN(l)&&(l=0),n.push({message:o.join(":").trim(),type:Rt(t),lineNum:a,linePos:l})}return n}(this.device.gl.getShaderInfoLog(this.handle))}getTranslatedSource(){const e=this.device.getExtension("WEBGL_debug_shaders").WEBGL_debug_shaders;return null==e?void 0:e.getTranslatedShaderSource(this.handle)}async _compile(e){e=(e=>e.startsWith("#version ")?e:"#version 100\n"+e)(e);const{gl:t}=this.device;if(t.shaderSource(this.handle,e),t.compileShader(this.handle),0!==h.R.level){if(this.device.features.has("compilation-status-async-webgl"))h.R.once(1,"Shader compilation is asynchronous")(),await this._waitForCompilationComplete(),h.R.info(2,"Shader "+this.id+" - async compilation complete: "+this.compilationStatus)(),this._getCompilationStatus(),this.debugShader();else if(this._getCompilationStatus(),this.debugShader(),"error"===this.compilationStatus)throw new Error("GLSL compilation errors in "+this.props.stage+" shader "+this.props.id)}else this.compilationStatus="pending"}async _waitForCompilationComplete(){const e=async e=>await new Promise((t=>setTimeout(t,e)));if(!this.device.features.has("compilation-status-async-webgl"))return void await e(10);const{gl:t}=this.device;for(;;){if(t.getShaderParameter(this.handle,F.COMPLETION_STATUS_KHR))return;await e(10)}}_getCompilationStatus(){this.compilationStatus=this.device.gl.getShaderParameter(this.handle,F.COMPILE_STATUS)?"success":"error"}}let Tt;Tt=Symbol.toStringTag;class St extends Ge.F{get[Tt](){return"RenderPass"}constructor(e,t){super(e,t,St.defaultProps)}}St.defaultProps={...Ge.F.defaultProps,framebuffer:null,parameters:void 0,clearColor:[0,0,0,0],clearDepth:1,clearStencil:0,depthReadOnly:!1,stencilReadOnly:!1,discard:!1,occlusionQuerySet:void 0,timestampQuerySet:void 0,beginTimestampIndex:void 0,endTimestampIndex:void 0};const bt=6144;class Ct extends St{constructor(e,t){super(e,t),this.device=e,ne(this.device.gl),this.setParameters(this.props.parameters),this.clear()}end(){ie(this.device.gl),this.props.framebuffer&&Q(this.device.gl,{framebuffer:null})}pushDebugGroup(e){}popDebugGroup(){}insertDebugMarker(e){}setParameters(e){void 0===e&&(e={});const t={};t.framebuffer=this.props.framebuffer||null,this.props.depthReadOnly&&(t.depthMask=!this.props.depthReadOnly),t.stencilMask=this.props.stencilReadOnly?0:1,t[F.RASTERIZER_DISCARD]=this.props.discard,e.viewport&&(e.viewport.length>=6?(t.viewport=e.viewport.slice(0,4),t.depthRange=[e.viewport[4],e.viewport[5]]):t.viewport=e.viewport),t.scissorTest=Boolean(e.scissorRect),e.scissorRect&&(t.scissor=e.scissorRect),e.blendConstant&&(t.blendColor=e.blendConstant),e.stencilReference&&(console.warn("RenderPassParameters.stencilReference not yet implemented in WebGL"),e[F.STENCIL_REF]=e.stencilReference),this.glParameters=t,Q(this.device.gl,t)}beginOcclusionQuery(e){const t=this.props.occlusionQuerySet;null==t||t.beginOcclusionQuery()}endOcclusionQuery(){const e=this.props.occlusionQuerySet;null==e||e.endOcclusionQuery()}clear(){const e={...this.glParameters};let t=0;!1!==this.props.clearColor&&(t|=16384,e.clearColor=this.props.clearColor),!1!==this.props.clearDepth&&(t|=256,e.clearDepth=this.props.clearDepth),!1!==this.props.clearStencil&&(t|=1024,e.clearStencil=this.props.clearStencil),0!==t&&Xe(this.device.gl,e,(()=>{this.device.gl.clear(t)}))}clearColorBuffer(e,t){void 0===e&&(e=0),void 0===t&&(t=[0,0,0,0]),Xe(this.device.gl,{framebuffer:this.props.framebuffer},(()=>{switch(t.constructor){case Int32Array:this.device.gl.clearBufferiv(bt,e,t);break;case Uint32Array:this.device.gl.clearBufferuiv(bt,e,t);break;case Float32Array:default:this.device.gl.clearBufferfv(bt,e,t)}}))}}var It=n(3145);const Nt="Failed to deduce GL constant from typed array";function yt(e,t){const{clamped:n=!0}=t||{};switch(e){case F.FLOAT:return Float32Array;case F.UNSIGNED_SHORT:case F.UNSIGNED_SHORT_5_6_5:case F.UNSIGNED_SHORT_4_4_4_4:case F.UNSIGNED_SHORT_5_5_5_1:return Uint16Array;case F.UNSIGNED_INT:return Uint32Array;case F.UNSIGNED_BYTE:return n?Uint8ClampedArray:Uint8Array;case F.BYTE:return Int8Array;case F.SHORT:return Int16Array;case F.INT:return Int32Array;default:throw new Error("Failed to deduce typed array type from GL constant")}}const Lt={offset:0,stride:0,type:F.FLOAT,size:1,divisor:0,normalized:!1,integer:!1};class Pt{static getBytesPerElement(e){return yt(e.type||F.FLOAT).BYTES_PER_ELEMENT}static getBytesPerVertex(e){return yt(e.type||F.FLOAT).BYTES_PER_ELEMENT*e.size}static resolve(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return new Pt(...[Lt,...t])}constructor(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];t.forEach((e=>this._assign(e))),Object.freeze(this)}toString(){return JSON.stringify(this)}get BYTES_PER_ELEMENT(){return Pt.getBytesPerElement(this)}get BYTES_PER_VERTEX(){return Pt.getBytesPerVertex(this)}_assign(e){return void 0===e&&(e={}),void 0!==e.type&&(this.type=e.type,e.type!==F.INT&&e.type!==F.UNSIGNED_INT||(this.integer=!0)),void 0!==e.size&&(this.size=e.size),void 0!==e.offset&&(this.offset=e.offset),void 0!==e.stride&&(this.stride=e.stride),void 0!==e.normalize&&(this.normalized=e.normalize),void 0!==e.normalized&&(this.normalized=e.normalized),void 0!==e.integer&&(this.integer=e.integer),void 0!==e.divisor&&(this.divisor=e.divisor),void 0!==e.buffer&&(this.buffer=e.buffer),void 0!==e.index&&("boolean"==typeof e.index?this.index=e.index?1:0:this.index=e.index),void 0!==e.instanced&&(this.divisor=e.instanced?1:0),void 0!==e.isInstanced&&(this.divisor=e.isInstanced?1:0),void 0===this.offset&&delete this.offset,void 0===this.stride&&delete this.stride,void 0===this.type&&delete this.type,void 0===this.size&&delete this.size,void 0===this.divisor&&delete this.divisor,void 0===this.normalized&&delete this.normalized,void 0===this.integer&&delete this.integer,void 0===this.buffer&&delete this.buffer,void 0===this.index&&delete this.index,this}}const wt=[F.SAMPLER_2D,F.SAMPLER_CUBE,F.SAMPLER_3D,F.SAMPLER_2D_SHADOW,F.SAMPLER_2D_ARRAY,F.SAMPLER_2D_ARRAY_SHADOW,F.SAMPLER_CUBE_SHADOW,F.INT_SAMPLER_2D,F.INT_SAMPLER_3D,F.INT_SAMPLER_CUBE,F.INT_SAMPLER_2D_ARRAY,F.UNSIGNED_INT_SAMPLER_2D,F.UNSIGNED_INT_SAMPLER_3D,F.UNSIGNED_INT_SAMPLER_CUBE,F.UNSIGNED_INT_SAMPLER_2D_ARRAY],xt={[F.FLOAT]:[F.FLOAT,1,"float","f32","float32"],[F.FLOAT_VEC2]:[F.FLOAT,2,"vec2","vec2<f32>","float32x2"],[F.FLOAT_VEC3]:[F.FLOAT,3,"vec3","vec3<f32>","float32x3"],[F.FLOAT_VEC4]:[F.FLOAT,4,"vec4","vec4<f32>","float32x4"],[F.INT]:[F.INT,1,"int","i32","sint32"],[F.INT_VEC2]:[F.INT,2,"ivec2","vec2<i32>","sint32x2"],[F.INT_VEC3]:[F.INT,3,"ivec3","vec3<i32>","sint32x3"],[F.INT_VEC4]:[F.INT,4,"ivec4","vec4<i32>","sint32x4"],[F.UNSIGNED_INT]:[F.UNSIGNED_INT,1,"uint","u32","uint32"],[F.UNSIGNED_INT_VEC2]:[F.UNSIGNED_INT,2,"uvec2","vec2<u32>","uint32x2"],[F.UNSIGNED_INT_VEC3]:[F.UNSIGNED_INT,3,"uvec3","vec3<u32>","uint32x3"],[F.UNSIGNED_INT_VEC4]:[F.UNSIGNED_INT,4,"uvec4","vec4<u32>","uint32x4"],[F.BOOL]:[F.FLOAT,1,"bool","f32","float32"],[F.BOOL_VEC2]:[F.FLOAT,2,"bvec2","vec2<f32>","float32x2"],[F.BOOL_VEC3]:[F.FLOAT,3,"bvec3","vec3<f32>","float32x3"],[F.BOOL_VEC4]:[F.FLOAT,4,"bvec4","vec4<f32>","float32x4"],[F.FLOAT_MAT2]:[F.FLOAT,8,"mat2","mat2x2<f32>"],[F.FLOAT_MAT2x3]:[F.FLOAT,8,"mat2x3","mat2x3<f32>"],[F.FLOAT_MAT2x4]:[F.FLOAT,8,"mat2x4","mat2x4<f32>"],[F.FLOAT_MAT3x2]:[F.FLOAT,12,"mat3x2","mat3x2<f32>"],[F.FLOAT_MAT3]:[F.FLOAT,12,"mat3","mat3x3<f32>"],[F.FLOAT_MAT3x4]:[F.FLOAT,12,"mat3x4","mat3x4<f32>"],[F.FLOAT_MAT4x2]:[F.FLOAT,16,"mat4x2","mat4x2<f32>"],[F.FLOAT_MAT4x3]:[F.FLOAT,16,"mat4x3","mat4x3<f32>"],[F.FLOAT_MAT4]:[F.FLOAT,16,"mat4","mat4x4<f32>"]};function Mt(e){const t=xt[e];if(!t)throw new Error("uniform");const[n,i,,r]=t;return{format:r,components:i,glType:n}}function Ot(e){const t=xt[e];if(!t)throw new Error("attribute");const[,n,,i,r]=t;return{attributeType:i,vertexFormat:r,components:n}}function Ft(e,t){const n={attributes:[],bindings:[]};n.attributes=function(e,t){const n=[],i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const i=e.getActiveAttrib(t,r);if(!i)throw new Error("activeInfo");const{name:s,type:o}=i,a=e.getAttribLocation(t,s);if(a>=0){const{attributeType:e}=Ot(o),t=/instance/i.test(s)?"instance":"vertex";n.push({name:s,location:a,stepMode:t,type:e})}}return n.sort(((e,t)=>e.location-t.location)),n}(e,t);const i=function(e,t){const n=(n,i)=>e.getActiveUniformBlockParameter(t,n,i),i=[],r=e.getProgramParameter(t,F.ACTIVE_UNIFORM_BLOCKS);for(let s=0;s<r;s++){const r={name:e.getActiveUniformBlockName(t,s)||"",location:n(s,F.UNIFORM_BLOCK_BINDING),byteLength:n(s,F.UNIFORM_BLOCK_DATA_SIZE),vertex:n(s,F.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),fragment:n(s,F.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),uniformCount:n(s,F.UNIFORM_BLOCK_ACTIVE_UNIFORMS),uniforms:[]},o=n(s,F.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)||[],a=e.getActiveUniforms(t,o,F.UNIFORM_TYPE),l=e.getActiveUniforms(t,o,F.UNIFORM_SIZE),c=e.getActiveUniforms(t,o,F.UNIFORM_OFFSET),u=e.getActiveUniforms(t,o,F.UNIFORM_ARRAY_STRIDE);for(let n=0;n<r.uniformCount;++n){const i=e.getActiveUniform(t,o[n]);if(!i)throw new Error("activeInfo");r.uniforms.push({name:i.name,format:Mt(a[n]).format,type:a[n],arrayLength:l[n],byteOffset:c[n],byteStride:u[n]})}i.push(r)}return i.sort(((e,t)=>e.location-t.location)),i}(e,t);for(const l of i){const e=l.uniforms.map((e=>({name:e.name,format:e.format,byteOffset:e.byteOffset,byteStride:e.byteStride,arrayLength:e.arrayLength})));n.bindings.push({type:"uniform",name:l.name,location:l.location,visibility:(l.vertex?1:0)&(l.fragment?2:0),minBindingSize:l.byteLength,uniforms:e})}const r=function(e,t){const n=[],i=e.getProgramParameter(t,F.ACTIVE_UNIFORMS);for(let r=0;r<i;r++){const i=e.getActiveUniform(t,r);if(!i)throw new Error("activeInfo");const{name:s,size:o,type:a}=i,{name:l,isArray:c}=Ut(s);let u=e.getUniformLocation(t,l);const h={location:u,name:l,size:o,type:a,isArray:c};if(n.push(h),h.size>1)for(let r=0;r<h.size;r++){const i=l+"["+r+"]";u=e.getUniformLocation(t,i);const s={...h,name:i,location:u};n.push(s)}}return n}(e,t);let s=0;for(const l of r)if(o=l.type,wt.includes(o)){const{viewDimension:e,sampleType:t}=Bt(l.type);n.bindings.push({type:"texture",name:l.name,location:s,viewDimension:e,sampleType:t}),l.textureUnit=s,s+=1}var o;r.length&&(n.uniforms=r);const a=function(e,t){const n=[],i=e.getProgramParameter(t,F.TRANSFORM_FEEDBACK_VARYINGS);for(let r=0;r<i;r++){const i=e.getTransformFeedbackVarying(t,r);if(!i)throw new Error("activeInfo");const{name:s,type:o,size:a}=i,{glType:l,components:c}=Mt(o),u={location:r,name:s,accessor:new Pt({type:l,size:a*c})};n.push(u)}return n.sort(((e,t)=>e.location-t.location)),n}(e,t);return null!=a&&a.length&&(n.varyings=a),n}const Dt={[F.SAMPLER_2D]:["2d","float"],[F.SAMPLER_CUBE]:["cube","float"],[F.SAMPLER_3D]:["3d","float"],[F.SAMPLER_2D_SHADOW]:["3d","depth"],[F.SAMPLER_2D_ARRAY]:["2d-array","float"],[F.SAMPLER_2D_ARRAY_SHADOW]:["2d-array","depth"],[F.SAMPLER_CUBE_SHADOW]:["cube","float"],[F.INT_SAMPLER_2D]:["2d","sint"],[F.INT_SAMPLER_3D]:["3d","sint"],[F.INT_SAMPLER_CUBE]:["cube","sint"],[F.INT_SAMPLER_2D_ARRAY]:["2d-array","uint"],[F.UNSIGNED_INT_SAMPLER_2D]:["2d","uint"],[F.UNSIGNED_INT_SAMPLER_3D]:["3d","uint"],[F.UNSIGNED_INT_SAMPLER_CUBE]:["cube","uint"],[F.UNSIGNED_INT_SAMPLER_2D_ARRAY]:["2d-array","uint"]};function Bt(e){const t=Dt[e];if(!t)throw new Error("sampler");const[n,i]=t;return{viewDimension:n,sampleType:i}}function Ut(e){if("]"!==e[e.length-1])return{name:e,length:1,isArray:!1};const t=/([^[]*)(\[[0-9]+\])?/.exec(e);if(!t||t.length<2)throw new Error("Failed to parse GLSL uniform name "+e);return{name:t[1],length:t[2]?1:0,isArray:Boolean(t[2])}}function Gt(e,t,n,i){const r=e;let s=i;!0===s&&(s=1),!1===s&&(s=0);const o="number"==typeof s?[s]:s;switch(n){case F.SAMPLER_2D:case F.SAMPLER_CUBE:case F.SAMPLER_3D:case F.SAMPLER_2D_SHADOW:case F.SAMPLER_2D_ARRAY:case F.SAMPLER_2D_ARRAY_SHADOW:case F.SAMPLER_CUBE_SHADOW:case F.INT_SAMPLER_2D:case F.INT_SAMPLER_3D:case F.INT_SAMPLER_CUBE:case F.INT_SAMPLER_2D_ARRAY:case F.UNSIGNED_INT_SAMPLER_2D:case F.UNSIGNED_INT_SAMPLER_3D:case F.UNSIGNED_INT_SAMPLER_CUBE:case F.UNSIGNED_INT_SAMPLER_2D_ARRAY:if("number"!=typeof i)throw new Error("samplers must be set to integers");return e.uniform1i(t,i);case F.FLOAT:return e.uniform1fv(t,o);case F.FLOAT_VEC2:return e.uniform2fv(t,o);case F.FLOAT_VEC3:return e.uniform3fv(t,o);case F.FLOAT_VEC4:return e.uniform4fv(t,o);case F.INT:return e.uniform1iv(t,o);case F.INT_VEC2:return e.uniform2iv(t,o);case F.INT_VEC3:return e.uniform3iv(t,o);case F.INT_VEC4:return e.uniform4iv(t,o);case F.BOOL:return e.uniform1iv(t,o);case F.BOOL_VEC2:return e.uniform2iv(t,o);case F.BOOL_VEC3:return e.uniform3iv(t,o);case F.BOOL_VEC4:return e.uniform4iv(t,o);case F.UNSIGNED_INT:return r.uniform1uiv(t,o,1);case F.UNSIGNED_INT_VEC2:return r.uniform2uiv(t,o,2);case F.UNSIGNED_INT_VEC3:return r.uniform3uiv(t,o,3);case F.UNSIGNED_INT_VEC4:return r.uniform4uiv(t,o,4);case F.FLOAT_MAT2:return e.uniformMatrix2fv(t,!1,o);case F.FLOAT_MAT3:return e.uniformMatrix3fv(t,!1,o);case F.FLOAT_MAT4:return e.uniformMatrix4fv(t,!1,o);case F.FLOAT_MAT2x3:return r.uniformMatrix2x3fv(t,!1,o);case F.FLOAT_MAT2x4:return r.uniformMatrix2x4fv(t,!1,o);case F.FLOAT_MAT3x2:return r.uniformMatrix3x2fv(t,!1,o);case F.FLOAT_MAT3x4:return r.uniformMatrix3x4fv(t,!1,o);case F.FLOAT_MAT4x2:return r.uniformMatrix4x2fv(t,!1,o);case F.FLOAT_MAT4x3:return r.uniformMatrix4x3fv(t,!1,o)}throw new Error("Illegal uniform")}var kt=n(6282);function Ht(e){const t={bindings:{},uniforms:{}};return Object.keys(e).forEach((n=>{const i=e[n];var r;r=i,null!==(0,kt.H)(r)||"number"==typeof r||"boolean"==typeof r?t.uniforms[n]=i:t.bindings[n]=i})),t}class Vt extends It.r{constructor(e,t){super(e,t),this.uniforms={},this.bindings={},this.varyings=null,this._uniformCount=0,this._uniformSetters={},this.device=e,this.handle=this.props.handle||this.device.gl.createProgram(),this.device.setSpectorMetadata(this.handle,{id:this.props.id}),this.vs=t.vs,this.fs=t.fs;const{varyings:n,bufferMode:i=F.SEPARATE_ATTRIBS}=t;n&&n.length>0&&(this.varyings=n,this.device.gl.transformFeedbackVaryings(this.handle,n,i)),this._linkShaders(),h.R.time(1,"RenderPipeline "+this.id+" - shaderLayout introspection")(),this.introspectedLayout=Ft(this.device.gl,this.handle),h.R.timeEnd(1,"RenderPipeline "+this.id+" - shaderLayout introspection")(),this.shaderLayout=function(e,t){const n={...e,attributes:e.attributes.map((e=>({...e})))};for(const i of(null==t?void 0:t.attributes)||[]){const e=n.attributes.find((e=>e.name===i.name));e?(e.type=i.type||e.type,e.stepMode=i.stepMode||e.stepMode):h.R.warn("shader layout attribute "+i.name+" not present in shader")}return n}(this.introspectedLayout,t.shaderLayout)}destroy(){this.handle&&(this.device.gl.deleteProgram(this.handle),this.destroyed=!0)}setBindings(e,t){for(const[n,i]of Object.entries(e)){const e=this.shaderLayout.bindings.find((e=>e.name===n))||this.shaderLayout.bindings.find((e=>e.name===n+"Uniforms"));if(e){switch(i||h.R.warn('Unsetting binding "'+n+'" in render pipeline "'+this.id+'"')(),e.type){case"uniform":if(!(i instanceof Et||i.buffer instanceof Et))throw new Error("buffer value");break;case"texture":if(!(i instanceof it||i instanceof ot||i instanceof at))throw new Error("texture value");break;case"sampler":h.R.warn("Ignoring sampler "+n)();break;default:throw new Error(e.type)}this.bindings[n]=i}else{const e=this.shaderLayout.bindings.map((e=>'"'+e.name+'"')).join(", ");null!=t&&t.disableWarnings&&h.R.warn('Unknown binding "'+n+'" in render pipeline "'+this.id+'", expected one of '+e)()}}}draw(e){var t;const{renderPass:n,parameters:i=this.props.parameters,topology:r=this.props.topology,vertexArray:s,vertexCount:o,instanceCount:a,firstVertex:l=0,transformFeedback:c}=e,u=function(e){switch(e){case"point-list":return F.POINTS;case"line-list":return F.LINES;case"line-strip":return F.LINE_STRIP;case"triangle-list":return F.TRIANGLES;case"triangle-strip":return F.TRIANGLE_STRIP;default:throw new Error(e)}}(r),d=Boolean(s.indexBuffer),_=null==(t=s.indexBuffer)?void 0:t.glIndexType,p=Number(a)>0;if("success"!==this.linkStatus)return h.R.info(2,"RenderPipeline:"+this.id+".draw() aborted - waiting for shader linking")(),!1;if(!this._areTexturesRenderable())return h.R.info(2,"RenderPipeline:"+this.id+".draw() aborted - textures not yet loaded")(),!1;this.device.gl.useProgram(this.handle),s.bindBeforeRender(n),c&&c.begin(this.props.topology),this._applyBindings(),this._applyUniforms();const f=n;return function(e,t,n,i){if(Qe(t))return i(e);const r=e;ne(r.gl);try{return We(e,t),Q(r.gl,n),i(e)}finally{ie(r.gl)}}(this.device,i,f.glParameters,(()=>{d&&p?this.device.gl.drawElementsInstanced(u,o||0,_,l,a||0):d?this.device.gl.drawElements(u,o||0,_,l):p?this.device.gl.drawArraysInstanced(u,l,o||0,a||0):this.device.gl.drawArrays(u,l,o||0),c&&c.end()})),s.unbindAfterRender(n),!0}setUniformsWebGL(e){const{bindings:t}=Ht(e);Object.keys(t).forEach((e=>{h.R.warn('Unsupported value "'+JSON.stringify(t[e])+'" used in setUniforms() for key '+e+". Use setBindings() instead?")()})),Object.assign(this.uniforms,e)}async _linkShaders(){const{gl:e}=this.device;if(e.attachShader(this.handle,this.vs.handle),e.attachShader(this.handle,this.fs.handle),h.R.time(4,"linkProgram for "+this.id)(),e.linkProgram(this.handle),h.R.timeEnd(4,"linkProgram for "+this.id)(),h.R.level,!this.device.features.has("compilation-status-async-webgl")){const e=this._getLinkStatus();return void this._reportLinkStatus(e)}h.R.once(1,"RenderPipeline linking is asynchronous")(),await this._waitForLinkComplete(),h.R.info(2,"RenderPipeline "+this.id+" - async linking complete: "+this.linkStatus)();const t=this._getLinkStatus();this._reportLinkStatus(t)}_reportLinkStatus(e){var t;if("success"!==e){if("error"===this.vs.compilationStatus)throw this.vs.debugShader(),new Error("Error during compilation of shader "+this.vs.id);if("error"===(null==(t=this.fs)?void 0:t.compilationStatus))throw this.vs.debugShader(),new Error("Error during compilation of shader "+this.fs.id);throw new Error("Error during "+e+": "+this.device.gl.getProgramInfoLog(this.handle))}}_getLinkStatus(){const{gl:e}=this.device;if(!e.getProgramParameter(this.handle,e.LINK_STATUS))return this.linkStatus="error","linking";e.validateProgram(this.handle);return e.getProgramParameter(this.handle,e.VALIDATE_STATUS)?(this.linkStatus="success","success"):(this.linkStatus="error","validation")}async _waitForLinkComplete(){const e=async e=>await new Promise((t=>setTimeout(t,e)));if(!this.device.features.has("compilation-status-async-webgl"))return void await e(10);const{gl:t}=this.device;for(;;){if(t.getProgramParameter(this.handle,F.COMPLETION_STATUS_KHR))return;await e(10)}}_areTexturesRenderable(){let e=!0;for(const t of this.shaderLayout.bindings)this.bindings[t.name]||this.bindings[t.name.replace(/Uniforms$/,"")]||(h.R.warn("Binding "+t.name+" not found in "+this.id)(),e=!1);for(const[,t]of Object.entries(this.bindings))t instanceof ot&&t.update();return e}_applyBindings(){if("success"!==this.linkStatus)return;const{gl:e}=this.device;e.useProgram(this.handle);let t=0,n=0;for(const i of this.shaderLayout.bindings){const r=this.bindings[i.name]||this.bindings[i.name.replace(/Uniforms$/,"")];if(!r)throw new Error("No value for binding "+i.name+" in "+this.id);switch(i.type){case"uniform":const{name:s}=i,o=e.getUniformBlockIndex(this.handle,s);if(o===F.INVALID_INDEX)throw new Error("Invalid uniform block name "+s);e.uniformBlockBinding(this.handle,n,o),r instanceof Et?e.bindBufferBase(F.UNIFORM_BUFFER,n,r.handle):e.bindBufferRange(F.UNIFORM_BUFFER,n,r.buffer.handle,r.offset||0,r.size||r.buffer.byteLength-r.offset),n+=1;break;case"texture":if(!(r instanceof it||r instanceof ot||r instanceof at))throw new Error("texture");let a;if(r instanceof it)a=r.texture;else if(r instanceof ot)a=r;else{if(!(r instanceof at&&r.colorAttachments[0]instanceof it))throw new Error("No texture");h.R.warn("Passing framebuffer in texture binding may be deprecated. Use fbo.colorAttachments[0] instead")(),a=r.colorAttachments[0].texture}e.activeTexture(F.TEXTURE0+t),e.bindTexture(a.glTarget,a.handle),t+=1;break;case"sampler":break;case"storage":case"read-only-storage":throw new Error("binding type '"+i.type+"' not supported in WebGL")}}}_applyUniforms(){for(const t of this.shaderLayout.uniforms||[]){var e;const{name:n,location:i,type:r,textureUnit:s}=t,o=null!=(e=this.uniforms[n])?e:s;void 0!==o&&Gt(this.device.gl,i,r,o)}}}let Xt,Wt;Xt=Symbol.toStringTag;class Kt extends Ge.F{get[Xt](){return"CommandEncoder"}constructor(e,t){super(e,t,Kt.defaultProps)}}Kt.defaultProps={...Ge.F.defaultProps,measureExecutionTime:void 0},Wt=Symbol.toStringTag;class zt extends Ge.F{get[Wt](){return"CommandBuffer"}constructor(e,t){super(e,t,zt.defaultProps)}}zt.defaultProps={...Ge.F.defaultProps};class Yt extends zt{constructor(e){super(e,{}),this.commands=[],this.device=e}submitCommands(e){void 0===e&&(e=this.commands);for(const t of e)switch(t.name){case"copy-buffer-to-buffer":jt(this.device,t.options);break;case"copy-buffer-to-texture":qt(this.device,t.options);break;case"copy-texture-to-buffer":Qt(this.device,t.options);break;case"copy-texture-to-texture":Zt(this.device,t.options)}}}function jt(e,t){var n,i;const r=t.source,s=t.destination;e.gl.bindBuffer(F.COPY_READ_BUFFER,r.handle),e.gl.bindBuffer(F.COPY_WRITE_BUFFER,s.handle),e.gl.copyBufferSubData(F.COPY_READ_BUFFER,F.COPY_WRITE_BUFFER,null!=(n=t.sourceOffset)?n:0,null!=(i=t.destinationOffset)?i:0,t.size),e.gl.bindBuffer(F.COPY_READ_BUFFER,null),e.gl.bindBuffer(F.COPY_WRITE_BUFFER,null)}function qt(e,t){throw new Error("Not implemented")}function Qt(e,t){const{source:n,mipLevel:i=0,aspect:r="all",width:s=t.source.width,height:o=t.source.height,depthOrArrayLayers:a=0,origin:l=[0,0],destination:c,byteOffset:u=0,bytesPerRow:h,rowsPerImage:d}=t;if("all"!==r)throw new Error("not supported");if(0!==i||0!==a||h||d)throw new Error("not implemented");const{framebuffer:_,destroyFramebuffer:p}=Jt(n);try{const t=c,n=s||_.width,i=o||_.height,r=Me(_.colorAttachments[0].texture.props.format),a=r.format,h=r.type;e.gl.bindBuffer(F.PIXEL_PACK_BUFFER,t.handle),e.gl.bindFramebuffer(F.FRAMEBUFFER,_.handle),e.gl.readPixels(l[0],l[1],n,i,a,h,u)}finally{e.gl.bindBuffer(F.PIXEL_PACK_BUFFER,null),e.gl.bindFramebuffer(F.FRAMEBUFFER,null),p&&_.destroy()}}function Zt(e,t){const{source:n,origin:i=[0,0],destination:r}=t;let{width:s=t.destination.width,height:o=t.destination.width}=t;const a=F.RGBA,{framebuffer:l,destroyFramebuffer:c}=Jt(n),[u,h]=i;e.gl.bindFramebuffer(F.FRAMEBUFFER,l.handle);let d,_=null;if(!(r instanceof ot))throw new Error("whoops");return _=r,s=Number.isFinite(s)?s:_.width,o=Number.isFinite(o)?o:_.height,_.bind(0),d=_.destination,e.gl.copyTexImage2D(d,0,a,u,h,s,o,0),_&&_.unbind(),c&&l.destroy(),_}function Jt(e){if(e instanceof ke.g){const{width:t,height:n,id:i}=e;return{framebuffer:e.device.createFramebuffer({id:"framebuffer-for-"+i,width:t,height:n,colorAttachments:[e]}),destroyFramebuffer:!0}}return{framebuffer:e,destroyFramebuffer:!1}}class $t extends Kt{constructor(e,t){super(e,t),this.device=e,this.commandBuffer=new Yt(e)}destroy(){}finish(){this.commandBuffer.submitCommands()}copyBufferToBuffer(e){this.commandBuffer.commands.push({name:"copy-buffer-to-buffer",options:e})}copyBufferToTexture(e){this.commandBuffer.commands.push({name:"copy-buffer-to-texture",options:e})}copyTextureToBuffer(e){this.commandBuffer.commands.push({name:"copy-texture-to-buffer",options:e})}copyTextureToTexture(e){this.commandBuffer.commands.push({name:"copy-texture-to-texture",options:e})}pushDebugGroup(e){}popDebugGroup(){}insertDebugMarker(e){}resolveQuerySet(e,t,n){}}var en=n(7959);let tn;tn=Symbol.toStringTag;class nn extends Ge.F{get[tn](){return"VertexArray"}constructor(e,t){super(e,t,nn.defaultProps),this.indexBuffer=null,this.maxVertexAttributes=e.limits.maxVertexAttributes,this.attributes=new Array(this.maxVertexAttributes).fill(null);const{shaderLayout:n,bufferLayout:i}=t.renderPipeline||{};if(!n||!i)throw new Error("VertexArray");this.attributeInfos=(0,en.M)(n,i,this.maxVertexAttributes)}setConstantWebGL(e,t){throw new Error("constant attributes not supported")}}nn.defaultProps={...Ge.F.defaultProps,renderPipeline:null};var rn=n(1649),sn=n(7651);let on,an,ln,cn;on=Symbol.toStringTag;class un extends nn{get[on](){return"VertexArray"}static isConstantAttributeZeroSupported(e){return"Chrome"===(0,sn.X)()}constructor(e,t){super(e,t),this.buffer=null,this.bufferValue=null,this.device=e,this.handle=this.device.gl.createVertexArray()}destroy(){var e;(super.destroy(),this.buffer)&&(null==(e=this.buffer)||e.destroy());this.handle&&(this.device.gl.deleteVertexArray(this.handle),this.handle=void 0)}setIndexBuffer(e){const t=e;if(t&&t.glTarget!==F.ELEMENT_ARRAY_BUFFER)throw new Error("Use .setBuffer()");this.device.gl.bindVertexArray(this.handle),this.device.gl.bindBuffer(F.ELEMENT_ARRAY_BUFFER,t?t.handle:null),this.indexBuffer=t,this.device.gl.bindVertexArray(null)}setBuffer(e,t){const n=t;if(n.glTarget===F.ELEMENT_ARRAY_BUFFER)throw new Error("Use .setIndexBuffer()");const{size:i,type:r,stride:s,offset:o,normalized:a,integer:l,divisor:c}=this._getAccessor(e);this.device.gl.bindVertexArray(this.handle),this.device.gl.bindBuffer(F.ARRAY_BUFFER,n.handle),l?this.device.gl.vertexAttribIPointer(e,i,r,s,o):this.device.gl.vertexAttribPointer(e,i,r,a,s,o),this.device.gl.enableVertexAttribArray(e),this.device.gl.vertexAttribDivisor(e,c||0),this.attributes[e]=n,this.device.gl.bindVertexArray(null)}setConstantWebGL(e,t){this._enable(e,!1),this.attributes[e]=t}bindBeforeRender(){this.device.gl.bindVertexArray(this.handle),this._applyConstantAttributes()}unbindAfterRender(){this.device.gl.bindVertexArray(null)}_applyConstantAttributes(){for(let e=0;e<this.maxVertexAttributes;++e){const t=this.attributes[e];ArrayBuffer.isView(t)&&this.device.setConstantAttributeWebGL(e,t)}}_getAccessor(e){const t=this.attributeInfos[e];if(!t)throw new Error("Unknown attribute location "+e);const n=ue(t.bufferDataType);return{size:t.bufferComponents,type:n,stride:t.byteStride,offset:t.byteOffset,normalized:t.normalized,integer:t.integer,divisor:"instance"===t.stepMode?1:0}}_enable(e,t){void 0===t&&(t=!0);const n=un.isConstantAttributeZeroSupported(this.device);(t||(n||0!==e))&&(e=Number(e),this.device.gl.bindVertexArray(this.handle),t?this.device.gl.enableVertexAttribArray(e):this.device.gl.disableVertexAttribArray(e),this.device.gl.bindVertexArray(null))}getConstantBuffer(e,t){const n=function(e){if(Array.isArray(e))return new Float32Array(e);return e}(t),i=n.byteLength*e,r=n.length*e;if(this.buffer&&i!==this.buffer.byteLength)throw new Error("Buffer size is immutable, byte length "+i+" !== "+this.buffer.byteLength+".");let s=!this.buffer;if(this.buffer=this.buffer||this.device.createBuffer({byteLength:i}),s=s||!function(e,t){if(!e||!t||e.length!==t.length||e.constructor!==t.constructor)return!1;for(let n=0;n<e.length;++n)if(e[n]!==t[n])return!1;return!0}(n,this.bufferValue),s){const e=(0,rn.X)(t.constructor,r);!function(e){const{target:t,source:n,start:i=0,count:r=1}=e,s=n.length,o=r*s;let a=0;for(let l=i;a<s;a++)t[l++]=n[a];for(;a<o;)a<o-a?(t.copyWithin(i+a,i,i+a),a*=2):(t.copyWithin(i+a,i,i+o-a),a=o);e.target}({target:e,source:n,start:0,count:r}),this.buffer.write(e),this.bufferValue=t}return this.buffer}}an=Symbol.toStringTag;class hn extends Ge.F{get[an](){return"TransformFeedback"}constructor(e,t){super(e,t,hn.defaultProps)}}hn.defaultProps={...Ge.F.defaultProps,layout:void 0,buffers:{}};class dn extends hn{constructor(e,t){super(e,t),this.buffers={},this.unusedBuffers={},this.bindOnUse=!0,this._bound=!1,this.device=e,this.gl=e.gl,this.handle=this.props.handle||this.gl.createTransformFeedback(),this.layout=this.props.layout,t.buffers&&this.setBuffers(t.buffers),Object.seal(this)}destroy(){this.gl.deleteTransformFeedback(this.handle),super.destroy()}begin(e){void 0===e&&(e="point-list"),this.gl.bindTransformFeedback(F.TRANSFORM_FEEDBACK,this.handle),this.bindOnUse&&this._bindBuffers(),this.gl.beginTransformFeedback(function(e){switch(e){case"point-list":return F.POINTS;case"line-list":case"line-strip":return F.LINES;case"triangle-list":case"triangle-strip":return F.TRIANGLES;default:throw new Error(e)}}(e))}end(){this.gl.endTransformFeedback(),this.bindOnUse||this._unbindBuffers(),this.gl.bindTransformFeedback(F.TRANSFORM_FEEDBACK,null)}setBuffers(e){this.buffers={},this.unusedBuffers={},this.bind((()=>{for(const t in e)this.setBuffer(t,e[t])}))}setBuffer(e,t){const n=this._getVaryingIndex(e),{buffer:i,byteLength:r,byteOffset:s}=this._getBufferRange(t);if(n<0)return this.unusedBuffers[e]=i,void h.R.warn(this.id+" unusedBuffers varying buffer "+e)();this.buffers[n]={buffer:i,byteLength:r,byteOffset:s},this.bindOnUse||this._bindBuffer(n,i,s,r)}getBuffer(e){if(_n(e))return this.buffers[e]||null;const t=this._getVaryingIndex(e);return t>=0?this.buffers[t]:null}bind(e){if(void 0===e&&(e=this.handle),"function"!=typeof e)return this.gl.bindTransformFeedback(F.TRANSFORM_FEEDBACK,e),this;let t;return this._bound?t=e():(this.gl.bindTransformFeedback(F.TRANSFORM_FEEDBACK,this.handle),this._bound=!0,t=e(),this._bound=!1,this.gl.bindTransformFeedback(F.TRANSFORM_FEEDBACK,null)),t}unbind(){this.bind(null)}_getBufferRange(e){if(e instanceof Et)return{buffer:e,byteOffset:0,byteLength:e.byteLength};const{buffer:t,byteOffset:n=0,byteLength:i=e.buffer.byteLength}=e;return{buffer:t,byteOffset:n,byteLength:i}}_getVaryingIndex(e){if(_n(e))return Number(e);for(const t of this.layout.varyings)if(e===t.name)return t.location;return-1}_bindBuffers(){for(const e in this.buffers){const{buffer:t,byteLength:n,byteOffset:i}=this._getBufferRange(this.buffers[e]);this._bindBuffer(Number(e),t,i,n)}}_unbindBuffers(){for(const e in this.buffers)this.gl.bindBufferBase(F.TRANSFORM_FEEDBACK_BUFFER,Number(e),null)}_bindBuffer(e,t,n,i){void 0===n&&(n=0);const r=t&&t.handle;r&&void 0!==i?this.gl.bindBufferRange(F.TRANSFORM_FEEDBACK_BUFFER,e,r,n,i):this.gl.bindBufferBase(F.TRANSFORM_FEEDBACK_BUFFER,e,r)}}function _n(e){return"number"==typeof e?Number.isInteger(e):/^\d+$/.test(e)}ln=Symbol.toStringTag;class pn extends Ge.F{get[ln](){return"QuerySet"}constructor(e,t){super(e,t,pn.defaultProps)}}pn.defaultProps={...Ge.F.defaultProps,type:void 0,count:void 0},cn=Symbol.toStringTag;class fn extends pn{get[cn](){return"Query"}constructor(e,t){if(super(e,t),this.target=null,this._queryPending=!1,this._pollingPromise=null,this.device=e,t.count>1)throw new Error("WebGL QuerySet can only have one value");this.handle=this.device.gl.createQuery(),Object.seal(this)}destroy(){this.device.gl.deleteQuery(this.handle)}beginTimestampQuery(){return this._begin(F.TIME_ELAPSED_EXT)}endTimestampQuery(){this._end()}beginOcclusionQuery(e){return this._begin(null!=e&&e.conservative?F.ANY_SAMPLES_PASSED_CONSERVATIVE:F.ANY_SAMPLES_PASSED)}endOcclusionQuery(){this._end()}beginTransformFeedbackQuery(){return this._begin(F.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN)}endTransformFeedbackQuery(){this._end()}async resolveQuery(){return[await this.pollQuery()]}_begin(e){this._queryPending||(this.target=e,this.device.gl.beginQuery(this.target,this.handle))}_end(){this._queryPending||this.target&&(this.device.gl.endQuery(this.target),this.target=null,this._queryPending=!0)}isResultAvailable(){if(!this._queryPending)return!1;const e=this.device.gl.getQueryParameter(this.handle,F.QUERY_RESULT_AVAILABLE);return e&&(this._queryPending=!1),e}isTimerDisjoint(){return this.device.gl.getParameter(F.GPU_DISJOINT_EXT)}getResult(){return this.device.gl.getQueryParameter(this.handle,F.QUERY_RESULT)}getTimerMilliseconds(){return this.getResult()/1e6}pollQuery(e){if(void 0===e&&(e=Number.POSITIVE_INFINITY),this._pollingPromise)return this._pollingPromise;let t=0;return this._pollingPromise=new Promise(((n,i)=>{const r=()=>{this.isResultAvailable()?(n(this.getResult()),this._pollingPromise=null):t++>e?(i("Timed out"),this._pollingPromise=null):requestAnimationFrame(r)};requestAnimationFrame(r)})),this._pollingPromise}}function gn(e){switch(e){case F.ALPHA:case F.R32F:case F.RED:return 1;case F.RG32F:case F.RG:return 2;case F.RGB:case F.RGB32F:return 3;case F.RGBA:case F.RGBA32F:return 4;default:return 0}}function mn(e,t){var n;const{sourceX:i=0,sourceY:r=0,sourceFormat:s=F.RGBA,sourceAttachment:o=F.COLOR_ATTACHMENT0}=t||{};let{target:a=null,sourceWidth:l,sourceHeight:c,sourceType:u}=t||{};const{framebuffer:h,deleteFramebuffer:d}=An(e),{gl:_,handle:p}=h;l=l||h.width,c=c||h.height;const f=o-F.COLOR_ATTACHMENT0;u=u||(null==(n=h.colorAttachments[f])||null==(n=n.texture)?void 0:n.glType)||F.UNSIGNED_BYTE,a=function(e,t,n,i,r){if(e)return e;const s=yt(t=t||F.UNSIGNED_BYTE,{clamped:!1}),o=gn(n);return new s(i*r*o)}(a,u,s,l,c),u=u||function(e){switch(ArrayBuffer.isView(e)?e.constructor:e){case Float32Array:return F.FLOAT;case Uint16Array:return F.UNSIGNED_SHORT;case Uint32Array:return F.UNSIGNED_INT;case Uint8Array:case Uint8ClampedArray:return F.UNSIGNED_BYTE;case Int8Array:return F.BYTE;case Int16Array:return F.SHORT;case Int32Array:return F.INT;default:throw new Error(Nt)}}(a);const g=_.bindFramebuffer(F.FRAMEBUFFER,p);return _.readPixels(i,r,l,c,s,u,a),_.bindFramebuffer(F.FRAMEBUFFER,g||null),d&&h.destroy(),a}function En(e,t){const{target:n,sourceX:i=0,sourceY:r=0,sourceFormat:s=F.RGBA,targetByteOffset:o=0}=t||{};let{sourceWidth:a,sourceHeight:l,sourceType:c}=t||{};const{framebuffer:u,deleteFramebuffer:h}=An(e);a=a||u.width,l=l||u.height;const d=u;c=c||F.UNSIGNED_BYTE;let _=n;if(!_){const e=o+a*l*gn(s)*function(e){switch(e){case F.UNSIGNED_BYTE:return 1;case F.UNSIGNED_SHORT_5_6_5:case F.UNSIGNED_SHORT_4_4_4_4:case F.UNSIGNED_SHORT_5_5_5_1:return 2;case F.FLOAT:return 4;default:return 0}}(c);_=d.device.createBuffer({byteLength:e})}const p=e.device.createCommandEncoder();return p.copyTextureToBuffer({source:e,width:a,height:l,origin:[i,r],destination:_,byteOffset:o}),p.destroy(),h&&u.destroy(),_}function An(e){return e instanceof Ve?{framebuffer:e,deleteFramebuffer:!1}:{framebuffer:Rn(e),deleteFramebuffer:!0}}function Rn(e,t){const{device:n,width:i,height:r,id:s}=e;return n.createFramebuffer({...t,id:"framebuffer-for-"+s,width:i,height:r,colorAttachments:[e]})}class vn extends C{static isSupported(){return"undefined"!=typeof WebGL2RenderingContext}static attach(e){if(e instanceof vn)return e;if((null==e?void 0:e.device)instanceof C)return e.device;if(!function(e){if("undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext)return!0;return Boolean(e&&Number.isFinite(e._version))}(e))throw new Error("Invalid WebGL2RenderingContext");return new vn({gl:e})}static async create(e){var t;void 0===e&&(e={}),h.R.groupCollapsed(1,"WebGLDevice created")();const n=[];e.debug&&n.push(async function(){(0,u.B)()&&!globalThis.WebGLDebugUtils&&(globalThis.global=globalThis.global||globalThis,globalThis.global.module={},await ct("https://unpkg.com/webgl-debug@2.0.1/index.js"))}()),e.spector&&n.push(async function(e){if(!globalThis.SPECTOR)try{await ct("https://spectorcdn.babylonjs.com/spector.bundle.js")}catch(t){h.R.warn(String(t))}}()),"string"==typeof e.canvas&&n.push(x.pageLoaded);const i=await Promise.allSettled(n);for(const o of i)"rejected"===o.status&&h.R.error("Failed to initialize debug libraries "+o.reason)();if(h.R.probe(2,"DOM is loaded")(),null!=(t=e.gl)&&t.device)return h.R.warn("reattaching existing device")(),vn.attach(e.gl);const r=new vn(e),s="Created "+r.type+(r.debug?" debug":"")+" context: "+r.info.vendor+", "+r.info.renderer+" for canvas: "+r.canvasContext.id;return h.R.probe(1,s)(),h.R.table(1,r.info)(),h.R.groupEnd(1)(),r}constructor(e){var t,n;super({...e,id:e.id||"webgl-device"}),this.type="webgl",this.renderPass=null,this.debug=!1,this._canvasSizeInfo={clientWidth:0,clientHeight:0,devicePixelRatio:1},this._extensions={},this._polyfilled=!1;const i=null==(t=e.gl)?void 0:t.device;if(i)throw new Error("WebGL context already attached to device "+i.id);const r=(null==(n=e.gl)?void 0:n.canvas)||e.canvas;this.canvasContext=new lt(this,{...e,canvas:r}),this.lost=new Promise((e=>{this._resolveContextLost=e}));let s=e.gl||null;if(s||(s=function(e,t){t={...oe,...t};let n=null;const i=e=>n=e.statusMessage||n;e.addEventListener("webglcontextcreationerror",i,!1);let r=null;if(r||(r=e.getContext("webgl2",t)),e.removeEventListener("webglcontextcreationerror",i,!1),!r)throw new Error("Failed to create WebGL context: "+(n||"Unknown error"));if(t.onContextLost){const{onContextLost:n}=t;e.addEventListener("webglcontextlost",(e=>n(e)),!1)}if(t.onContextRestored){const{onContextRestored:n}=t;e.addEventListener("webglcontextrestored",(e=>n(e)),!1)}return r}(this.canvasContext.canvas,{...e,onContextLost:e=>{var t;return null==(t=this._resolveContextLost)?void 0:t.call(this,{reason:"destroyed",message:"Entered sleep mode, or too many apps or browser tabs are using the GPU."})}})),!s)throw new Error("WebGL context creation failed");this.handle=s,this.gl=s,this.gl.device=this,this.gl._version=2,this.info=le(this.gl,this._extensions),this.limits=new Ue(this.gl),this.features=new Be(this.gl,this._extensions,this.props.disabledFeatures),this.props.initalizeFeatures&&this.features.initializeFeatures(),this.canvasContext.resize();const{enable:o=!0,copyState:a=!1}=e;te(this.gl,{enable:o,copyState:a,log:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return h.R.log(1,...t)()}}),e.debug&&(this.gl=pt(this.gl,{...e,throwOnError:!0}),this.debug=!0,h.R.level=Math.max(h.R.level,1),h.R.warn("WebGL debug mode activated. Performance reduced.")()),e.spector&&(this.spectorJS=function(e){var t,n,i,r;if(null==(t=e={...ut,...e})||!t.spector)return null;if(!ht&&globalThis.SPECTOR&&(h.R.probe(1,"SPECTOR found and initialized")(),ht=new globalThis.SPECTOR.Spector,globalThis.luma&&(globalThis.luma.spector=ht)),!ht)return null;if(dt||(dt=!0,ht.spyCanvases(),null==(i=ht)||i.onCaptureStarted.add((e=>h.R.info("Spector capture started:",e)())),null==(r=ht)||r.onCapture.add((e=>{var t,n,i;h.R.info("Spector capture complete:",e)(),null==(t=ht)||t.getResultUI(),null==(n=ht)||n.resultView.display(),null==(i=ht)||i.resultView.addCapture(e)}))),null!=(n=e)&&n.canvas){var s,o;if("string"==typeof e.spector&&e.spector!==e.canvas.id)return ht;null==(s=ht)||s.startCapture(null==(o=e)?void 0:o.canvas,500),new Promise((e=>setTimeout(e,2e3))).then((e=>{var t;h.R.info("Spector capture stopped after 2 seconds")(),null==(t=ht)||t.stopCapture()}))}return ht}({...this.props,canvas:this.handle.canvas}))}destroy(){}get isLost(){return this.gl.isContextLost()}getSize(){return[this.gl.drawingBufferWidth,this.gl.drawingBufferHeight]}isTextureFormatSupported(e){return xe(this.gl,e,this._extensions)}isTextureFormatFilterable(e){return function(e,t,n){if(!xe(e,t,n))return!1;if(t.startsWith("depth")||t.startsWith("stencil"))return!1;try{if(R(t).signed)return!1}catch{return!1}return t.endsWith("32float")?Boolean(ae(e,"OES_texture_float_linear, extensions",n)):!t.endsWith("16float")||Boolean(ae(e,"OES_texture_half_float_linear, extensions",n))}(this.gl,e,this._extensions)}isTextureFormatRenderable(e){return function(e,t,n){return!!xe(e,t,n)&&"number"!=typeof t}(this.gl,e,this._extensions)}createCanvasContext(e){throw new Error("WebGL only supports a single canvas")}createBuffer(e){const t=this._getBufferProps(e);return new Et(this,t)}_createTexture(e){return new ot(this,e)}createExternalTexture(e){throw new Error("createExternalTexture() not implemented")}createSampler(e){return new tt(this,e)}createShader(e){return new vt(this,e)}createFramebuffer(e){return new at(this,e)}createVertexArray(e){return new un(this,e)}createTransformFeedback(e){return new dn(this,e)}createQuerySet(e){return new fn(this,e)}createRenderPipeline(e){return new Vt(this,e)}beginRenderPass(e){return new Ct(this,e)}createComputePipeline(e){throw new Error("ComputePipeline not supported in WebGL")}beginComputePass(e){throw new Error("ComputePass not supported in WebGL")}createCommandEncoder(e){return new $t(this,e)}submit(){var e;null==(e=this.renderPass)||e.end(),this.renderPass=null}readPixelsToArrayWebGL(e,t){return mn(e,t)}readPixelsToBufferWebGL(e,t){return En(e,t)}setParametersWebGL(e){Q(this.gl,e)}getParametersWebGL(e){return Z(this.gl,e)}withParametersWebGL(e,t){Xe(this.gl,e,t)}clearWebGL(e){!function(e,t){const{framebuffer:n=null,color:i=null,depth:r=null,stencil:s=null}=t||{},o={};n&&(o.framebuffer=n);let a=0;i&&(a|=16384,!0!==i&&(o.clearColor=i)),r&&(a|=256,!0!==r&&(o.clearDepth=r)),s&&(a|=1024,!0!==r&&(o.clearStencil=r));const l=e.gl;Xe(l,o,(()=>{l.clear(a)}))}(this,e)}loseDevice(){var e;let t=!1;const n=this.getExtension("WEBGL_lose_context").WEBGL_lose_context;return n&&(t=!0,n.loseContext()),null==(e=this._resolveContextLost)||e.call(this,{reason:"destroyed",message:"Application triggered context loss"}),t}pushState(){ne(this.gl)}popState(){ie(this.gl)}setSpectorMetadata(e,t){e.__SPECTOR_Metadata=t}getGLKey(e,t){t=t||this.gl2||this.gl;const n=Number(e);for(const i in t)if(t[i]===n)return"GL."+i;return String(e)}setConstantAttributeWebGL(e,t){const n=this.limits.maxVertexAttributes;this._constants=this._constants||new Array(n).fill(null);const i=this._constants[e];switch(i&&function(e,t){if(!e||!t||e.length!==t.length||e.constructor!==t.constructor)return!1;for(let n=0;n<e.length;++n)if(e[n]!==t[n])return!1;return!0}(i,t)&&h.R.info(1,"setConstantAttributeWebGL("+e+") could have been skipped, value unchanged")(),this._constants[e]=t,t.constructor){case Float32Array:!function(e,t,n){switch(n.length){case 1:e.gl.vertexAttrib1fv(t,n);break;case 2:e.gl.vertexAttrib2fv(t,n);break;case 3:e.gl.vertexAttrib3fv(t,n);break;case 4:e.gl.vertexAttrib4fv(t,n)}}(this,e,t);break;case Int32Array:!function(e,t,n){e.gl.vertexAttribI4iv(t,n)}(this,e,t);break;case Uint32Array:!function(e,t,n){e.gl.vertexAttribI4uiv(t,n)}(this,e,t);break;default:throw new Error("constant")}}getExtension(e){return ae(this.gl,e,this._extensions),this._extensions}}vn.type="webgl";class Tn extends g.h{constructor(e,t){super(e,t),this.device=e,this.byteLength=function(e){var t;return e.byteLength||(null==(t=e.data)?void 0:t.byteLength)||0}(t);const n=Boolean(t.data),i=4*Math.ceil(this.byteLength/4);this.handle=this.props.handle||this.device.handle.createBuffer({size:i,usage:this.props.usage||GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,mappedAtCreation:this.props.mappedAtCreation||n,label:this.props.id}),t.data&&this._writeMapped(t.data),n&&!t.mappedAtCreation&&this.handle.unmap()}destroy(){var e;null==(e=this.handle)||e.destroy(),this.handle=null}write(e,t){void 0===t&&(t=0),this.device.handle.queue.writeBuffer(this.handle,t,e.buffer,e.byteOffset,e.byteLength)}async readAsync(e,t){void 0===e&&(e=0),void 0===t&&(t=this.byteLength);const n=new Tn(this.device,{usage:g.h.MAP_READ|g.h.COPY_DST,byteLength:t}),i=this.device.handle.createCommandEncoder();i.copyBufferToBuffer(this.handle,e,n.handle,0,t),this.device.handle.queue.submit([i.finish()]),await n.handle.mapAsync(GPUMapMode.READ,e,t);const r=n.handle.getMappedRange().slice(0);return n.handle.unmap(),n.destroy(),new Uint8Array(r)}_writeMapped(e){const t=this.handle.getMappedRange();new e.constructor(t).set(e)}mapAsync(e,t,n){return void 0===t&&(t=0),this.handle.mapAsync(e,t,n)}getMappedRange(e,t){return void 0===e&&(e=0),this.handle.getMappedRange(e,t)}unmap(){this.handle.unmap()}}function Sn(e){if(e.includes("webgl"))throw new Error("webgl-only format");return e}class bn extends et.L{constructor(e,t){super(e,t),this.device=e;const n={...this.props};"comparison-sampler"!==n.type&&delete n.compare,this.handle=this.handle||this.device.handle.createSampler(n),this.handle.label=this.props.id}destroy(){this.handle=null}}class Cn extends nt.X{constructor(e,t){super(e,t),this.device=e,this.texture=t.texture,this.handle=this.handle||this.texture.handle.createView({format:t.format||this.texture.format,dimension:t.dimension||this.texture.dimension,aspect:t.aspect,baseMipLevel:t.baseMipLevel,mipLevelCount:t.mipLevelCount,baseArrayLayer:t.baseArrayLayer,arrayLayerCount:t.arrayLayerCount}),this.handle.label=this.props.id}destroy(){this.handle=null}}const In={"1d":"1d","2d":"2d","2d-array":"2d",cube:"2d","cube-array":"2d","3d":"3d"};class Nn extends ke.g{constructor(e,t){super(e,t),this.height=1,this.width=1,this.device=e,t.data instanceof Promise?t.data.then((e=>{this.props={...this.props,data:e},this.initialize(this.props)})):this.initialize(t)}destroy(){var e;null==(e=this.handle)||e.destroy(),this.handle=null}createView(e){return new Cn(this.device,{...e,texture:this})}initialize(e){var t;this.handle=this.props.handle||this.createHandle(),(t=this.handle).label||(t.label=this.id),this.props.data&&this.setData({data:this.props.data}),this.width=this.handle.width,this.height=this.handle.height,this.sampler=e.sampler instanceof bn?e.sampler:new bn(this.device,e.sampler||{}),this.view=new Cn(this.device,{...this.props,texture:this})}createHandle(){var e,t;const n=this.props.width||(null==(e=this.props.data)?void 0:e.width)||1,i=this.props.height||(null==(t=this.props.data)?void 0:t.height)||1;return this.device.handle.createTexture({label:this.id,size:{width:n,height:i,depthOrArrayLayers:this.depth},usage:this.props.usage||ke.g.TEXTURE|ke.g.COPY_DST,dimension:In[this.dimension],format:Sn(this.format),mipLevelCount:this.mipLevels,sampleCount:this.props.samples})}createGPUTextureView(){return this.handle.createView({label:this.id})}setSampler(e){return this.sampler=e instanceof bn?e:new bn(this.device,e),this}setTexture1DData(e){throw new Error("not implemented")}setTexture2DData(e,t,n){throw new Error("not implemented")}setTexture3DData(e,t,n){throw new Error("not implemented")}setTextureCubeData(e,t){throw new Error("not implemented")}setTextureArrayData(e){throw new Error("not implemented")}setTextureCubeArrayData(e){throw new Error("not implemented")}setData(e){return this.setImage({source:e.data})}setImage(e){const{source:t,width:n=e.source.width,height:i=e.source.height,depth:r=1,sourceX:s=0,sourceY:o=0,mipLevel:a=0,x:l=0,y:c=0,z:u=0,aspect:h="all",colorSpace:d="srgb",premultipliedAlpha:_=!1}=e;return this.device.handle.queue.copyExternalImageToTexture({source:t,origin:[s,o]},{texture:this.handle,origin:[l,c,u],mipLevel:a,aspect:h,colorSpace:d,premultipliedAlpha:_},[n,i,r]),{width:n,height:i}}}let yn;yn=Symbol.toStringTag;class Ln extends Ge.F{get[yn](){return"ExternalTexture"}constructor(e,t){super(e,t,Ln.defaultProps)}}Ln.defaultProps={...Ge.F.defaultProps,source:void 0,colorSpace:"srgb"};class Pn extends Ln{constructor(e,t){super(e,t),this.device=e,this.handle=this.props.handle||this.device.handle.importExternalTexture({source:t.source,colorSpace:t.colorSpace}),this.sampler=null}destroy(){this.handle=null}setSampler(e){return this.sampler=e instanceof bn?e:new bn(this.device,e),this}}class wn extends At.M{constructor(e,t){super(e,t),this.device=e,this.device.handle.pushErrorScope("validation"),this.handle=this.props.handle||this.createHandle(),this.handle.label=this.props.id,this._checkCompilationError(this.device.handle.popErrorScope())}async _checkCompilationError(e){const t=await e;if(t){this.debugShader();const e=await this.getCompilationInfo();throw h.R.error("Shader compilation error: "+t.message,e)(),new Error("Shader compilation error: "+t.message)}}destroy(){this.handle=null}async getCompilationInfo(){return(await this.handle.getCompilationInfo()).messages}createHandle(){const{source:e}=this.props,t=e.includes("#version");if("glsl"===this.props.language||t)throw new Error("GLSL shaders are not supported in WebGPU");return this.device.handle.createShaderModule({code:e})}}function xn(e){return e.depthStencil=e.depthStencil||{format:"depth24plus",stencilFront:{},stencilBack:{},depthWriteEnabled:!1,depthCompare:"less-equal"},e.depthStencil}function Mn(e){return xn(e).stencilFront}function On(e){return xn(e).stencilBack}const Fn={cullMode:(e,t,n)=>{n.primitive=n.primitive||{},n.primitive.cullMode=t},frontFace:(e,t,n)=>{n.primitive=n.primitive||{},n.primitive.frontFace=t},depthWriteEnabled:(e,t,n)=>{xn(n).depthWriteEnabled=t},depthCompare:(e,t,n)=>{xn(n).depthCompare=t},depthFormat:(e,t,n)=>{xn(n).format=t},depthBias:(e,t,n)=>{xn(n).depthBias=t},depthBiasSlopeScale:(e,t,n)=>{xn(n).depthBiasSlopeScale=t},depthBiasClamp:(e,t,n)=>{xn(n).depthBiasClamp=t},stencilReadMask:(e,t,n)=>{xn(n).stencilReadMask=t},stencilWriteMask:(e,t,n)=>{xn(n).stencilWriteMask=t},stencilCompare:(e,t,n)=>{const i=Mn(n),r=On(n);i.compare=t,r.compare=t},stencilPassOperation:(e,t,n)=>{const i=Mn(n),r=On(n);i.passOp=t,r.passOp=t},stencilFailOperation:(e,t,n)=>{const i=Mn(n),r=On(n);i.failOp=t,r.failOp=t},stencilDepthFailOperation:(e,t,n)=>{const i=Mn(n),r=On(n);i.depthFailOp=t,r.depthFailOp=t},sampleCount:(e,t,n)=>{n.multisample=n.multisample||{},n.multisample.count=t},sampleMask:(e,t,n)=>{n.multisample=n.multisample||{},n.multisample.mask=t},sampleAlphaToCoverageEnabled:(e,t,n)=>{n.multisample=n.multisample||{},n.multisample.alphaToCoverageEnabled=t},colorMask:(e,t,n)=>{Un(n)[0].writeMask=t},blendColorOperation:(e,t,n)=>{Un(n)}},Dn={primitive:{cullMode:"back",topology:"triangle-list"},vertex:{module:void 0,entryPoint:"main"},fragment:{module:void 0,entryPoint:"main",targets:[]},layout:"auto"};function Bn(e,t){void 0===t&&(t={}),Object.assign(e,{...Dn,...e}),function(e,t){for(const[n,i]of Object.entries(t)){const t=Fn[n];if(!t)throw new Error("Illegal parameter "+n);t(n,i,e)}}(e,t)}function Un(e){var t,n,i,r,s;if(e.fragment.targets=(null==(t=e.fragment)?void 0:t.targets)||[],!Array.isArray(null==(n=e.fragment)?void 0:n.targets))throw new Error("colorstate");0===(null==(i=e.fragment)||null==(i=i.targets)?void 0:i.length)&&(null==(s=e.fragment.targets)||s.push({}));return null==(r=e.fragment)?void 0:r.targets}function Gn(e,t,n,i){const r=function(e,t){const n=[];for(const[i,r]of Object.entries(e)){const e=kn(t,i);e&&n.push(Hn(r,e.location))}return n}(i,n);return e.createBindGroup({layout:t,entries:r})}function kn(e,t){const n=e.bindings.find((e=>e.name===t||e.name+"uniforms"===t.toLocaleLowerCase()));return n||h.R.warn("Binding "+t+" not set: Not found in shader layout.")(),n||null}function Hn(e,t){if(e instanceof g.h)return{binding:t,resource:{buffer:e.handle}};if(e instanceof et.L)return{binding:t,resource:e.handle};if(e instanceof ke.g)return{binding:t,resource:e.handle.createView({label:"bind-group-auto-created"})};throw new Error("invalid binding")}var Vn=n(7621);function Xn(e){if(e.endsWith("-webgl"))throw new Error("WebGPU does not support vertex format "+e);return e}function Wn(e,t){const n=[],i=new Set;for(const r of t){const t=[];let s="vertex",o=0;const a=r.format;if(r.attributes)for(const n of r.attributes){const l=Kn(e,n.attribute,i),c=null==l?void 0:l.location;s=(null==l?void 0:l.stepMode)||(null!=l&&l.name.startsWith("instance")?"instance":"vertex"),t.push({format:Xn(n.format||r.format),offset:n.byteOffset,shaderLocation:c}),o+=(0,Vn.w)(a).byteLength}else{const n=Kn(e,r.name,i);if(!n)continue;o=(0,Vn.w)(a).byteLength,s=n.stepMode||(n.name.startsWith("instance")?"instance":"vertex"),t.push({format:Xn(a),offset:0,shaderLocation:n.location})}n.push({arrayStride:r.byteStride||o,stepMode:s,attributes:t})}for(const r of e.attributes)i.has(r.name)||n.push({arrayStride:(0,Vn.w)("float32x3").byteLength,stepMode:r.stepMode||(r.name.startsWith("instance")?"instance":"vertex"),attributes:[{format:Xn("float32x3"),offset:0,shaderLocation:r.location}]});return n}function Kn(e,t,n){const i=e.attributes.find((e=>e.name===t));if(!i)return h.R.warn("Unknown attribute "+t)(),null;if(n.has(t))throw new Error("Duplicate attribute "+t);return n.add(t),i}class zn extends It.r{constructor(e,t){if(super(e,t),this.fs=null,this._bindGroupLayout=null,this._bindGroup=null,this.device=e,this.handle=this.props.handle,!this.handle){const e=this._getRenderPipelineDescriptor();h.R.groupCollapsed(1,"new WebGPURenderPipeline("+this.id+")")(),h.R.probe(1,JSON.stringify(e,null,2))(),h.R.groupEnd(1)(),this.handle=this.device.handle.createRenderPipeline(e)}this.handle.label=this.props.id,this.vs=t.vs,this.fs=t.fs,this._bindings={...this.props.bindings}}destroy(){this.handle=null}setBindings(e){Object.assign(this._bindings,e)}draw(e){const t=e.renderPass;t.handle.setPipeline(this.handle);const n=this._getBindGroup();return n&&t.handle.setBindGroup(0,n),e.vertexArray.bindBeforeRender(e.renderPass),e.indexCount?t.handle.drawIndexed(e.indexCount,e.instanceCount,e.firstIndex,e.baseVertex,e.firstInstance):t.handle.draw(e.vertexCount||0,e.instanceCount||1,e.firstInstance),e.vertexArray.unbindAfterRender(e.renderPass),!0}_getBindGroup(){return 0===this.shaderLayout.bindings.length?null:(this._bindGroupLayout=this._bindGroupLayout||this.handle.getBindGroupLayout(0),this._bindGroup=this._bindGroup||Gn(this.device.handle,this._bindGroupLayout,this.shaderLayout,this._bindings),this._bindGroup)}_getRenderPipelineDescriptor(){const e={vertex:{module:this.props.vs.handle,entryPoint:this.props.vertexEntryPoint||"main",buffers:Wn(this.shaderLayout,this.props.bufferLayout)},fragment:{module:this.props.fs.handle,entryPoint:this.props.fragmentEntryPoint||"main",targets:[{format:Sn(this.device.getCanvasContext().format)}]},primitive:{topology:this.props.topology},layout:"auto"};return Bn(e,this.props.parameters),e}}class Yn extends Ve{constructor(e,t){super(e,t),this.colorAttachments=[],this.depthStencilAttachment=null,this.device=e,this.autoCreateAttachmentTextures()}}var jn=n(9316);class qn extends jn.C{constructor(e,t){super(e,t),this._bindGroupLayout=null,this._bindGroup=null,this._bindings={},this.device=e;const n=this.props.shader;this.handle=this.props.handle||this.device.handle.createComputePipeline({label:this.props.id,compute:{module:n.handle,entryPoint:this.props.entryPoint,constants:this.props.constants},layout:"auto"})}setBindings(e){Object.assign(this._bindings,e)}_getBindGroup(){return this._bindGroupLayout=this._bindGroupLayout||this.handle.getBindGroupLayout(0),this._bindGroup=this._bindGroup||Gn(this.device.handle,this._bindGroupLayout,this.shaderLayout,this._bindings),this._bindGroup}}class Qn extends St{constructor(e,t){void 0===t&&(t={}),super(e,t),this.pipeline=null,this.device=e;const n=t.framebuffer||e.getCanvasContext().getCurrentFramebuffer(),i=this.getRenderPassDescriptor(n),r=t.timestampQuerySet;if(r&&(i.occlusionQuerySet=r.handle),e.features.has("timestamp-query")){const e=t.timestampQuerySet;i.timestampWrites=e?{querySet:e.handle,beginningOfPassWriteIndex:t.beginTimestampIndex,endOfPassWriteIndex:t.endTimestampIndex}:void 0}if(!e.commandEncoder)throw new Error("commandEncoder not available");this.handle=this.props.handle||e.commandEncoder.beginRenderPass(i),this.handle.label=this.props.id,h.R.groupCollapsed(3,"new WebGPURenderPass("+this.id+")")(),h.R.probe(3,JSON.stringify(i,null,2))(),h.R.groupEnd(3)()}destroy(){}end(){this.handle.end()}setPipeline(e){this.pipeline=e,this.handle.setPipeline(this.pipeline.handle)}setBindings(e){var t,n;null==(t=this.pipeline)||t.setBindings(e);const i=null==(n=this.pipeline)?void 0:n._getBindGroup();i&&this.handle.setBindGroup(0,i)}setIndexBuffer(e,t,n,i){void 0===n&&(n=0),this.handle.setIndexBuffer(e.handle,t,n,i)}setVertexBuffer(e,t,n){void 0===n&&(n=0),this.handle.setVertexBuffer(e,t.handle,n)}draw(e){e.indexCount?this.handle.drawIndexed(e.indexCount,e.instanceCount,e.firstIndex,e.baseVertex,e.firstInstance):this.handle.draw(e.vertexCount||0,e.instanceCount||1,e.firstIndex,e.firstInstance)}drawIndirect(){}setParameters(e){const{blendConstant:t,stencilReference:n,scissorRect:i,viewport:r}=e;t&&this.handle.setBlendConstant(t),n&&this.handle.setStencilReference(n),i&&this.handle.setScissorRect(i[0],i[1],i[2],i[3]),r&&this.handle.setViewport(r[0],r[1],r[2],r[3],r[4],r[5])}pushDebugGroup(e){this.handle.pushDebugGroup(e)}popDebugGroup(){this.handle.popDebugGroup()}insertDebugMarker(e){this.handle.insertDebugMarker(e)}beginOcclusionQuery(e){this.handle.beginOcclusionQuery(e)}endOcclusionQuery(){this.handle.endOcclusionQuery()}getRenderPassDescriptor(e){const t={colorAttachments:[]};if(t.colorAttachments=e.colorAttachments.map((e=>({loadOp:!1!==this.props.clearColor?"clear":"load",colorClearValue:this.props.clearColor||[0,0,0,0],storeOp:this.props.discard?"discard":"store",view:e.handle}))),e.depthStencilAttachment){t.depthStencilAttachment={view:e.depthStencilAttachment.handle};const{depthStencilAttachment:n}=t;this.props.depthReadOnly&&(n.depthReadOnly=!0),n.depthClearValue=this.props.clearDepth||0;!0&&(n.depthLoadOp=!1!==this.props.clearDepth?"clear":"load",n.depthStoreOp="store");!1&&(n.stencilLoadOp=!1!==this.props.clearStencil?"clear":"load",n.stencilStoreOp="store")}return t}}let Zn;Zn=Symbol.toStringTag;class Jn extends Ge.F{get[Zn](){return"ComputePass"}constructor(e,t){super(e,t,Jn.defaultProps)}}Jn.defaultProps={...Ge.F.defaultProps,timestampQuerySet:void 0,beginTimestampIndex:void 0,endTimestampIndex:void 0};class $n extends Jn{constructor(e,t){var n;let i;if(super(e,t),this._webgpuPipeline=null,this.device=e,e.features.has("timestamp-query")){const e=t.timestampQuerySet;e&&(i={querySet:e.handle,beginningOfPassWriteIndex:t.beginTimestampIndex,endOfPassWriteIndex:t.endTimestampIndex})}this.handle=this.props.handle||(null==(n=e.commandEncoder)?void 0:n.beginComputePass({label:this.props.id,timestampWrites:i}))}destroy(){}end(){this.handle.end()}setPipeline(e){const t=e;this.handle.setPipeline(t.handle),this._webgpuPipeline=t,this.setBindings([])}setBindings(e){const t=this._webgpuPipeline._getBindGroup();this.handle.setBindGroup(0,t)}dispatch(e,t,n){this.handle.dispatchWorkgroups(e,t,n)}dispatchIndirect(e,t){void 0===t&&(t=0);const n=e;this.handle.dispatchWorkgroupsIndirect(n.handle,t)}pushDebugGroup(e){this.handle.pushDebugGroup(e)}popDebugGroup(){this.handle.popDebugGroup()}insertDebugMarker(e){this.handle.insertDebugMarker(e)}}class ei extends nn{get[Symbol.toStringTag](){return"WebGPUVertexArray"}constructor(e,t){super(e,t),this.device=e}destroy(){}setIndexBuffer(e){this.indexBuffer=e}setBuffer(e,t){this.attributes[e]=t}bindBeforeRender(e,t,n){const i=e,r=this.indexBuffer;null!=r&&r.handle&&(h.R.warn("setting index buffer",null==r?void 0:r.handle,null==r?void 0:r.indexType)(),i.handle.setIndexBuffer(null==r?void 0:r.handle,null==r?void 0:r.indexType));for(let s=0;s<this.maxVertexAttributes;s++){const e=this.attributes[s];null!=e&&e.handle&&(h.R.warn("setting vertex buffer "+s,null==e?void 0:e.handle)(),i.handle.setVertexBuffer(s,null==e?void 0:e.handle))}}unbindAfterRender(e){}static isConstantAttributeZeroSupported(e){return"Chrome"===(0,sn.X)()}}class ti extends x{constructor(e,t,n){super(n),this.format=navigator.gpu.getPreferredCanvasFormat(),this.depthStencilFormat="depth24plus",this.depthStencilAttachment=null,this.device=e,this.width=-1,this.height=-1,this._setAutoCreatedCanvasId(this.device.id+"-canvas"),this.gpuCanvasContext=this.canvas.getContext("webgpu"),this.format="bgra8unorm"}destroy(){this.gpuCanvasContext.unconfigure()}getCurrentFramebuffer(){this.update();const e=this.getCurrentTexture();return this.width=e.width,this.height=e.height,this._createDepthStencilAttachment(),new Yn(this.device,{colorAttachments:[e],depthStencilAttachment:this.depthStencilAttachment})}update(){const[e,t]=this.getPixelSize();(e!==this.width||t!==this.height)&&(this.width=e,this.height=t,this.depthStencilAttachment&&(this.depthStencilAttachment.destroy(),this.depthStencilAttachment=null),this.gpuCanvasContext.configure({device:this.device.handle,format:Sn(this.format),colorSpace:this.props.colorSpace,alphaMode:this.props.alphaMode}),h.R.log(1,"Resized to "+this.width+"x"+this.height+"px")())}resize(e){this.update()}getCurrentTexture(){return this.device._createTexture({id:this.id+"#color-texture",handle:this.gpuCanvasContext.getCurrentTexture(),format:this.format})}_createDepthStencilAttachment(){return this.depthStencilAttachment||(this.depthStencilAttachment=this.device.createTexture({id:this.id+"#depth-stencil-texture",format:this.depthStencilFormat,width:this.width,height:this.height,usage:GPUTextureUsage.RENDER_ATTACHMENT})),this.depthStencilAttachment}}class ni extends pn{constructor(e,t){super(e,t),this.device=e,this.handle=this.props.handle||this.device.handle.createQuerySet({type:this.props.type,count:this.props.count}),this.handle.label=this.props.id}destroy(){var e;null==(e=this.handle)||e.destroy(),this.handle=null}}class ii extends C{static isSupported(){return Boolean("undefined"!=typeof navigator&&navigator.gpu)}static async create(e){if(!navigator.gpu)throw new Error("WebGPU not available. Open in Chrome Canary and turn on chrome://flags/#enable-unsafe-webgpu");h.R.groupCollapsed(1,"WebGPUDevice created")();const t=await navigator.gpu.requestAdapter({powerPreference:"high-performance"});if(!t)throw new Error("Failed to request WebGPU adapter");const n=await t.requestAdapterInfo();h.R.probe(2,"Adapter available",n)();const i=[],r={};if(e.requestMaxLimits){i.push(...Array.from(t.features));const e=Object.keys(t.limits).filter((e=>!["minSubgroupSize","maxSubgroupSize"].includes(e)));for(const n of e){const e=n,i=t.limits[e];"number"==typeof i&&(r[e]=i)}}const s=await t.requestDevice({requiredFeatures:i,requiredLimits:r});h.R.probe(1,"GPUDevice available")(),"string"==typeof e.canvas&&(await x.pageLoaded,h.R.probe(1,"DOM is loaded")());const o=new ii(s,t,n,e);return h.R.probe(1,"Device created. For more info, set chrome://flags/#enable-webgpu-developer-features")(),h.R.table(1,o.info)(),h.R.groupEnd(1)(),o}constructor(e,t,n,i){super({...i,id:i.id||"webgpu-device"}),this.type="webgpu",this.canvasContext=null,this._isLost=!1,this.commandEncoder=null,this.renderPass=null,this.handle=e,this.adapter=t,this.adapterInfo=n,this.info=this._getInfo(),this.features=this._getFeatures(),this.limits=this.handle.limits,e.addEventListener("uncapturederror",(e=>{const t=e instanceof GPUUncapturedErrorEvent?e.error.message:"Unknown error";this.error(new Error(t))})),this.lost=new Promise((async e=>{const t=await this.handle.lost;this._isLost=!0,e({reason:"destroyed",message:t.message})})),this.canvasContext=new ti(this,this.adapter,{canvas:i.canvas,height:i.height,width:i.width,container:i.container})}destroy(){this.handle.destroy()}isTextureFormatSupported(e){return!e.includes("webgl")}isTextureFormatFilterable(e){return this.isTextureFormatSupported(e)&&!e.startsWith("depth")&&!e.startsWith("stencil")}isTextureFormatRenderable(e){return this.isTextureFormatSupported(e)}get isLost(){return this._isLost}createBuffer(e){const t=this._getBufferProps(e);return new Tn(this,t)}_createTexture(e){return new Nn(this,e)}createExternalTexture(e){return new Pn(this,e)}createShader(e){return new wn(this,e)}createSampler(e){return new bn(this,e)}createRenderPipeline(e){return new zn(this,e)}createFramebuffer(e){return new Yn(this,e)}createComputePipeline(e){return new qn(this,e)}createVertexArray(e){return new ei(this,e)}beginRenderPass(e){return this.commandEncoder=this.commandEncoder||this.handle.createCommandEncoder(),new Qn(this,e)}beginComputePass(e){return this.commandEncoder=this.commandEncoder||this.handle.createCommandEncoder(),new $n(this,e)}createTransformFeedback(e){throw new Error("Transform feedback not supported in WebGPU")}createQuerySet(e){return new ni(this,e)}createCanvasContext(e){return new ti(this,this.adapter,e)}submit(){var e;const t=null==(e=this.commandEncoder)?void 0:e.finish();t&&this.handle.queue.submit([t]),this.commandEncoder=null}_getInfo(){const[e,t]=(this.adapterInfo.driver||"").split(" Version "),n=this.adapterInfo.vendor||this.adapter.__brand||"unknown",i=e||"",r=t||"",s="apple"===n?"apple":"unknown",o=this.adapterInfo.architecture||"unknown",a=this.adapterInfo.backend||"unknown";return{type:"webgpu",vendor:n,renderer:i,version:r,gpu:s,gpuType:(this.adapterInfo.type||"").split(" ")[0].toLowerCase()||"unknown",gpuBackend:a,gpuArchitecture:o,shadingLanguage:"wgsl",shadingLanguageVersion:100}}_getFeatures(){const e=new Set(this.handle.features);e.has("depth-clamping")&&(e.delete("depth-clamping"),e.add("depth-clip-control")),e.has("texture-compression-bc")&&e.add("texture-compression-bc5-webgl");const t=["timer-query-webgl","compilation-status-async-webgl","float32-renderable-webgl","float16-renderable-webgl","norm16-renderable-webgl","texture-filterable-anisotropic-webgl","shader-noperspective-interpolation-webgl"];for(const n of t)e.add(n);return new b(Array.from(e),this.props.disabledFeatures)}copyExternalImageToTexture(e){var t;const{source:n,sourceX:i=0,sourceY:r=0,texture:s,mipLevel:o=0,aspect:a="all",colorSpace:l="display-p3",premultipliedAlpha:c=!1,width:u=s.width,height:h=s.height,depth:d=1}=e,_=s;null==(t=this.handle)||t.queue.copyExternalImageToTexture({source:n,origin:[i,r]},{texture:_.handle,origin:[0,0,0],mipLevel:o,aspect:a,colorSpace:l,premultipliedAlpha:c},[u,h,d])}}ii.type="webgpu",N.registerDevices([vn,ii]);let ri,si={};const oi=(0,c.vt)((e=>({deviceType:void 0,deviceError:void 0,device:void 0,setDeviceType:async t=>{let n,i;try{i=await async function(e){return si[e]=si[e]||N.createDevice({type:e,height:0,container:(ri||(ri=document.createElement("div"),ri.style.display="none",document.body.appendChild(ri)),ri)}),await si[e]}(t)}catch(r){n=r.message}return e((e=>({deviceType:t,deviceError:n,device:i})))}})));oi.getState().setDeviceType("webgl");var ai,li,ci=n(6065);function ui(e,t){return t||(t=e.slice(0)),e.raw=t,e}const hi=ci.Ay.div(ai||(ai=ui(["\n  display: flex;\n  flex-direction: row;\n\n  & > * + * {\n    margin-left: 2px;\n  }\n"]))),di=ci.Ay.div((e=>"\n  cursor: pointer;\n  padding: 10px 20px;\n  font-weight: bold;\n  &:hover {\n    background-color: #eeefef;\n  }\n  "+(e.isSelected?"\n    color: #276EF1;\n    border-bottom: 4px solid #276EF1;\n  ":"")+"\n")),_i=ci.Ay.div(li||(li=ui(["\n  background-color: rgb(250, 248, 245);\n"]))),pi=e=>{var t,n;const{children:r}=e,s=i.Children.toArray(r),[o,a]=(0,i.useState)((null==(t=s[0])?void 0:t.props.tag)||(null==(n=s[0])?void 0:n.props.title));let l=void 0!==e.selectedItem?e.selectedItem:o;const c=void 0!==e.setSelectedItem?e.setSelectedItem:a;return s.some((e=>(e.props.tag||e.props.title)===l))||(l=o),i.createElement(i.Fragment,null,i.createElement(hi,null,s.map((e=>i.createElement(di,{key:e.props.title,isSelected:(e.props.tag||e.props.title)===l,onClick:()=>c(e.props.tag||e.props.title)},e.props.title)))),i.createElement(_i,null,s.find((e=>(e.props.tag||e.props.title)===l))))},fi=e=>{const{children:t}=e;return i.createElement(i.Fragment,null,t)};var gi=n(9813);const mi={devices:["webgl2","webgpu"]},Ei=e=>{e={...mi,...e};const t=oi((e=>e.deviceType)),n=oi((e=>e.deviceError)),r=oi((e=>e.setDeviceType));return i.createElement(pi,{selectedItem:t,setSelectedItem:r},e.devices.includes("webgl2")&&i.createElement(fi,{key:"WebGL2",title:"WebGL2",tag:"webgl"},n),e.devices.includes("webgpu")&&i.createElement(fi,{key:"WebGPU",title:"WebGPU",tag:"webgpu"},n))},Ai=e=>i.createElement(gi.A,null,(()=>i.createElement(Ei,e)));const Ri=e=>{let{f:t}=e;const n=oi((e=>e.device)),r=n?n.info[t]:"N/A";return i.createElement("code",{style:{color:"darkgreen"}},r)},vi=e=>{let{f:t}=e;const n=oi((e=>e.device));return i.createElement("code",{style:{color:"darkgreen"}},function(e,t){return e?e.limits[t]?String(e.limits[t]):"0 \u274c":"N/A"}(n,t))},Ti=e=>{let{f:t}=e;const n=oi((e=>e.device));return i.createElement("span",null,function(e,t){return e?e.features.has(t)?"\u2705":"\u274c":"N/A"}(n,t))},Si=e=>{let{f:t}=e;const n=oi((e=>e.device));return i.createElement("span",{key:t},function(e,t){const n=e&&e.isTextureFormatSupported(t);return e?n?"\u2705":"\u274c":"N/A"}(n,t))},bi=e=>{let{f:t}=e;const n=oi((e=>e.device));return i.createElement("span",null,function(e,t){const n=e&&e.isTextureFormatSupported(t)&&e.isTextureFormatFilterable(t);return e?n?"\u2705":"\u274c":"N/A"}(n,t))},Ci=e=>{let{f:t}=e;const n=oi((e=>e.device)),i=t,r=n&&n.isTextureFormatSupported(i)&&n.isTextureFormatRenderable(i);return n?r?"\u2705":"\u274c":"N/A"};let Ii=0;const Ni={device:null,onAddHTML:()=>"",onInitialize:async()=>null,onRender:()=>{},onFinalize:()=>{},onError:e=>console.error(e),stats:N.stats.get("animation-loop-"+Ii++),useDevicePixels:!0,autoResizeViewport:!1,autoResizeDrawingBuffer:!1};class yi{constructor(e){if(this.device=null,this.canvas=null,this.animationProps=null,this.timeline=null,this.needsRedraw="initialized",this._initialized=!1,this._running=!1,this._animationFrameId=null,this._nextFramePromise=null,this._resolveNextFrame=null,this._cpuStartTime=0,this.props={...Ni,...e},!(e=this.props).device)throw new Error("No device provided");const{useDevicePixels:t=!0}=this.props;this.stats=e.stats||new d.A({id:"animation-loop-stats"}),this.cpuTime=this.stats.get("CPU Time"),this.gpuTime=this.stats.get("GPU Time"),this.frameRate=this.stats.get("Frame Rate"),this.setProps({autoResizeViewport:e.autoResizeViewport,autoResizeDrawingBuffer:e.autoResizeDrawingBuffer,useDevicePixels:t}),this.start=this.start.bind(this),this.stop=this.stop.bind(this),this._onMousemove=this._onMousemove.bind(this),this._onMouseleave=this._onMouseleave.bind(this)}destroy(){this.stop(),this._setDisplay(null)}delete(){this.destroy()}setNeedsRedraw(e){return this.needsRedraw=this.needsRedraw||e,this}setProps(e){return"autoResizeViewport"in e&&(this.props.autoResizeViewport=e.autoResizeViewport||!1),"autoResizeDrawingBuffer"in e&&(this.props.autoResizeDrawingBuffer=e.autoResizeDrawingBuffer||!1),"useDevicePixels"in e&&(this.props.useDevicePixels=e.useDevicePixels||!1),this}async start(){if(this._running)return this;this._running=!0;try{let e;return this._initialized||(this._initialized=!0,await this._initDevice(),this._initialize(),await this.props.onInitialize(this._getAnimationProps())),this._running?(!1!==e&&(this._cancelAnimationFrame(),this._requestAnimationFrame()),this):null}catch(e){const t=e instanceof Error?e:new Error("Unknown error");throw this.props.onError(t),t}}stop(){return this._running&&(this.animationProps&&this.props.onFinalize(this.animationProps),this._cancelAnimationFrame(),this._nextFramePromise=null,this._resolveNextFrame=null,this._running=!1),this}redraw(){var e;return null!=(e=this.device)&&e.isLost||(this._beginFrameTimers(),this._setupFrame(),this._updateAnimationProps(),this._renderFrame(this._getAnimationProps()),this._clearNeedsRedraw(),this._resolveNextFrame&&(this._resolveNextFrame(this),this._nextFramePromise=null,this._resolveNextFrame=null),this._endFrameTimers()),this}attachTimeline(e){return this.timeline=e,this.timeline}detachTimeline(){this.timeline=null}waitForRender(){return this.setNeedsRedraw("waitForRender"),this._nextFramePromise||(this._nextFramePromise=new Promise((e=>{this._resolveNextFrame=e}))),this._nextFramePromise}async toDataURL(){if(this.setNeedsRedraw("toDataURL"),await this.waitForRender(),this.canvas instanceof HTMLCanvasElement)return this.canvas.toDataURL();throw new Error("OffscreenCanvas")}_initialize(){this._startEventHandling(),this._initializeAnimationProps(),this._updateAnimationProps(),this._resizeCanvasDrawingBuffer(),this._resizeViewport()}_setDisplay(e){this.display&&(this.display.destroy(),this.display.animationLoop=null),e&&(e.animationLoop=this),this.display=e}_requestAnimationFrame(){var e;this._running&&(this._animationFrameId=(e=this._animationFrame.bind(this),"undefined"!=typeof window&&window.requestAnimationFrame?window.requestAnimationFrame(e):setTimeout(e,1e3/60)))}_cancelAnimationFrame(){var e;null!==this._animationFrameId&&(e=this._animationFrameId,"undefined"!=typeof window&&window.cancelAnimationFrame?window.cancelAnimationFrame(e):clearTimeout(e),this._animationFrameId=null)}_animationFrame(){this._running&&(this.redraw(),this._requestAnimationFrame())}_renderFrame(e){var t;this.display?this.display._renderFrame(e):(this.props.onRender(this._getAnimationProps()),null==(t=this.device)||t.submit())}_clearNeedsRedraw(){this.needsRedraw=!1}_setupFrame(){this._resizeCanvasDrawingBuffer(),this._resizeViewport()}_initializeAnimationProps(){var e;const t=null==(e=this.device)||null==(e=e.canvasContext)?void 0:e.canvas;if(!this.device||!t)throw new Error("loop");this.animationProps={animationLoop:this,device:this.device,canvas:t,timeline:this.timeline,useDevicePixels:this.props.useDevicePixels,needsRedraw:!1,width:1,height:1,aspect:1,time:0,startTime:Date.now(),engineTime:0,tick:0,tock:0,_mousePosition:null}}_getAnimationProps(){if(!this.animationProps)throw new Error("animationProps");return this.animationProps}_updateAnimationProps(){if(!this.animationProps)return;const{width:e,height:t,aspect:n}=this._getSizeAndAspect();e===this.animationProps.width&&t===this.animationProps.height||this.setNeedsRedraw("drawing buffer resized"),n!==this.animationProps.aspect&&this.setNeedsRedraw("drawing buffer aspect changed"),this.animationProps.width=e,this.animationProps.height=t,this.animationProps.aspect=n,this.animationProps.needsRedraw=this.needsRedraw,this.animationProps.engineTime=Date.now()-this.animationProps.startTime,this.timeline&&this.timeline.update(this.animationProps.engineTime),this.animationProps.tick=Math.floor(this.animationProps.time/1e3*60),this.animationProps.tock++,this.animationProps.time=this.timeline?this.timeline.getTime():this.animationProps.engineTime}async _initDevice(){var e;if(this.device=await this.props.device,!this.device)throw new Error("No device provided");this.canvas=(null==(e=this.device.canvasContext)?void 0:e.canvas)||null}_createInfoDiv(){if(this.canvas&&this.props.onAddHTML){const e=document.createElement("div");document.body.appendChild(e),e.style.position="relative";const t=document.createElement("div");t.style.position="absolute",t.style.left="10px",t.style.bottom="10px",t.style.width="300px",t.style.background="white",this.canvas instanceof HTMLCanvasElement&&e.appendChild(this.canvas),e.appendChild(t);const n=this.props.onAddHTML(t);n&&(t.innerHTML=n)}}_getSizeAndAspect(){var e,t;if(!this.device)return{width:1,height:1,aspect:1};const[n,i]=(null==(e=this.device)||null==(e=e.canvasContext)?void 0:e.getPixelSize())||[1,1];let r=1;const s=null==(t=this.device)||null==(t=t.canvasContext)?void 0:t.canvas;return s&&s.clientHeight?r=s.clientWidth/s.clientHeight:n>0&&i>0&&(r=n/i),{width:n,height:i,aspect:r}}_resizeViewport(){this.props.autoResizeViewport&&this.device.gl&&this.device.gl.viewport(0,0,this.device.gl.drawingBufferWidth,this.device.gl.drawingBufferHeight)}_resizeCanvasDrawingBuffer(){var e;this.props.autoResizeDrawingBuffer&&(null==(e=this.device)||null==(e=e.canvasContext)||e.resize({useDevicePixels:this.props.useDevicePixels}))}_beginFrameTimers(){this.frameRate.timeEnd(),this.frameRate.timeStart(),this.cpuTime.timeStart()}_endFrameTimers(){this.cpuTime.timeEnd()}_startEventHandling(){this.canvas&&(this.canvas.addEventListener("mousemove",this._onMousemove.bind(this)),this.canvas.addEventListener("mouseleave",this._onMouseleave.bind(this)))}_onMousemove(e){e instanceof MouseEvent&&(this._getAnimationProps()._mousePosition=[e.offsetX,e.offsetY])}_onMouseleave(e){this._getAnimationProps()._mousePosition=null}}var Li=n(4327);"undefined"!=typeof window&&(window.website=!0);const Pi=e=>{let t="ssr";const[n,r]=(0,i.useState)(null),s=(0,i.useRef)(new WeakMap),o=(0,i.useRef)(null),a=oi((e=>e.deviceType));return t=e.container||"luma-example-container-"+a,(0,i.useEffect)((()=>{if(!n||s.current.get(n))return;s.current.set(n,!0);let i=null,r=null;const l=async()=>{var s;n.style.width="100%",n.style.height="100%",r=await N.createDevice({type:a,canvas:n,container:t}),i=function(e,t){let n=null;const i=(null==t?void 0:t.device)||N.createDevice(),r=new yi({...t,device:i,async onInitialize(t){var i;return n=new e(t),await(null==(i=n)?void 0:i.onInitialize(t))},onRender:e=>{var t;return null==(t=n)?void 0:t.onRender(e)},onFinalize:e=>{var t;return null==(t=n)?void 0:t.onFinalize(e)}});return r.getInfo=()=>this.AnimationLoopTemplateCtor.info,r}(e.template,{device:r,autoResizeViewport:!0,autoResizeDrawingBuffer:!0}),null==(s=i)||s.start();const o="https://raw.githubusercontent.com/visgl/luma.gl/master";e.directory?(0,Li.Qj)(o+"/examples/"+e.directory+"/"+e.id+"/"):(0,Li.Qj)(o+"/website/static/images/")};return o.current=Promise.resolve(o.current).then((()=>{l().catch((e=>{console.error("start "+a+" failed",e)}))})),()=>{o.current=Promise.resolve(o.current).then((()=>{i&&(i.destroy(),i=null),r&&r.destroy()})).catch((e=>{console.error("unmounting "+a+" failed",e)}))}}),[a,n]),i.createElement("canvas",{key:a,ref:r})}},1020:(e,t,n)=>{"use strict";var i=n(6540),r=Symbol.for("react.element"),s=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,a=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,n){var i,s={},c=null,u=null;for(i in void 0!==n&&(c=""+n),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(u=t.ref),t)o.call(t,i)&&!l.hasOwnProperty(i)&&(s[i]=t[i]);if(e&&e.defaultProps)for(i in t=e.defaultProps)void 0===s[i]&&(s[i]=t[i]);return{$$typeof:r,type:e,key:c,ref:u,props:s,_owner:a.current}}t.Fragment=s,t.jsx=c,t.jsxs=c},4848:(e,t,n)=>{"use strict";e.exports=n(1020)},4023:()=>{},8453:(e,t,n)=>{"use strict";n.d(t,{R:()=>o,x:()=>a});var i=n(6540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);